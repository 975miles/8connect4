{"version":3,"sources":["theme/index.js","Dialog/index.js","Dialog/show.js","socket/Connect/ing.js","socket/Connect/Failed.js","Home/CodeInput.js","Home/NameInput.js","Home/showMatchOptions.js","Home/index.js","Lobby/index.js","Match/index.js","Results/index.js","Match/images.js","Match/shuffleString.js","Match/controller.js","Match/gameplay.js","socket/index.js"],"names":["theme","createMuiTheme","palette","type","background","default","primary","main","overrides","MuiButton","textPrimary","borderRadius","border","color","padding","boxShadow","textSecondary","Dialog","props","state","open","handleOpen","bind","handleClose","this","setState","classes","onClose","disablePortal","aria-labelledby","aria-describedby","disableBackdropClick","required","disableEscapeKeyDown","DialogTitle","id","title","DialogContent","dividers","DialogContentText","className","text","description","children","DialogActions","Button","onClick","buttonText","buttonAction","React","Component","withStyles","margin","showDialog","a","Promise","res","Object","assign","ReactDOM","render","ThemeProvider","CssBaseline","ref","element","dialog","document","getElementById","setTimeout","Connecting","CircularProgress","ConnectFailed","error","size","window","location","reload","CodeInput","code","changeInput","tryCode","event","target","value","replace","socket","emit","search","length","slice","history","pushState","htmlFor","FormControl","clsx","textField","variant","InputLabel","FilledInput","onChange","autoComplete","inputProps","textInput","maxLength","onKeyDown","e","key","endAdornment","InputAdornment","position","IconButton","aria-label","edge","spacing","marginBottom","joinLabel","display","marginTop","marginRight","width","textTransform","useStyles","makeStyles","input","label","textAlign","NameInput","useState","localStorage","name","setName","changeName","newName","first","Grid","container","justify","alignItems","item","TextField","activeElement","blur","InputLabelProps","allowedPlayers","maxGamesAllowed","formControl","minWidth","selectEmpty","timerMarks","timerMarksFormat","n","options","public","players","gameMax","turnTime","runDownTimer","MatchOptions","JSON","parse","NumberTweaker","ButtonGroup","fn","disabled","min","max","publicity","setPublicity","setPlayers","setGameMax","indexOf","setTurnTime","setRunDownTimer","Divider","style","FormLabel","Typography","component","Switch","checked","change","Slider","step","marks","keys","map","String","getAriaValueText","valueLabelFormat","valueLabelDisplay","FormControlLabel","control","Checkbox","labelPlacement","stringify","showMatchOptions","logoImage","maxWidth","controls","Home","gutterBottom","src","alt","root","privacyIcon","table","head","backgroundColor","tableCell","you","fontWeight","Lobby","tableBody","amHost","startsWith","matchInfo","host","i","content","push","TableRow","TableCell","Tooltip","fontSize","starting","bot","maxPlayers","Audio","startTimer","play","copyHelp","copyTitle","setCopyTitle","copy","protocol","TableContainer","Paper","Table","TableHead","anchorEl","setAnchorEl","Boolean","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","diff","index","TableBody","gameInfo","justifyContent","top","borderBottom","zIndex","flexGrow","gameInfoTitle","gameInfoContent","colourIndicator","height","playerArea","paddingTop","paddingBottom","selfGameImage","otherGameImage","playingGamesContainer","playingGames","flexWrap","otherGamesContainer","otherGames","vsMe","GameImage","colour","game","find","c","playerId","opponent","player","data-playercolour","playerColour","self","games","myId","TurnTakenIndicator","cx","cy","r","fill","PlayerGames","gameRowClass","filter","b","Match","selfPlayer","gamesContainer","marginLeft","gameImage","counterImage","otherPlayer","Results","playerClass","winnersStop","results","score","join","placement","outcome","shuffleString","images","Image","hover","outcomeOverlay","img","boxSize","canvas","createElement","ctx","getContext","slot","turn","clearRect","fillStyle","boardWidth","fillRect","changedTouches","bbox","getBoundingClientRect","x","clientX","left","y","clientY","newSlot","Math","floor","image","complete","drawImage","move","addEventListener","gamesLeft","gameNameChars","placeAudio","otherPlaceAudio","gameEndAudio","startTurnAudio","intervals","turnNumber","turnTimerEnd","Date","now","showTimer","timeLeft","innerHTML","toFixed","switchTurn","newTurn","getElementsByClassName","classList","add","remove","controller","drawCounter","column","row","Number","checkLine","d","drawBoard","overlayImage","isDraw","j","piece","boardHeight","globalAlpha","winner","winLocation","toDataURL","drawBoardsOfId","board","socketIOClient","serverLocation","transports","connectedOnce","displayConnectionFail","disconnected","toString","disconnect","on","kicker","started","startingMatchInfo","sentId","appendChild","touchAction","timer","setInterval","gameplay","gameId","querySelectorAll","boardId","relativeOutcome","getAttribute","clearInterval","end","sort","status","setAttribute"],"mappings":"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","file":"static/js/main.0c9a9855.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n\n        background: {\n            default: '#050505',\n        },\n\n        primary: {\n            main: '#d49a3d',\n        },\n    },\n\n    overrides: {\n        MuiButton: {\n            textPrimary: {\n                background: 'linear-gradient(45deg, #ff7b00 0%, #ff00ff 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            },\n\n            textSecondary: {\n                background: 'linear-gradient(45deg, rgb(255,37,180) 30%, rgb(198,19,19) 90%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            }\n        },\n    },\n});\n\nexport default theme;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MUIDialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = theme => ({\n    text: {\n        margin: 0,\n    },\n});\n\nclass Dialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleOpen() {\n        this.setState({open: true});\n    };\n\n    handleClose() {\n        this.setState({open: false});\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <MUIDialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    disablePortal\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={this.props.required}\n                    disableEscapeKeyDown={this.props.required}\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText className={classes.text} id=\"alert-dialog-description\">\n                            {this.props.description}\n                        </DialogContentText>\n                        {this.props.children}\n                    </DialogContent>\n                    <DialogActions>\n                        {this.props.required ? null : (\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                Close\n                            </Button>\n                        )}\n                        {this.props.buttonText ? (\n                            <Button onClick={this.props.buttonAction} color=\"primary\">\n                                {this.props.buttonText}\n                            </Button>\n                        ) : null}\n                    </DialogActions>\n                </MUIDialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Dialog);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Dialog from './';\n\nasync function showDialog(props = {}, children = null) {\n    return new Promise(async res => {\n        props = Object.assign({\n            title: 'Dialog title',\n            required: false,\n        }, props);\n    \n        let dialog;\n        ReactDOM.render((\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Dialog {...props} ref={element => dialog = element}>\n                    {children}\n                </Dialog>\n            </ThemeProvider>\n        ), document.getElementById('dialog'));\n        \n        if (!dialog) //if it didnt work,\n            setTimeout(async () => res(await showDialog(props, children)), 100); //try it again with a delay (yes i know i shouldnt but shut up it works)\n        else {\n            dialog.handleOpen();\n            res(dialog);\n        }\n    });\n}\n\nexport default showDialog;","import React from 'react';\nimport './centred.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Connecting() {\n    return (\n        <div className=\"centred\">\n            <CircularProgress />\n            <h3>Attempting to connect to the 8connect4 server...</h3>\n        </div>\n    );\n}\n\nexport default Connecting;","import React from 'react';\nimport './centred.css';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\n\nfunction ConnectFailed(props) {\n    return (\n        <div className=\"centred\">\n            <ClearIcon />\n            <h3>Failed to connect to the 8connect4 server.</h3>\n            {props.error ? <p>Error: \"{props.error}\"</p> : null}\n            <h4>Are you offline? If not, the 8connect4 server might be down.</h4>\n            <Button size=\"large\" color=\"primary\" onClick={() => window.location.reload(false)}>Retry</Button>\n        </div>\n    );\n}\n\nexport default ConnectFailed;","import React from 'react';\nimport socket from '../socket/';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst useStyles = theme => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    joinLabel: {\n        display: 'inline-block',\n        marginTop: 22,\n        marginRight: 4,\n    },\n    textField: {\n        width: '18ch',\n    },\n    textInput: {\n        textTransform: 'uppercase',\n    },\n});\n\nclass CodeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n        };\n        this.changeInput = this.changeInput.bind(this);\n        this.tryCode = this.tryCode.bind(this);\n    }\n\n    changeInput(event) {\n        let code = event.target.value; //get the code entered from the input element\n        code = code.replace(' ', ''); //remove spaces, if any\n        this.setState({code}); //store the code in the state, so that it can be shown on the input element and accessed when the join button is clicked\n    }\n\n    tryCode() {\n        socket.emit('joinMatch', this.state.code);\n    }\n\n    componentDidMount() {\n        if (window.location.search.length > 1) {\n            this.setState({code: window.location.search.slice(1)}, () => this.tryCode());\n            window.history.pushState('', '', '/');\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <label {...{}/*className={classes.joinLabel}*/} htmlFor=\"roomCodeInput\">Or, join by code:</label>\n                <br />\n\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"roomCodeInput\">Room code</InputLabel>\n                    <FilledInput\n                        id=\"roomCodeInput\"\n                        type=\"text\"\n                        value={this.state.code}\n                        onChange={this.changeInput}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.textInput,\n                            maxLength: 6,\n                            onKeyDown: e => {if (e.key == 'Enter') this.tryCode()},\n                        }}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Join\"\n                                    onClick={this.tryCode}\n                                    edge=\"end\"\n                                >\n                                    <ArrowForwardIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CodeInput);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport socket from '../socket';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        width: 170,\n    },\n    label: {\n        textAlign: 'center',\n    },\n}));\n\nfunction NameInput() {\n    const classes = useStyles();\n    const [name, setName] = React.useState(localStorage.name ? localStorage.name : '');\n    const changeName = (newName, first = false) => {\n        if (!first)\n            setName(newName);\n        localStorage.name = newName;\n        socket.emit('changeName', newName);\n    }\n    changeName(name, true);\n\n    const handleChange = event => changeName(event.target.value)\n\n    return (\n        <div className={classes.margin}>\n            <Grid container justify=\"center\" spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <AccountCircle />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"nameInput\"\n                        label=\"Your name\"\n                        value={name}\n                        onChange={handleChange}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.input,\n                            maxLength: 12,\n                            onKeyDown: e => {if (e.key == 'Enter') document.activeElement.blur()},\n                        }}\n                        InputLabelProps={{\n                            className: classes.label,\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default NameInput","import React from 'react';\nimport { Typography, Divider, FormControl, Select, MenuItem, InputLabel, FormLabel, Slider, Grid, Switch, Button, ButtonGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport showDialog from '../Dialog/show';\nimport socket from '../socket';\nconst allowedPlayers = [1, 25];\nconst maxGamesAllowed = [1, 4];\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 300,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n}));\n\nconst timerMarks = [\n    1,\n    2,\n    3,\n    5,\n    8,\n    12,\n    15,\n    20,\n    30,\n    45,\n    60,\n    120,\n];\nconst timerMarksFormat = n => `${timerMarks[n]}s`;\n\nvar options = {\n    public: false,\n    players: 9,\n    gameMax: 4,\n    turnTime: 8,\n    runDownTimer: true,\n    ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions) : {}\n};\n\nfunction NumberTweaker(props) {\n    return (\n        <ButtonGroup size=\"small\">\n            <Button onClick={() => props.fn(-10)} disabled={props.state == props.min}>- -</Button>\n            <Button onClick={() => props.fn(-1)} disabled={props.state == props.min}>-</Button>\n            <Button disabled>{props.state}</Button>\n            <Button onClick={() => props.fn(+1)} disabled={props.state == props.max}>+</Button>\n            <Button onClick={() => props.fn(+10)} disabled={props.state == props.max}>++</Button>\n        </ButtonGroup>\n    );\n}\n\nfunction MatchOptions() {\n    const classes = useStyles();\n\n    const [publicity, setPublicity] = React.useState(options.public);\n    const handlePublicityChange = event => {\n        options.public = !publicity;\n        setPublicity(!publicity);\n    };\n    const [players, setPlayers] = React.useState(options.players);\n    const changePlayers = change => {\n        options.players += change;\n        if (options.players < allowedPlayers[0]) options.players = allowedPlayers[0];\n        if (options.players > allowedPlayers[1]) options.players = allowedPlayers[1];\n        setPlayers(options.players);\n    };\n    const [gameMax, setGameMax] = React.useState(options.gameMax);\n    const changeGameMax = change => {\n        options.gameMax += change;\n        if (options.gameMax < maxGamesAllowed[0]) options.gameMax = maxGamesAllowed[0];\n        if (options.gameMax > maxGamesAllowed[1]) options.gameMax = maxGamesAllowed[1];\n        setGameMax(options.gameMax);\n    };\n    const [turnTime, setTurnTime] = React.useState(timerMarks.indexOf(options.turnTime));\n    const handleTurnTimeChange = (event, value) => {\n        options.turnTime = timerMarks[value];\n        setTurnTime(value);\n    };\n    const [runDownTimer, setRunDownTimer] = React.useState(options.runDownTimer);const\n    handleRunDownTimerChange = event => {\n        options.runDownTimer = !runDownTimer;\n        setRunDownTimer(!runDownTimer);\n    };\n\n    return (\n        <div>\n            <Divider style={{marginTop: 16, marginBottom: 8}} />\n\n            <FormLabel>Privacy</FormLabel>\n            <Typography component=\"div\">\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                    <Grid item><LockIcon /></Grid>\n                    <Grid item>\n                        <Switch color=\"primary\" checked={publicity} onChange={handlePublicityChange} />\n                    </Grid>\n                    <Grid item><PublicIcon /></Grid>\n                </Grid>\n            </Typography>\n\n            <Divider />\n            \n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Max players</FormLabel>\n                <NumberTweaker fn={changePlayers} min={allowedPlayers[0]} max={allowedPlayers[1]} state={players} />\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Max games per player per colour</FormLabel>\n                <NumberTweaker fn={changeGameMax} min={maxGamesAllowed[0]} max={maxGamesAllowed[1]} state={gameMax} />\n            </FormControl>\n\n            {/*<FormControl className={classes.formControl}>\n                <InputLabel>Players</InputLabel>\n                <Select value={players} onChange={handlePlayersChange}>\n                    {[...Array(allowedPlayersMax+1).keys()].slice(allowedPlayersMin).map(i => <MenuItem value={i}>{i}</MenuItem>)}\n                </Select>\n            </FormControl>*/}\n\n            <Divider style={{marginBottom: 8}} />\n\n            <FormLabel>Turn time</FormLabel>\n            <Slider\n                value={turnTime}\n                onChange={handleTurnTimeChange}\n                step={null}\n                marks={[...timerMarks.keys()].map(n => ({value: n, label: String(timerMarks[n])}))}\n                min={0}\n                max={timerMarks.length-1}\n                getAriaValueText={timerMarksFormat}\n                valueLabelFormat={timerMarksFormat}\n                valueLabelDisplay=\"auto\"\n            />\n            \n            <Divider style={{marginBottom: 8}} />\n\n            <FormControlLabel\n                control={<Checkbox color=\"primary\" checked={runDownTimer} onChange={handleRunDownTimerChange} />}\n                label=\"Always run down turn timer?\"\n                labelPlacement=\"start\"\n            />\n        </div>\n    );\n}\n  \n\nasync function showMatchOptions() {\n    let elem;\n\n    let dialog = await showDialog({\n        title: 'Create Match',\n        description: 'Match options:',\n        buttonText: 'Create',\n        buttonAction: () => {\n            dialog.handleClose();\n            localStorage.MatchOptions = JSON.stringify(options);\n            socket.emit('createMatch', options);\n        },\n    }, <MatchOptions />);\n}\n\nexport default showMatchOptions;","import React from 'react';\nimport { Typography, Button, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeInput from './CodeInput';\nimport NameInput from './NameInput';\nimport socket from '../socket';\nimport showMatchOptions from './showMatchOptions';\n\nconst useStyles = makeStyles({\n    logoImage: {\n        display: 'block',\n        textAlign: 'center',\n        margin: 'auto',\n        maxWidth: 350,\n    },\n\n    controls: {\n        textAlign: 'center',\n        border: '1px solid #ffffff1f',\n        borderRadius: 10,\n    },\n});\n\nfunction Home() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Typography className={classes.title} variant=\"h3\" gutterBottom><img className={classes.logoImage} src=\"/iconanimated.png\" alt=\"8connect4\" /></Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                Play 8 games of connect 4 at once.\n            </Typography>\n\n            <div className={classes.controls}>\n                <NameInput />\n\n                <Divider />\n                <br />\n\n                <Button size=\"large\" color=\"primary\" onClick={() => socket.emit('findMatch')}>Find Match</Button>\n                <br />\n                <Button size=\"small\" color=\"secondary\" onClick={showMatchOptions}>Create Match</Button>\n\n                <br /><br /><br />\n\n                <CodeInput />\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Typography, Divider, Button, ButtonGroup, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Popover } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport LinkIcon from '@material-ui/icons/Link';\nimport socket from '../socket';\nimport copy from 'clipboard-copy';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    privacyIcon: {\n        marginRight: 10\n    },\n\n    table: {\n        width: 400,\n        margin: 'auto',\n    },\n\n    head: {\n        backgroundColor: 'black',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    you: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n});\n\nfunction Lobby(props) {\n    const classes = useStyles();\n\n    let tableBody = [];\n    let amHost = socket.id.startsWith(props.matchInfo.host);\n    for (let i = 0; i < props.matchInfo.maxPlayers; i++) {\n        let content = '';\n        let you = false;\n        if (i in props.matchInfo.players) {\n            content = props.matchInfo.players[i].name;\n            you = socket.id.startsWith(props.matchInfo.players[i].id);\n        }\n        tableBody.push(\n            <TableRow key={i}>\n                <TableCell className={classes.tableCell}>\n                    {i in props.matchInfo.players && props.matchInfo.host == props.matchInfo.players[i].id ?\n                        <Tooltip title=\"This player is the host. They have the ability to start the game.\">\n                            <StarsIcon fontSize=\"inherit\" />\n                        </Tooltip>\n                    : null}\n                    {you ? <span className={classes.you}>{content}</span> : content}\n                    {i in props.matchInfo.players && amHost && !props.matchInfo.starting && !you ? <span>\n                        <Tooltip title=\"Kick - remove this player from this lobby.\">\n                            <IconButton size=\"small\" onClick={() => socket.emit('kick', props.matchInfo.players[i].id)}><ClearIcon fontSize=\"inherit\" /></IconButton>\n                        </Tooltip>\n                        {!props.matchInfo.players[i].bot ? \n                            <Tooltip title=\"Promote - transfer your host privileges to this player.\" onClick={() => socket.emit('promote', props.matchInfo.players[i].id)}>\n                                <IconButton size=\"small\"><StarBorderIcon fontSize=\"inherit\" /></IconButton>\n                            </Tooltip>\n                        : null}\n                    </span> : null}\n                </TableCell>\n            </TableRow>\n        );\n    }\n\n    if (props.matchInfo.starting) {\n        (new Audio(`/countdown/${props.matchInfo.startTimer}.mp3`)).play();\n    }\n\n    let copyHelp = 'Copy a link others can use to join this lobby to your clipboard.';\n    let [copyTitle, setCopyTitle] = React.useState(copyHelp);\n\n    return (\n        <div>\n            <IconButton onClick={() => window.location.reload()}>\n                <MeetingRoomIcon />\n            </IconButton>\n            <div className={classes.root}>\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    Room code\n                </Typography>\n                <Typography variant=\"h3\" gutterBottom>\n                    <span className={classes.privacyIcon}>\n                        {props.matchInfo.public ? <Tooltip title=\"This is a public match. Anyone can join this match from the 'Find Match' button on the homepage.\"><PublicIcon /></Tooltip> : <Tooltip title=\"This is a private match. Only people with the room code can join.\"><LockIcon /></Tooltip>}\n                    </span>\n                    {props.matchInfo.code}\n                    <Tooltip title={copyTitle}>\n                        <IconButton onClick={() => {\n                            copy(`${window.location.protocol}//${window.location.host}?${props.matchInfo.code}`);\n                            setCopyTitle('Copied to clipboard!');\n                            setTimeout(() => {\n                                setCopyTitle(copyHelp);\n                            }, 3000);\n                        }}><LinkIcon /></IconButton>\n                    </Tooltip>\n                </Typography>\n\n                {props.matchInfo.starting ?\n                    <Typography variant=\"h4\">Starting in {props.matchInfo.startTimer}...</Typography>\n                :\n                    <Tooltip title={amHost ? 'Begin a timer to start the match. No more players will be able to join.' : 'Only the host can start the match.'}>\n                        <span>\n                            <Button color={amHost ? 'primary' : 'default'} size=\"large\" onClick={() => socket.emit('startMatch')} disabled={!amHost}>Start Match</Button>\n                        </span>\n                    </Tooltip>\n                }\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow className={classes.head}>\n                                <TableCell className={classes.tableCell}>\n                                    Players: {props.matchInfo.players.length}/{props.matchInfo.maxPlayers}\n                                    {(() => {\n                                        \n                                        const [anchorEl, setAnchorEl] = React.useState(null);\n\n                                        const handleClick = (event) => {\n                                            setAnchorEl(event.currentTarget);\n                                        };\n\n                                        const handleClose = () => {\n                                            setAnchorEl(null);\n                                        };\n\n                                        const open = Boolean(anchorEl);\n\n                                        return (\n                                            <span>\n                                                {amHost ? <span>\n                                                    <Tooltip title=\"Add bot\">\n                                                        <IconButton size=\"small\" onClick={handleClick}>🤖</IconButton>\n                                                    </Tooltip>\n                                                    <Popover\n                                                        open={open}\n                                                        anchorEl={anchorEl}\n                                                        onClose={handleClose}\n                                                        anchorOrigin={{\n                                                            vertical: 'bottom',\n                                                            horizontal: 'center',\n                                                        }}\n                                                        transformOrigin={{\n                                                            vertical: 'top',\n                                                            horizontal: 'center',\n                                                        }}\n                                                    >\n                                                        <ButtonGroup variant=\"text\" color=\"default\" aria-label=\"text primary button group\">\n                                                            {['Easy', 'Medium', 'Hard'].map((diff, index) => <Button onClick={() => socket.emit('bot', index)}>{diff}</Button>)}\n                                                        </ButtonGroup>\n                                                    </Popover>\n                                                </span> : null}\n                                            </span>\n                                        );\n                                    })()}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tableBody}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    );\n}\n\nexport default Lobby;","import React from 'react';\nimport { Typography, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './index.css';\n\nconst useStyles = makeStyles({\n    gameInfo: {\n        display: 'flex',\n        width: '100%',\n        marginBottom: 20,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'black',\n        borderBottom: '1px solid #ffffff1f',\n        zIndex: 100,\n        '& div': {\n            flexGrow: 1,\n        },\n    },\n\n    gameInfoTitle: {\n        textAlign: 'center',\n    },\n\n    gameInfoContent: {\n        display: 'flex',\n        alignItems: 'end',\n        justifyContent: 'center',\n        /*textAlign: 'center',\n        '& *': {\n            display: 'inline',\n        },*/\n    },\n\n    title: {\n        textAlign: 'center',\n    },\n\n    colourIndicator: {\n        height: 49,\n    },\n\n    playerArea: {\n        paddingTop: 8,\n        paddingBottom: 8,\n        marginBottom: 16,\n        textAlign: 'center',\n        border: '1px solid #ffffff1f',\n        borderRadius: 10,\n    },\n\n    selfGameImage: {\n        width: 125,\n    },\n\n    otherGameImage: {\n        width: 100,\n    },\n\n    playingGamesContainer: {\n    },\n\n    playingGames: {\n        display: 'flex',\n        maxWidth: 600,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    otherGamesContainer: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    otherGames: {\n        display: 'flex',\n        maxWidth: 600,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    vsMe: {\n        color: 'red',\n    }\n});\n\nfunction GameImage(props) {\n    const classes = useStyles();\n    let colour = Object.keys(props.game.players).find(c => props.playerId.startsWith(props.game.players[c]));\n    let opponent = props.players.find(player => player.id.startsWith(props.game.players[colour == 'a' ? 'b' : 'a']));// props.players.find(player => player.id.startsWith(Object.values(props.game.players).find(player => !props.playerId.startsWith(player))));\n\n    return (\n        <div>\n            <img data-playercolour={props.playerColour} className={`${props.self ? 'self-game ' : ''}${props.self ? classes.selfGameImage : classes.otherGameImage} ${props.self && props.games.length == 1 && props.playerColour == 'b' ? 'game-b' : `game-${colour}`} game${props.game.id}`} />\n            <Typography variant=\"caption\" display=\"block\">\n                Game {props.game.name} vs {props.myId.startsWith(opponent.id) ? <span className={classes.vsMe}>{opponent.name}</span> : opponent.name}\n            </Typography>\n        </div>\n    );\n}\n\nconst turnTakenIndicatorSize = 13;\nfunction TurnTakenIndicator(props) {\n    return (\n        <svg height={props.size} width={props.size}>\n            <circle id={`playerTurnIndicator-${props.player}`} cx={props.size/2} cy={props.size/2} r={props.size/2} fill=\"red\" />\n        </svg>\n    );\n}\n\nfunction PlayerGames(props) {\n    const classes = useStyles();\n    let gameRowClass = props.self ? classes.playingGames : classes.otherGames;\n\n    return (\n        <div className={classes.playerArea}>\n            {\n                props.self\n                ?\n                <div>\n                    <Typography variant=\"h4\">{props.player.name} <TurnTakenIndicator size={23} player={props.player.id.slice(0, 6)} /></Typography>\n                    <Divider />\n                </div>\n                :\n                <Typography variant=\"h6\" gutterBottom>{props.player.name} <TurnTakenIndicator size={14} player={props.player.id} /></Typography>\n            }\n            <div className={props.self ? classes.playingGamesContainer : classes.otherGamesContainer}>\n                <div className={gameRowClass}>\n                    {props.self ? <img className={`${classes.colourIndicator} colour-indicator-a`} src=\"/a.png\" /> : null}\n                    {props.games.filter(game => props.player.id.startsWith(game.players.a)).map(game => <GameImage self={props.self} game={game} games={props.games} players={props.players} playerColour={'a'} playerId={props.player.id} myId={props.myId} />)}\n                    {props.self ? null : <img className={`${classes.colourIndicator} colour-indicator-a`} src=\"/a.png\" />}\n                </div>\n                {props.self ? <div id=\"controller\" className={classes.controls} /> : null}\n                <div className={gameRowClass}>\n                    <img className={`${classes.colourIndicator} colour-indicator-b`} src=\"/b.png\" />\n                    {props.games.filter(game => props.player.id.startsWith(game.players.b)).map(game => <GameImage self={props.self} game={game} games={props.games} players={props.players} playerColour={'b'} playerId={props.player.id} myId={props.myId} />)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction Match(props) {\n    const classes = useStyles();\n    let selfPlayer = props.players.find(player => props.myId.startsWith(player.id));\n\n    return (\n        <div>\n            <div className={classes.gameInfo}>\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Ongoing games\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <span id=\"gamesLeft\">0</span>\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            /<span id=\"maxGames\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Turn time left\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <span id=\"turnTime\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Turn\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <img height=\"35\" id=\"turnIndicator\" />\n                            <span id=\"turnNumber\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <PlayerGames player={selfPlayer} players={props.players} games={props.games} self={true} myId={props.myId} />\n                {props.players.filter(player => !props.myId.startsWith(player.id)).map(player => (\n                    <PlayerGames player={player} players={props.players} games={props.games} self={false} myId={props.myId} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Match;","import React from 'react';\nimport { Typography, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\n//import { gameNameChars } from '../Match/gameplay';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    gamesContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        '& div': {\n            marginLeft: 25,\n            marginRight: 25,\n        },\n    },\n\n    gameImage: {\n        width: 150,\n    },\n\n    counterImage: {\n        height: 10,\n    },\n\n    you: {\n        color: 'red',\n    },\n\n    otherPlayer: {\n    },\n});\n\nfunction Results(props) {\n    const classes = useStyles();\n\n    let playerClass = player => {\n        return props.myId.startsWith(player.id) ? classes.you : classes.otherPlayer;\n    }\n\n    let winnersStop = 0;\n    for (let i = 1; i < props.results.length; i++) {\n        if (props.results[i].score == props.results[0].score)\n            winnersStop = i;\n        else\n            break;\n    }\n\n    (new Audio('/endMatch.mp3')).play();\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <IconButton onClick={() => window.location.reload()}>\n                    <HomeIcon />\n                </IconButton>\n\n                <Typography variant=\"h2\">\n                    Winner{winnersStop == 0 ? '' : 's'}:\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    {props.results.slice(0, winnersStop+1).map(player => player.name).join(', ')}\n                </Typography>\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {props.results.map(player => (\n                                <TableRow>\n                                    <TableCell className={classes.tableCell}>\n                                        {player.placement}. {props.myId.startsWith(player.id) ? <span className={classes.you}>{player.name}</span> : player.name} with a score of {player.score}.\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Typography variant=\"h3\">\n                    Games\n                </Typography>\n                <div className={classes.gamesContainer}>\n                    {props.games.map(game => (\n                        <div>\n                            <img src={game.src} className={classes.gameImage} />\n                            <Typography variant=\"caption\" display=\"block\">\n                                Game {game.name}\n                                <br />\n                                <span className={playerClass(game.players.a)}>{game.players.a.name}</span> <img className={classes.counterImage} src=\"/a.png\" /> vs <img className={classes.counterImage} src=\"/b.png\" /> <span className={playerClass(game.players.b)}>{game.players.b.name}</span>\n                                <br />\n                                {game.outcome == false ? 'Draw' : <span>Winner: <img className={classes.counterImage} src={`/${game.outcome}.png`} /></span>}\n                            </Typography>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Results;","const images = {\n    a: new Image(),\n    b: new Image(),\n    hover: {},\n    outcomeOverlay: {}\n};\n\nfor (let i of ['a', 'b']) {\n    let src = `/${i}.png`;\n    images[i].src = src;\n    images.hover[i] = new Image();\n    images.hover[i].src = `/hover_${i}.png`;\n}\n\nfor (let i of ['win', 'loss', 'draw', 'end']) {\n    let img = new Image();\n    img.src = `/outcome/${i}.png`;\n    images.outcomeOverlay[i] = img;\n}\n\nexport default images;","function getRandomInt(n) {\n    return Math.floor(Math.random() * n);\n}\n\nfunction shuffleString(s) {\n    let arr = s.split('');\n    let n = arr.length;\n\n    for(let i=0 ; i<n-1 ; ++i) {\n        let j = getRandomInt(n);\n        \n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n    s = arr.join('');\n    return s;\n}\n\nexport default shuffleString;","import images from './images';\nimport socket from '../socket';\n\nconst boxSize = 100;\nconst gridlineSize = 4;\nconst boardWidth = 7;\n\nvar canvas = document.createElement('canvas');\ncanvas.width = ((gridlineSize + boxSize) * boardWidth) + gridlineSize;\ncanvas.height = boxSize + (gridlineSize * 2);\nvar ctx = canvas.getContext('2d');\n\nvar slot = null;\nvar turn = 'a';\n\nfunction turnChange(newTurn) {\n    turn = newTurn;\n    slot = null;\n    render();\n}\n\nfunction render(event = null) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //clear canvas\n    ctx.fillStyle = 'white';\n\n    for (let i = 0; i < boardWidth + 1; i++)\n        ctx.fillRect((boxSize+gridlineSize)*i, 0, gridlineSize, canvas.height);\n    for (let i = 0; i < 2; i++)\n        ctx.fillRect(0, (boxSize+gridlineSize)*i, canvas.width, gridlineSize);\n\n    if (event != null) {\n        if (event.type.startsWith('touch'))\n            event = event.changedTouches[0];\n        let bbox = event.target.getBoundingClientRect();\n        let x = (event.clientX - bbox.left - gridlineSize) * (canvas.width / bbox.width);\n        let y = (event.clientY - bbox.top - gridlineSize) * (canvas.height / bbox.height);\n        if (x < 0 || y < 0) return;\n\n        if (y >= boxSize) return;\n        if (x%(boxSize+gridlineSize) >= boxSize) return;\n\n        let newSlot = Math.floor(x/(boxSize+gridlineSize));\n        if (slot != newSlot) {\n            slot = newSlot;\n            socket.emit('hover', slot);\n        }\n    }\n\n    if (slot != null) {\n        let image = images[turn];\n        if (image.complete)\n            ctx.drawImage(image, gridlineSize+((boxSize+gridlineSize)*slot), gridlineSize, boxSize, boxSize);\n    }\n}\n\nfunction move() {\n    socket.emit('move', turn, slot);\n    slot = null;\n    socket.emit('hover', slot);\n    render();\n}\n\nrender();\ncanvas.addEventListener('mousemove', render);\ncanvas.addEventListener('touchstart', render);\ncanvas.addEventListener('touchmove', render);\ncanvas.addEventListener('touchend', move);\ncanvas.addEventListener('mousedown', move);\n\nexport {\n    canvas,\n    turnChange,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Match from './';\nimport Results from '../Results';\nimport shuffleString from './shuffleString';\nimport images from './images';\nimport * as controller from './controller';\n\nconst boxSize = 50;\nconst gridlineSize = 4;\nconst boardWidth = 7;\nconst boardHeight = 6;\nconst gameNameChars = '123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst placeAudio = new Audio('/place.mp3');\nconst otherPlaceAudio = new Audio('/otherPlace.mp3');\nconst gameEndAudio = new Audio('/endGame.mp3');\nconst startTurnAudio = new Audio('/startTurn.mp3');\n\n\nvar matchInfo;\nvar myId;\nvar games = [];\nvar gamesLeft;\nvar intervals = [];\nvar turnNumber = 0;\nvar turn = 'a';\nvar turnTimerEnd = Date.now();\n\nvar canvas = document.createElement('canvas');\ncanvas.width = (boxSize * boardWidth) + ((boardWidth + 1) * gridlineSize);\ncanvas.height = (boxSize + gridlineSize) * (boardHeight + 1);\nvar ctx = canvas.getContext('2d');\n\nfunction showTimer() {\n    let timeLeft = (turnTimerEnd - Date.now()) / 1000;\n    if (timeLeft < 0)\n        timeLeft = 0;\n    document.getElementById('turnTime').innerHTML = timeLeft.toFixed(2);\n}\n\nfunction playMatch(startingMatchInfo, sentId) {\n    myId = sentId;\n    matchInfo = startingMatchInfo;\n    turnNumber = 0;\n    for (let i in startingMatchInfo.games) {\n        let game = startingMatchInfo.games[i];\n        let state = [];\n        for (let y = 0; y < boardHeight; y++) {\n            let column = [];\n            for (let x = 0; x < boardWidth; x++) {\n                column.push(null);\n            }\n            state.push(column);\n        }\n\n        games.push({\n            id: i,\n            name: (i+1 > gameNameChars.length ? `${gameNameChars[~~(i/gameNameChars.length)]}${gameNameChars[i%gameNameChars.length]}` : gameNameChars[i]),\n            players: game.players,\n            state: state,\n        });\n    }\n    gamesLeft = games.length;\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Match players={startingMatchInfo.players} games={games} myId={myId} /></ThemeProvider>, document.getElementById('root'), () => {\n        document.getElementById('controller').appendChild(controller.canvas);\n        controller.canvas.style.touchAction = 'none';\n        document.getElementById('maxGames').innerHTML = gamesLeft;\n        document.getElementById('gamesLeft').innerHTML = gamesLeft;\n        for (let i in games)\n            drawBoardsOfId(i);\n        intervals.timer = setInterval(showTimer, 1000/24);\n        (new Audio('/startMatch.mp3')).play();\n    });\n}\n\nfunction switchTurn(newTurn) {\n    document.getElementById('turnNumber').innerHTML = ++turnNumber;\n    turn = newTurn;\n    turnTimerEnd = Date.now() + matchInfo.turnTime;\n    for (let element of [...document.getElementsByClassName(`game-${turn == 'a' ? 'b' : 'a'}`), ...document.getElementsByClassName(`colour-indicator-${turn == 'a' ? 'b' : 'a'}`)])\n        element.classList.add('inactive-game');\n    for (let element of [...document.getElementsByClassName(`game-${turn}`), ...document.getElementsByClassName(`colour-indicator-${turn}`)])\n        element.classList.remove('inactive-game');\n    setTimeout(() => {\n        for (let element of [...document.getElementsByClassName(`game-${turn == 'a' ? 'b' : 'a'}`), ...document.getElementsByClassName(`colour-indicator-${turn == 'a' ? 'b' : 'a'}`)])\n            element.classList.add('inactive-game');\n        for (let element of [...document.getElementsByClassName(`game-${turn}`), ...document.getElementsByClassName(`colour-indicator-${turn}`)])\n            element.classList.remove('inactive-game');\n    }, 50);\n    for (let game of games) {\n        game.hover = null;\n    }\n    document.getElementById('turnIndicator').src = `/${turn}.png`;\n    controller.turnChange(turn);\n    if (turnNumber > 1)\n        startTurnAudio.play();\n}\n\nfunction hover(gameId, colour, column) {\n    if (colour == turn)\n        games[gameId].hover = column;\n    drawBoardsOfId(gameId);\n}\n\nfunction move(gameId, colour, column, row) {\n    let game = games[gameId];\n    game.state[column][row] = colour;\n    game.hover = null;\n    drawBoardsOfId(gameId);\n    if (!myId.startsWith(game.players[colour]))\n        otherPlaceAudio.play();\n}\n\nfunction takenTurn(colour) {\n    placeAudio.play();\n    if (colour == turn) {\n        for (let i of document.querySelectorAll(`.self-game.game-${colour}`))\n            i.classList.add('inactive-game');\n    }\n}\n\nfunction drawCounter(image, column, row) {\n    if (image.complete)\n        ctx.drawImage(image, ((boxSize+gridlineSize)*Number(column))+gridlineSize, (boxSize+gridlineSize)*(Number(row)+1), boxSize, boxSize);\n}\n\nfunction checkLine(a,b,c,d) {\n    // Check first cell non-zero and all cells match\n    return ((a !== null) && (a === b) && (a === c) && (a === d));\n}\n\nfunction drawBoard(game, overlayImage = null, isDraw = false) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //clear canvas\n\n    //draw gridlines\n    ctx.fillStyle = 'white';\n    for (let i = 0; i <= boardHeight; i++)\n        ctx.fillRect(0, boxSize+((boxSize+gridlineSize)*i), canvas.width, gridlineSize);\n    for (let i = 0; i <= boardWidth; i++)\n        ctx.fillRect((boxSize+gridlineSize)*i, boxSize, gridlineSize, canvas.height-boxSize);\n\n    for (let i in game.state)\n        for (let j in game.state[i]) {\n            let piece = game.state[i][j];\n            if (piece != null) {\n                drawCounter(images[piece], j, i);\n            }\n        }\n    \n    if (game.hover !== null) {\n\n        drawCounter(images[turn], game.hover, -1); //draw counter above board\n\n        //draw counter inside board\n        let row = null;       \n        for (let i = 0; i < boardHeight; i++) {\n            if (game.state[i][game.hover] != null) {\n                row = i - 1;\n                break;\n            }\n        }\n        if (row == -1) //if the top slot was full\n            row = false; //skip this turn\n        if (row == null) //if all the slots were empty\n            row = boardHeight - 1; //use the bottom slot\n        if (row !== false) {\n            if (images.hover[turn].complete) {\n                ctx.globalAlpha = 0.15;\n                ctx.drawImage(images.hover[turn], ((boxSize+gridlineSize)*Number(game.hover))+gridlineSize, boxSize+gridlineSize, boxSize, (boxSize+gridlineSize)*(Number(row)+1)-gridlineSize);\n            }\n            ctx.globalAlpha = 0.5;\n            drawCounter(images[turn], game.hover, row);\n            ctx.globalAlpha = 1; //reset alpha\n        }\n        \n\n    }\n\n    if (overlayImage != null && overlayImage.complete) {\n        if (!isDraw) {\n            let winner;\n            let winLocation;\n\n            //Check down\n            for (let r = 0; r < 3; r++)\n                for (let c = 0; c < 7; c++)\n                    if (checkLine(game.state[r][c], game.state[r+1][c], game.state[r+2][c], game.state[r+3][c])) {\n                        winner = game.state[r][c];\n                        winLocation = [r,c,r+1,c,r+2,c,r+3,c];\n                    }\n        \n            //Check right\n            for (let r = 0; r < 6; r++)\n                for (let c = 0; c < 4; c++)\n                    if (checkLine(game.state[r][c], game.state[r][c+1], game.state[r][c+2], game.state[r][c+3])) {\n                        winner = game.state[r][c];\n                        winLocation = [r,c,r,c+1,r,c+2,r,c+3];\n                    }\n        \n            //Check down-right\n            for (let r = 0; r < 3; r++)\n                for (let c = 0; c < 4; c++)\n                    if (checkLine(game.state[r][c], game.state[r+1][c+1], game.state[r+2][c+2], game.state[r+3][c+3])) {\n                        winner = game.state[r][c];\n                        winLocation = [r,c,r+1,c+1,r+2,c+2,r+3,c+3];\n                    }\n        \n            //Check down-left\n            for (let r = 3; r < 6; r++)\n                for (let c = 0; c < 4; c++)\n                    if (checkLine(game.state[r][c], game.state[r-1][c+1], game.state[r-2][c+2], game.state[r-3][c+3])) {\n                        winner = game.state[r][c];\n                        winLocation = [r,c,r-1,c+1,r-2,c+2,r-3,c+3];\n                    }\n            \n            ctx.fillStyle = {a: '#f58600af', b: '#03ffffaf'}[winner];\n            for (let i = 0; i < 4; i++)\n                ctx.fillRect(\n                    ((boxSize+gridlineSize)*Number(winLocation[i*2+1]))+gridlineSize,\n                    (boxSize+gridlineSize)*(Number(winLocation[i*2])+1),\n                    boxSize, boxSize\n                );\n            /*ctx.lineWidth = 5;\n            ctx.beginPath();\n            ctx.moveTo(((boxSize+gridlineSize)*Number(winLocation[1]))+gridlineSize, (boxSize+gridlineSize)*(Number(winLocation[0])+1));\n            ctx.lineTo(((boxSize+gridlineSize)*Number(winLocation[3]))+gridlineSize, (boxSize+gridlineSize)*(Number(winLocation[2])+1));\n            ctx.stroke();*/\n        }\n        ctx.globalAlpha = 0.75;\n        ctx.drawImage(overlayImage, 0, 0, canvas.width, canvas.height);\n        ctx.globalAlpha = 1; //reset alpha\n    }\n    \n    return canvas.toDataURL();\n}\n\nfunction drawBoardsOfId(id) {\n    let board = drawBoard(games[id]);\n    for (let i of document.getElementsByClassName(`game${id}`))\n        i.src = board;\n}\n\nfunction outcomeDecided(boardId, outcome) {\n    document.getElementById('gamesLeft').innerHTML = --gamesLeft;\n    games[boardId].outcome = outcome;\n\n    for (let i of document.getElementsByClassName(`game${boardId}`)) {\n        i.classList.add('game-outcome-decided');\n        let relativeOutcome;\n        let glowColor;\n        if (outcome == false) {\n            relativeOutcome = 'draw';\n            glowColor = 'red';\n        } else if (outcome == i.getAttribute('data-playercolour')) {\n            relativeOutcome = 'win';\n            glowColor = 'green';\n        } else {\n            relativeOutcome = 'loss';\n            glowColor = 'grey';\n        }\n        i.src = drawBoard(games[boardId], images.outcomeOverlay[relativeOutcome], outcome == false);\n    }\n\n    gameEndAudio.play();\n}\n\nfunction endMatch(results) {\n    for (let i in intervals) {\n        clearInterval(intervals[i]);\n        delete intervals[i];\n    }\n\n    for (let game of games) {\n        game.src = drawBoard(game, images.outcomeOverlay.end, game.outcome == false);\n        for (let i in game.players) {\n            game.players[i] = matchInfo.players.find(player => player.id == game.players[i]);\n        }\n    }\n    games.sort((a, b) => gameNameChars.indexOf(a.name) - gameNameChars.indexOf(b.name));\n\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Results myId={myId} results={results} games={games} /></ThemeProvider>, document.getElementById('root'));\n\n    matchInfo = null;\n    games = [];\n    intervals = [];\n}\n\nfunction turnStatus(player, status) {\n    document.getElementById(`playerTurnIndicator-${player}`).setAttribute('fill', status ? 'green' : 'red');\n}\n\nexport {\n    playMatch,\n    hover,\n    move,\n    takenTurn,\n    drawBoard,\n    switchTurn,\n    outcomeDecided,\n    endMatch,\n    turnStatus,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport socketIOClient from 'socket.io-client';\nimport serverLocation from './server.json';\nimport showDialog from '../Dialog/show';\nimport Connecting from './Connect/ing';\nimport ConnectFailed from './Connect/Failed';\nimport Home from '../Home';\nimport Lobby from '../Lobby';\nimport * as gameplay from '../Match/gameplay';\n\nvar socket = socketIOClient(serverLocation, {\n    transports: ['websocket'],\n});\nvar connectedOnce = false;\n\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Connecting /></ThemeProvider>, document.getElementById('root'));\n\nsocket.on('connect', () => {\n    if (!connectedOnce) {\n        connectedOnce = true;\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Home /></ThemeProvider>, document.getElementById('root'));\n    }\n});\n\nfunction displayConnectionFail(error) {\n    setTimeout(() => {\n        if (socket.disconnected) {\n            ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ConnectFailed error={error.toString()} /></ThemeProvider>, document.getElementById('root'));\n            socket.disconnect();\n        }\n    }, 10000);\n}\n\nsocket.on('connect_error', displayConnectionFail);\nsocket.on('connect_timeout', displayConnectionFail);\nsocket.on('disconnect', displayConnectionFail);\n\nsocket.on('err', (error='Unknown error', title='Error:') => {\n    showDialog({\n        title: title,\n        description: error,\n    });\n});\n\nsocket.on('kicked', kicker => {\n    showDialog({\n        required: true,\n        title: 'Kicked!',\n        description: `${kicker} kicked you from the lobby.`,\n        buttonText: 'Back Home',\n        buttonAction: () => window.location.reload(),\n    });\n});\n\n/*\nsocket.on('disconnect', () => {\n    setTimeout(() => {\n        alert('Lost connection to the 8connect4 server.');\n        window.location.reload();\n    }, 200);\n});\n*/\n\nsocket.on('joinMatch', () => {\n});\n\nsocket.on('matchUpdate', matchInfo => {\n    if (!matchInfo.started)\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Lobby matchInfo={matchInfo} /></ThemeProvider>, document.getElementById('root'));\n});\n\nsocket.on('matchStart', matchInfo => gameplay.playMatch(matchInfo, socket.id));\nsocket.on('turnSwitch', newTurn => gameplay.switchTurn(newTurn));\nsocket.on('hover', (gameId, colour, column) => gameplay.hover(gameId, colour, column));\nsocket.on('move', (gameId, colour, column, row) => gameplay.move(gameId, colour, column, row));\nsocket.on('takenTurn', colour => gameplay.takenTurn(colour));\nsocket.on('outcomeDecided', (gameId, outcome) => gameplay.outcomeDecided(gameId, outcome));\nsocket.on('endMatch', results => gameplay.endMatch(results));\nsocket.on('ts', (player, status) => gameplay.turnStatus(player, status));\n\nexport default socket;"],"sourceRoot":""}