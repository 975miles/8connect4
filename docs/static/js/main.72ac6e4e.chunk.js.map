{"version":3,"sources":["theme/index.js","Dialog/index.js","Dialog/show.js","socket/Connect/ing.js","socket/Connect/Failed.js","Home/CodeInput.js","Home/NameInput.js","Home/showMatchOptions.js","Home/index.js","Lobby/index.js","Match/index.js","Results/index.js","Match/images.js","Match/shuffleString.js","Match/controller.js","Match/gameplay.js","socket/index.js"],"names":["theme","createMuiTheme","palette","type","background","default","primary","main","overrides","MuiButton","textPrimary","borderRadius","border","color","padding","boxShadow","textSecondary","Dialog","props","state","open","handleOpen","bind","handleClose","this","setState","classes","onClose","disablePortal","aria-labelledby","aria-describedby","disableBackdropClick","required","disableEscapeKeyDown","DialogTitle","id","title","DialogContent","dividers","DialogContentText","className","text","description","children","DialogActions","Button","onClick","buttonText","buttonAction","React","Component","withStyles","margin","showDialog","a","Promise","res","Object","assign","layer","element","document","getElementById","createElement","appendChild","ReactDOM","render","ThemeProvider","CssBaseline","ref","dialog","setTimeout","Connecting","CircularProgress","ConnectFailed","error","size","window","location","reload","CodeInput","code","changeInput","tryCode","event","target","value","replace","socket","emit","search","length","slice","history","pushState","htmlFor","FormControl","clsx","textField","variant","InputLabel","FilledInput","onChange","autoComplete","inputProps","textInput","maxLength","onKeyDown","e","key","endAdornment","InputAdornment","position","IconButton","aria-label","edge","spacing","marginBottom","joinLabel","display","marginTop","marginRight","width","textTransform","useStyles","makeStyles","input","label","textAlign","NameInput","useState","localStorage","name","setName","changeName","newName","first","Grid","container","justify","alignItems","item","TextField","activeElement","blur","InputLabelProps","allowedPlayers","maxGamesAllowed","formControl","select","timerMarks","timerMarksFormat","n","options","defaultMatchOptions","MatchOptions","JSON","parse","NumberTweaker","ButtonGroup","fn","disabled","min","max","sendUpdate","editable","started","public","publicity","setPublicity","players","setPlayers","gameMax","setGameMax","lineLength","setLineLength","columns","setColumns","changeColumns","rows","setRows","changeRows","indexOf","turnTime","setTurnTime","runDownTimer","setRunDownTimer","updateOptions","useEffect","addEventListener","removeEventListener","Divider","style","FormLabel","Typography","component","Switch","checked","change","RadioGroup","Number","row","map","FormControlLabel","control","Radio","Select","displayEmpty","filter","MenuItem","FormHelperText","top","fontSize","minWidth","paddingRight","Slider","step","marks","keys","String","getAriaValueText","valueLabelFormat","valueLabelDisplay","Checkbox","labelPlacement","showMatchOptions","stringify","changeOptions","newOptions","dispatchEvent","Event","hostChanged","amNowHost","logoImage","maxWidth","controls","Home","showTutorial","videoId","Link","href","rel","tutorialWatched","height","src","frameBorder","allow","allowFullScreen","hasOwnProperty","gutterBottom","alt","root","privacyIcon","table","head","backgroundColor","tableCell","you","fontWeight","Lobby","tableBody","amHost","startsWith","matchInfo","host","i","content","push","TableRow","TableCell","Tooltip","starting","bot","Audio","startTimer","play","copyHelp","copyTitle","setCopyTitle","copy","protocol","TableContainer","Paper","Table","TableHead","anchorEl","setAnchorEl","Boolean","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","diff","index","TableBody","gameInfo","justifyContent","borderBottom","zIndex","flexGrow","gameInfoTitle","gameInfoContent","colourIndicator","playerArea","paddingTop","paddingBottom","selfGameImage","maxHeight","otherGameImage","playingGamesContainer","playingGames","flexWrap","otherGamesContainer","otherGames","vsMe","GameImage","colour","game","find","c","playerId","opponent","player","data-playercolour","playerColour","self","games","myId","TurnTakenIndicator","cx","cy","r","fill","PlayerGames","gameRowClass","b","Match","selfPlayer","gamesContainer","marginLeft","gameImage","counterImage","otherPlayer","Results","playerClass","winnersStop","results","score","join","placement","rjCode","shuffleString","images","Image","hover","outcomeOverlay","img","boxSize","boardWidth","canvas","ctx","getContext","slot","turn","clearRect","fillStyle","fillRect","changedTouches","bbox","getBoundingClientRect","x","clientX","left","y","clientY","newSlot","Math","floor","image","complete","drawImage","move","gamesLeft","gameNameChars","placeAudio","otherPlaceAudio","gameEndAudio","startTurnAudio","intervals","turnNumber","turnTimerEnd","Date","now","showTimer","timeLeft","innerHTML","toFixed","playMatch","startingMatchInfo","sentId","font","textBaseline","column","order","controller","touchAction","drawBoardsOfId","timer","setInterval","switchTurn","newTurn","getElementsByClassName","classList","add","remove","drawCounter","checkLine","rD","cD","toCheck","checking","every","t","drawBoard","overlayImage","isDraw","showOrder","j","piece","fillText","globalAlpha","winner","winLocation","tiles","concat","squaresDone","some","square","gridlineSize","wrh","newWidth","newHeight","xOffset","yOffset","setTransform","toDataURL","board","socketIOClient","serverLocation","transports","connectedOnce","displayConnectionFail","disconnected","toString","disconnect","on","kicker","gameplay","gameId","status","setAttribute","querySelectorAll","outcome","boardId","relativeOutcome","getAttribute","clearInterval","sort"],"mappings":"iRAsCeA,EApCDC,YAAe,CACzBC,QAAS,CACLC,KAAM,OAENC,WAAY,CACRC,QAAS,WAGbC,QAAS,CACLC,KAAM,YAIdC,UAAW,CACPC,UAAW,CACPC,YAAa,CACTN,WAAY,mDACZO,aAAc,EACdC,OAAQ,EACRC,MAAO,mBACPC,QAAS,SACTC,UAAW,yCAGfC,cAAe,CACXZ,WAAY,kEACZO,aAAc,EACdC,OAAQ,EACRC,MAAO,mBACPC,QAAS,SACTC,UAAW,6C,2NCjBrBE,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAM,GAEV,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBANJ,E,yDAUfE,KAAKC,SAAS,CAACL,MAAM,M,oCAIrBI,KAAKC,SAAS,CAACL,MAAM,M,+BAGf,IACEM,EAAYF,KAAKN,MAAjBQ,QAER,OACI,8BACI,eAAC,IAAD,CACIN,KAAMI,KAAKL,MAAMC,KACjBO,QAASH,KAAKD,YACdK,eAAa,EACbC,kBAAgB,qBAChBC,mBAAiB,2BACjBC,qBAAsBP,KAAKN,MAAMc,SACjCC,qBAAsBT,KAAKN,MAAMc,SAPrC,UASI,cAACE,EAAA,EAAD,CAAaC,GAAG,qBAAhB,SAAsCX,KAAKN,MAAMkB,QACjD,eAACC,EAAA,EAAD,CAAeC,UAAQ,EAAvB,UACI,cAACC,EAAA,EAAD,CAAmBC,UAAWd,EAAQe,KAAMN,GAAG,2BAA/C,SACKX,KAAKN,MAAMwB,cAEflB,KAAKN,MAAMyB,YAEhB,eAACC,EAAA,EAAD,WACKpB,KAAKN,MAAMc,SAAW,KACnB,cAACa,EAAA,EAAD,CAAQC,QAAStB,KAAKD,YAAaV,MAAM,YAAzC,mBAIHW,KAAKN,MAAM6B,WACR,cAACF,EAAA,EAAD,CAAQC,QAAStB,KAAKN,MAAM8B,aAAcnC,MAAM,UAAhD,SACKW,KAAKN,MAAM6B,aAEhB,iB,GAjDPE,IAAMC,WAyDZC,eA/DG,SAAAnD,GAAK,MAAK,CACxByC,KAAM,CACFW,OAAQ,MA6DDD,CAAsBlC,G,SCjEtBoC,I,2EAAf,0CAAAC,EAAA,6DAA0BpC,EAA1B,+BAAkC,GAAIyB,EAAtC,+BAAiD,KAAjD,kBACW,IAAIY,QAAJ,uCAAY,WAAMC,GAAN,mBAAAF,EAAA,sDACfpC,EAAQuC,OAAOC,OAAO,CAClBtB,MAAO,eACPJ,UAAU,GACXd,GAGCiB,EAPW,gBAOGjB,EAAMyC,MAAQzC,EAAMyC,MAAQ,GAE/B,OADXC,EAAUC,SAASC,eAAe3B,OAElCyB,EAAUC,SAASE,cAAc,QACzB5B,GAAKA,EACb0B,SAASC,eAAe,UAAUE,YAAYJ,IAElDK,IAASC,OACL,eAACC,EAAA,EAAD,CAAenE,MAAOA,EAAtB,UACI,cAACoE,EAAA,EAAD,IACA,cAAC,EAAD,2BAAYlD,GAAZ,IAAmBmD,IAAK,SAAAT,GAAO,OAAIU,EAASV,GAA5C,SACKjB,QAGViB,GAEEU,GAGDA,EAAOjD,aACPmC,EAAIc,IAHJC,WAAU,sBAAC,sBAAAjB,EAAA,kEAAYE,EAAZ,SAAsBH,EAAWnC,EAAOyB,GAAxC,uGAAoD,KAxBpD,2CAAZ,wDADX,4C,sBAiCeU,Q,kBC3BAmB,MATf,WACI,OACI,sBAAKhC,UAAU,UAAf,UACI,cAACiC,EAAA,EAAD,IACA,sF,iBCSGC,MAZf,SAAuBxD,GACnB,OACI,sBAAKsB,UAAU,UAAf,UACI,cAAC,IAAD,IACA,4EACCtB,EAAMyD,MAAQ,yCAAYzD,EAAMyD,MAAlB,OAAgC,KAC/C,8FACA,cAAC9B,EAAA,EAAD,CAAQ+B,KAAK,QAAQ/D,MAAM,UAAUiC,QAAS,kBAAM+B,OAAOC,SAASC,QAAO,IAA3E,uB,yGCiBNC,E,kDACF,WAAY9D,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT8D,KAAM,IAEV,EAAKC,YAAc,EAAKA,YAAY5D,KAAjB,gBACnB,EAAK6D,QAAU,EAAKA,QAAQ7D,KAAb,gBANA,E,wDASP8D,GACR,IAAIH,EAAOG,EAAMC,OAAOC,MACxBL,EAAOA,EAAKM,QAAQ,IAAK,IACzB/D,KAAKC,SAAS,CAACwD,W,gCAIfO,GAAOC,KAAK,YAAajE,KAAKL,MAAM8D,Q,0CAGnB,IAAD,OAGHJ,OAAOC,SAASY,OAAOC,OAAS,IACzCnE,KAAKC,SAAS,CAACwD,KAAMJ,OAAOC,SAASY,OAAOE,MAAM,KAAK,kBAAM,EAAKT,aAClEN,OAAOgB,QAAQC,UAAU,GAAI,GAAI,Q,+BAI/B,IAAD,OACGpE,EAAYF,KAAKN,MAAjBQ,QAER,OACI,gCACI,iDAAW,IAAX,IAAgDqE,QAAQ,gBAAxD,gCACA,uBAEA,eAACC,EAAA,EAAD,CAAaxD,UAAWyD,YAAKvE,EAAQ0B,OAAQ1B,EAAQwE,WAAYC,QAAQ,SAAzE,UACI,cAACC,EAAA,EAAD,CAAYL,QAAQ,gBAApB,uBACA,cAACM,EAAA,EAAD,CACIlE,GAAG,gBACHhC,KAAK,OACLmF,MAAO9D,KAAKL,MAAM8D,KAClBqB,SAAU9E,KAAK0D,YACfqB,aAAa,MACbC,WAAY,CACRhE,UAAWd,EAAQ+E,UACnBC,UAAW,EACXC,UAAW,SAAAC,GAAmB,SAATA,EAAEC,KAAgB,EAAK1B,YAEhD2B,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACC,EAAA,EAAD,CACIC,aAAW,OACXpE,QAAStB,KAAK2D,QACdgC,KAAK,MAHT,SAKI,cAAC,IAAD,oB,GAzDZlE,IAAMC,WAoEfC,gBAtFG,SAAAnD,GAAK,MAAK,CACxBoD,OAAQ,CACJA,OAAQpD,EAAMoH,QAAQ,GACtBC,aAAc,GAElBC,UAAW,CACPC,QAAS,eACTC,UAAW,GACXC,YAAa,GAEjBvB,UAAW,CACPwB,MAAO,QAEXjB,UAAW,CACPkB,cAAe,gBAwERxE,CAAsB6B,G,kDCtF/B4C,GAAYC,aAAW,SAAC7H,GAAD,MAAY,CACrCoD,OAAQ,CACJA,OAAQpD,EAAMoH,QAAQ,IAE1BU,MAAO,CACHJ,MAAO,KAEXK,MAAO,CACHC,UAAW,cA6CJC,OAzCf,WACI,IAAMvG,EAAUkG,KADC,EAEO3E,IAAMiF,SAASC,aAAaC,KAAOD,aAAaC,KAAO,IAF9D,oBAEVA,EAFU,KAEJC,EAFI,KAGXC,EAAa,SAACC,GAA4B,IAAnBC,EAAkB,wDACtCA,GACDH,EAAQE,GACZJ,aAAaC,KAAOG,EACpB/C,GAAOC,KAAK,aAAc8C,IAM9B,OAJAD,EAAWF,GAAM,GAKb,qBAAK5F,UAAWd,EAAQ0B,OAAxB,SACI,eAACqF,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASvB,QAAS,EAAGwB,WAAW,WAAxD,UACI,cAACH,GAAA,EAAD,CAAMI,MAAI,EAAV,SACI,cAAC,KAAD,MAEJ,cAACJ,GAAA,EAAD,CAAMI,MAAI,EAAV,SACI,cAACC,GAAA,EAAD,CACI3G,GAAG,YACH4F,MAAM,YACNzC,MAAO8C,EACP9B,SAbC,SAAAlB,GAAK,OAAIkD,EAAWlD,EAAMC,OAAOC,QAclCiB,aAAa,MACbC,WAAY,CACRhE,UAAWd,EAAQoG,MACnBpB,UAAW,GACXC,UAAW,SAAAC,GAAmB,SAATA,EAAEC,KAAgBhD,SAASkF,cAAcC,SAElEC,gBAAiB,CACbzG,UAAWd,EAAQqG,iB,wKC/CzCmB,GAAiB,CAAC,EAAG,IACrBC,GAAkB,CAAC,EAAG,GAEtBvB,GAAYC,aAAW,SAAC7H,GAAD,MAAY,CACrCoJ,YAAa,CACThG,OAAQpD,EAAMoH,QAAQ,IAE1BiC,OAAQ,CACJ3B,MAAO,QAIT4B,GAAa,CACf,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,KAEEC,GAAmB,SAAAC,GAAC,gBAAOF,GAAWE,GAAlB,MAEtBC,GAAO,2BACJC,IACAvB,aAAawB,aAAeC,KAAKC,MAAM1B,aAAawB,cAAgB,IAG3E,SAASG,GAAc5I,GACnB,OACI,eAAC6I,GAAA,EAAD,CAAanF,KAAK,QAAlB,UACI,cAAC/B,EAAA,EAAD,CAAQC,QAAS,kBAAM5B,EAAM8I,IAAI,KAAKC,SAAU/I,EAAM+I,UAAY/I,EAAMC,OAASD,EAAMgJ,IAAvF,iBACA,cAACrH,EAAA,EAAD,CAAQC,QAAS,kBAAM5B,EAAM8I,IAAI,IAAIC,SAAU/I,EAAM+I,UAAY/I,EAAMC,OAASD,EAAMgJ,IAAtF,eACA,cAACrH,EAAA,EAAD,CAAQoH,UAAQ,EAAhB,SAAkB/I,EAAMC,QACxB,cAAC0B,EAAA,EAAD,CAAQC,QAAS,kBAAM5B,EAAM8I,GAAG,IAAKC,SAAU/I,EAAM+I,UAAY/I,EAAMC,OAASD,EAAMiJ,IAAtF,eACA,cAACtH,EAAA,EAAD,CAAQC,QAAS,kBAAM5B,EAAM8I,GAAG,KAAMC,SAAU/I,EAAM+I,UAAY/I,EAAMC,OAASD,EAAMiJ,IAAvF,mBAKZ,SAASR,GAAazI,GAClB,IAAMQ,EAAUkG,KAEVwC,EAAa,WACXlJ,EAAMmJ,UAAYnJ,EAAMoJ,SACxB9E,GAAOC,KAAK,gBAAiBgE,KALZ,EAOSxG,IAAMiF,SAASuB,GAAQc,QAPhC,oBAOlBC,EAPkB,KAOPC,EAPO,OAaKxH,IAAMiF,SAASuB,GAAQiB,SAb5B,oBAalBA,EAbkB,KAaTC,EAbS,OAqBK1H,IAAMiF,SAASuB,GAAQmB,SArB5B,oBAqBlBA,EArBkB,KAqBTC,EArBS,OA6BW5H,IAAMiF,SAASuB,GAAQqB,YA7BlC,oBA6BlBA,EA7BkB,KA6BNC,EA7BM,OAwCK9H,IAAMiF,SAASuB,GAAQuB,SAxC5B,oBAwClBA,EAxCkB,KAwCTC,EAxCS,KAyCnBC,EAAgB,SAAA9F,GAClBqE,GAAQuB,QAAU5F,EAAMC,OAAOC,MAC/B2F,EAAW7F,EAAMC,OAAOC,OACxB8E,KA5CqB,EA8CDnH,IAAMiF,SAASuB,GAAQ0B,MA9CtB,oBA8ClBA,EA9CkB,KA8CZC,EA9CY,KA+CnBC,EAAa,SAAAjG,GACfqE,GAAQ0B,KAAO/F,EAAMC,OAAOC,MAC5B8F,EAAQhG,EAAMC,OAAOC,OACrB8E,KAlDqB,EAoDOnH,IAAMiF,SAASoB,GAAWgC,QAAQ7B,GAAQ8B,WApDjD,oBAoDlBA,EApDkB,KAoDRC,EApDQ,OA0DevI,IAAMiF,SAASuB,GAAQgC,cA1DtC,oBA0DlBA,EA1DkB,KA0DJC,EA1DI,KAiErBC,EAAgB,WAChBlB,EAAahB,GAAQc,QACrBI,EAAWlB,GAAQiB,SACnBG,EAAWpB,GAAQmB,SACnBG,EAActB,GAAQqB,YACtBG,EAAWxB,GAAQuB,SACnBI,EAAQ3B,GAAQ0B,MAChBK,EAAYlC,GAAWgC,QAAQ7B,GAAQ8B,WACvCG,EAAgBjC,GAAQgC,eAO5B,OALAxI,IAAM2I,WAAU,WAEZ,OADA/G,OAAOgH,iBAAiB,sBAAuBF,GACxC,kBAAM9G,OAAOiH,oBAAoB,sBAAuBH,MAChE,IAGC,gCACI,cAACI,EAAA,EAAD,CAASC,MAAO,CAACxE,UAAW,MAE5B,eAACxB,EAAA,EAAD,CAAaxD,UAAWd,EAAQ0H,YAAhC,UACI,cAAC6C,GAAA,EAAD,sBACA,cAACC,EAAA,EAAD,CAAYC,UAAU,MAAtB,SACI,eAAC1D,GAAA,EAAD,CAAM0D,UAAU,QAAQzD,WAAS,EAACE,WAAW,SAASxB,QAAS,EAA/D,UACI,cAACqB,GAAA,EAAD,CAAMI,MAAI,EAAV,SAAW,cAAC,KAAD,MACX,cAACJ,GAAA,EAAD,CAAMI,MAAI,EAAV,SACI,cAACuD,GAAA,EAAD,CAAQvL,MAAM,UAAUwL,QAAS7B,EAAWlE,SAlFtC,SAAAlB,GAC1BqE,GAAQc,QAAUC,EAClBC,GAAcD,GACdJ,KA+EiGH,UAAW/I,EAAMmJ,aAElG,cAAC5B,GAAA,EAAD,CAAMI,MAAI,EAAV,SAAW,cAAC,KAAD,cAKtB3H,EAAMoJ,QAAU,KAAO,iCACpB,cAACyB,EAAA,EAAD,IAEA,eAAC/F,EAAA,EAAD,CAAaxD,UAAWd,EAAQ0H,YAAhC,UACI,cAAC6C,GAAA,EAAD,CAAWD,MAAO,CAAC3E,aAAc,GAAjC,yBACA,cAACyC,GAAD,CAAeE,GAxFT,SAAAsC,GAClB7C,GAAQiB,SAAW4B,EACf7C,GAAQiB,QAAUxB,GAAe,KAAIO,GAAQiB,QAAUxB,GAAe,IACtEO,GAAQiB,QAAUxB,GAAe,KAAIO,GAAQiB,QAAUxB,GAAe,IAC1EyB,EAAWlB,GAAQiB,SACnBN,KAmF8CF,IAAKhB,GAAe,GAAIiB,IAAKjB,GAAe,GAAI/H,MAAOuJ,EAAST,UAAW/I,EAAMmJ,iBAI3H,cAAC0B,EAAA,EAAD,IAEA,eAAC/F,EAAA,EAAD,CAAaxD,UAAWd,EAAQ0H,YAAhC,UACI,cAAC6C,GAAA,EAAD,CAAWD,MAAO,CAAC3E,aAAc,GAAjC,6CACA,cAACyC,GAAD,CAAeE,GAxFL,SAAAsC,GAClB7C,GAAQmB,SAAW0B,EACf7C,GAAQmB,QAAUzB,GAAgB,KAAIM,GAAQmB,QAAUzB,GAAgB,IACxEM,GAAQmB,QAAUzB,GAAgB,KAAIM,GAAQmB,QAAUzB,GAAgB,IAC5E0B,EAAWpB,GAAQmB,SACnBR,KAmF0CF,IAAKf,GAAgB,GAAIgB,IAAKhB,GAAgB,GAAIhI,MAAOyJ,EAASX,UAAW/I,EAAMmJ,cAGzH,cAAC0B,EAAA,EAAD,IAEA,eAAC/F,EAAA,EAAD,CAAaxD,UAAWd,EAAQ0H,YAAhC,UACI,cAAC6C,GAAA,EAAD,gCACA,cAACM,GAAA,EAAD,CAAYjH,MAAOwF,EAAYxE,SAvFlB,SAAClB,EAAOE,GAC7BA,EAAQkH,OAAOlH,GACfmE,GAAQqB,WAAaxF,EACrByF,EAAczF,GACV0F,EAAU1F,GACV4F,EAAc,CAAC7F,OAAQ,CAACC,WACxB6F,EAAO7F,GACP+F,EAAW,CAAChG,OAAQ,CAACC,WACzB8E,KA+EmEqC,KAAG,EAA9D,SACK,CAAC,EAAG,EAAG,EAAG,GAAGC,KAAI,SAAAlD,GAAC,OAAI,cAACmD,GAAA,EAAD,CAAkBrH,MAAOkE,EAAWoD,QAAS,cAACC,GAAA,EAAD,CAAOhM,MAAM,UAAUoJ,UAAW/I,EAAMmJ,WAActC,MAAOyB,GAAzEA,WAIhE,cAACuC,EAAA,EAAD,IAEA,cAAC/F,EAAA,EAAD,CAAaxD,UAAWd,EAAQ0H,YAAhC,SACI,cAAC6C,GAAA,EAAD,2BAEJ,uBACA,eAACjG,EAAA,EAAD,CAAaxD,UAAWd,EAAQ0H,YAAhC,UACI,cAAC0D,GAAA,EAAD,CACIxH,MAAO0F,EACP1E,SAAU4E,EACV6B,cAAY,EACZvK,UAAWd,EAAQ2H,OACnBY,UAAW/I,EAAMmJ,SALrB,SAOK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAI2C,QAAO,SAAAxD,GAAC,OAAIA,GAAKsB,KAAY4B,KAAI,SAAAlD,GAAC,OAAI,cAACyD,GAAA,EAAD,CAAkB3H,MAAOkE,EAAzB,SAA6BA,GAAdA,QAEpF,cAAC0D,GAAA,EAAD,yBAEJ,sBAAMlB,MAAO,CACThF,SAAU,WACVmG,IAAK,GACLC,SAAU,IAHd,kBAKA,eAACpH,EAAA,EAAD,CAAaxD,UAAWd,EAAQ0H,YAAhC,UACI,cAAC0D,GAAA,EAAD,CACIxH,MAAO6F,EACP7E,SAAU+E,EACV0B,cAAY,EACZvK,UAAWd,EAAQ2H,OACnBY,UAAW/I,EAAMmJ,SALrB,SAOK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAI2C,QAAO,SAAAxD,GAAC,OAAIA,GAAKsB,KAAY4B,KAAI,SAAAlD,GAAC,OAAI,cAACyD,GAAA,EAAD,CAAkB3H,MAAOkE,EAAzB,SAA6BA,GAAdA,QAEpF,cAAC0D,GAAA,EAAD,sBAUJ,cAACnB,EAAA,EAAD,IAEA,eAAC/F,EAAA,EAAD,CAAaxD,UAAWd,EAAQ0H,YAAa4C,MAAO,CAACqB,SAAU,IAAKC,aAAc,IAAlF,UACI,cAACrB,GAAA,EAAD,wBACA,cAACsB,GAAA,EAAD,CACIjI,MAAOiG,EACPjF,SAtHa,SAAClB,EAAOE,GACjCmE,GAAQ8B,SAAWjC,GAAWhE,GAC9BkG,EAAYlG,GACZ8E,KAoHYoD,KAAM,KACNC,MAAO,aAAInE,GAAWoE,QAAQhB,KAAI,SAAAlD,GAAC,MAAK,CAAClE,MAAOkE,EAAGzB,MAAO4F,OAAOrE,GAAWE,QAC5EU,IAAK,EACLC,IAAKb,GAAW3D,OAAO,EACvBiI,iBAAkBrE,GAClBsE,iBAAkBtE,GAClBuE,kBAAkB,OAClB7D,UAAW/I,EAAMmJ,cAIzB,cAAC0B,EAAA,EAAD,CAASC,MAAO,CAAC3E,aAAc,KAE/B,cAACsF,GAAA,EAAD,CACIC,QAAS,cAACmB,GAAA,EAAD,CAAUlN,MAAM,UAAUwL,QAASZ,EAAcnF,SA/HrC,SAAAlB,GAC7BqE,GAAQgC,cAAgBA,EACxBC,GAAiBD,GACjBrB,KA4HsGH,UAAW/I,EAAMmJ,WAC/GtC,MAAM,8BACNiG,eAAe,aAgB/B,IAAI1J,GAAS,CACTnD,MAAO,CACHC,MAAM,I,SAIC6M,G,mFAAf,WAAgC5D,EAAUC,GAA1C,SAAAhH,EAAA,sEAGmBD,EAAW,eAClBiH,EAAU,CACVlI,MAAO,gBACPM,YAAa,2CACb,CACAN,MAAO,eACPM,YAAa,iBACbK,WAAY,SACZC,aAAc,WACVsB,GAAO/C,cACP4G,aAAawB,aAAeC,KAAKsE,UAAUzE,IAC3CjE,GAAOC,KAAK,cAAegE,OAGpC,cAACE,GAAD,CAAcU,SAAUA,EAAUC,QAASA,KAjBlD,QAGIhG,GAHJ,QAkBW+F,SAAWA,EAlBtB,4C,sBAqBe,QACX4D,oBACAE,cAvCJ,SAAuBC,GACnB3E,GAAU2E,EACVvJ,OAAOwJ,cAAc,IAAIC,MAAM,yBAsC/BC,YAnCJ,SAAqBC,GACblK,GAAOnD,MAAMC,MAAQkD,GAAO+F,UAAYmE,GACxCP,GAAiBO,GAAW,KCrP9B5G,GAAYC,YAAW,CACzB4G,UAAW,CACPlH,QAAS,QACTS,UAAW,SACX5E,OAAQ,OACRsL,SAAU,KAGdC,SAAU,CACN3G,UAAW,SACXpH,OAAQ,sBACRD,aAAc,MAkDPiO,OA9Cf,WACI,IAAMlN,EAAUkG,KACZiH,EAAY,uCAAG,8BAAAvL,EAAA,6DACXwL,EAAU,cADC,SAEIzL,EAAW,CAC1BM,MAAO,WACPvB,MAAO,oBACPM,YAAa,0CAAY,cAACqM,EAAA,EAAD,CAAMC,KAAI,2BAAsBF,GAAWzJ,OAAO,SAAS4J,IAAI,WAA/D,8BAAZ,uCACblM,WAAY,mBACZC,aAAc,WACVsB,EAAO/C,cACP4G,aAAa+G,iBAAkB,IAEpC,wBAAQxH,MAAM,MAAMyH,OAAO,MAAMC,IAAG,wCAAmCN,GAAWO,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,KAXtM,OAEXjL,EAFW,kDAAH,qDAkBhB,OALArB,IAAM2I,WAAU,WACPzD,aAAaqH,eAAe,oBAC7BX,MACL,IAGC,gCACI,cAAC3C,EAAA,EAAD,CAAY1J,UAAWd,EAAQU,MAAO+D,QAAQ,KAAKsJ,cAAY,EAA/D,SAAgE,qBAAKjN,UAAWd,EAAQ+M,UAAWW,IAAI,oBAAoBM,IAAI,gBAE/H,eAACxD,EAAA,EAAD,CAAY/F,QAAQ,QAAQsJ,cAAY,EAAxC,gDACuC,cAACV,EAAA,EAAD,CAAMjM,QAAS+L,EAAf,+BAGvC,sBAAKrM,UAAWd,EAAQiN,SAAxB,UACI,cAAC,GAAD,IAEA,cAAC5C,EAAA,EAAD,IACA,uBAEA,cAAClJ,EAAA,EAAD,CAAQ+B,KAAK,QAAQ/D,MAAM,UAAUiC,QAAS,kBAAM0C,GAAOC,KAAK,cAAhE,wBACA,uBACA,cAAC5C,EAAA,EAAD,CAAQ+B,KAAK,QAAQ/D,MAAM,YAAYiC,QAAS,kBAAMmL,GAAiBA,kBAAiB,GAAM,IAA9F,0BAEA,uBAAM,uBAAM,uBAEZ,cAAC,GAAD,W,wNC/CVrG,GAAYC,YAAW,CACzB8H,KAAM,CACF3H,UAAW,UAGf4H,YAAa,CACTnI,YAAa,IAGjBoI,MAAO,CACHnI,MAAO,IACPtE,OAAQ,QAGZ0M,KAAM,CACFC,gBAAiB,SAGrBC,UAAW,CACPhI,UAAW,UAGfiI,IAAK,CACDpP,MAAO,MACPqP,WAAY,UAuJLC,OAnJf,SAAejP,GAKX,IAJA,IAAMQ,EAAUkG,KAEZwI,EAAY,GACZC,EAAS7K,GAAOrD,GAAGmO,WAAWpP,EAAMqP,UAAUC,MAJhC,WAKTC,GACL,IAAIC,EAAU,GACVT,GAAM,EACNQ,KAAKvP,EAAMqP,UAAU7F,UACrBgG,EAAUxP,EAAMqP,UAAU7F,QAAQ+F,GAAGrI,KACrC6H,EAAMzK,GAAOrD,GAAGmO,WAAWpP,EAAMqP,UAAU7F,QAAQ+F,GAAGtO,KAE1DiO,EAAUO,KACN,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAWrO,UAAWd,EAAQsO,UAA9B,UACKS,KAAKvP,EAAMqP,UAAU7F,SAAWxJ,EAAMqP,UAAUC,MAAQtP,EAAMqP,UAAU7F,QAAQ+F,GAAGtO,GAChF,cAAC2O,GAAA,EAAD,CAAS1O,MAAM,oEAAf,SACI,cAAC,KAAD,CAAWgL,SAAS,cAE1B,KACD6C,EAAM,sBAAMzN,UAAWd,EAAQuO,IAAzB,SAA+BS,IAAkBA,EACvDT,EAAM,cAACa,GAAA,EAAD,CAAS1O,MAAM,mBAAf,SACH,cAAC6E,EAAA,EAAD,CAAYrC,KAAK,QAAQ9B,QAAS,kBAAMO,EAAW,CAACjB,MAAO,qBAAsB,cAAC,GAAD,MAAjF,SAAiG,cAAC,KAAD,CAAUgL,SAAS,gBAC3G,KACZqD,KAAKvP,EAAMqP,UAAU7F,SAAW2F,IAAWnP,EAAMqP,UAAUQ,WAAad,EAAM,iCAC3E,cAACa,GAAA,EAAD,CAAS1O,MAAM,6CAAf,SACI,cAAC6E,EAAA,EAAD,CAAYrC,KAAK,QAAQ9B,QAAS,kBAAM0C,GAAOC,KAAK,OAAQvE,EAAMqP,UAAU7F,QAAQ+F,GAAGtO,KAAvF,SAA4F,cAAC,IAAD,CAAWiL,SAAS,gBAElHlM,EAAMqP,UAAU7F,QAAQ+F,GAAGO,IAI3B,KAHE,cAACF,GAAA,EAAD,CAAS1O,MAAM,0DAA0DU,QAAS,kBAAM0C,GAAOC,KAAK,UAAWvE,EAAMqP,UAAU7F,QAAQ+F,GAAGtO,KAA1I,SACI,cAAC8E,EAAA,EAAD,CAAYrC,KAAK,QAAjB,SAAyB,cAAC,KAAD,CAAgBwI,SAAS,mBAGpD,SApBHqD,KARdA,EAAI,EAAGA,EAAIvP,EAAMqP,UAAU9G,QAAQiB,QAAS+F,IAAM,EAAlDA,GAkCTxN,IAAM2I,WAAU,WACZqC,GAAiBM,YAAY8B,MAG7BnP,EAAMqP,UAAUQ,UACf,IAAIE,MAAJ,qBAAwB/P,EAAMqP,UAAUW,WAAxC,SAA2DC,OAGhE,IAAIC,EAAW,mEA/CG,EAgDcnO,IAAMiF,SAASkJ,GAhD7B,oBAgDbC,EAhDa,KAgDFC,EAhDE,KAkDlB,OACI,gCACI,cAACrK,EAAA,EAAD,CAAYnE,QAAS,kBAAM+B,OAAOC,SAASC,UAA3C,SACI,cAAC,KAAD,MAEJ,sBAAKvC,UAAWd,EAAQiO,KAAxB,UACI,cAACzD,EAAA,EAAD,CAAY/F,QAAQ,WAAWoB,QAAQ,QAAQkI,cAAY,EAA3D,uBAGA,eAACvD,EAAA,EAAD,CAAY/F,QAAQ,KAAKsJ,cAAY,EAArC,UACI,sBAAMjN,UAAWd,EAAQkO,YAAzB,SACK1O,EAAMqP,UAAU9G,QAAQc,OAAS,cAACuG,GAAA,EAAD,CAAS1O,MAAM,mGAAf,SAAkH,cAAC,KAAD,MAA2B,cAAC0O,GAAA,EAAD,CAAS1O,MAAM,oEAAf,SAAmF,cAAC,KAAD,QAErQlB,EAAMqP,UAAUtL,KACjB,cAAC6L,GAAA,EAAD,CAAS1O,MAAOiP,EAAhB,SACI,cAACpK,EAAA,EAAD,CAAYnE,QAAS,WACjByO,KAAK,GAAD,OAAI1M,OAAOC,SAAS0M,SAApB,aAAiC3M,OAAOC,SAAS0L,KAAjD,YAAyDtP,EAAMqP,UAAUtL,OAC7EqM,EAAa,wBACb/M,YAAW,WACP+M,EAAaF,KACd,MALP,SAMG,cAAC,KAAD,WAIX,cAACvO,EAAA,EAAD,CAAQhC,MAAM,YAAYiC,QAAS,kBAAMmL,GAAiBA,iBAAiBoC,GAAQ,IAAnF,2BACA,uBAAM,uBACLnP,EAAMqP,UAAUQ,SACb,eAAC7E,EAAA,EAAD,CAAY/F,QAAQ,KAApB,yBAAsCjF,EAAMqP,UAAUW,WAAtD,SAEA,cAACJ,GAAA,EAAD,CAAS1O,MAAOiO,EAAS,0EAA4E,qCAArG,SACI,+BACI,cAACxN,EAAA,EAAD,CAAQhC,MAAOwP,EAAS,UAAY,UAAWzL,KAAK,QAAQ9B,QAAS,kBAAM0C,GAAOC,KAAK,eAAewE,UAAWoG,EAAjH,6BAKZ,cAACoB,GAAA,EAAD,CAAgBtF,UAAWuF,KAA3B,SACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,cAAChB,GAAA,EAAD,CAAUpO,UAAWd,EAAQoO,KAA7B,SACI,eAACe,GAAA,EAAD,CAAWrO,UAAWd,EAAQsO,UAA9B,sBACc9O,EAAMqP,UAAU7F,QAAQ/E,OADtC,IAC+CzE,EAAMqP,UAAU9G,QAAQiB,QACjE,WAAO,IAAD,EAE4BzH,IAAMiF,SAAS,MAF3C,oBAEG2J,EAFH,KAEaC,EAFb,KAYE1Q,EAAO2Q,QAAQF,GAErB,OACI,+BACKxB,EAAS,iCACN,cAACS,GAAA,EAAD,CAAS1O,MAAM,UAAf,SACI,cAAC6E,EAAA,EAAD,CAAYrC,KAAK,QAAQ9B,QAdrB,SAACsC,GACjB0M,EAAY1M,EAAM4M,gBAaN,4BAEJ,cAACC,GAAA,EAAD,CACI7Q,KAAMA,EACNyQ,SAAUA,EACVlQ,QAfI,WAChBmQ,EAAY,OAeAI,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAVpB,SAaI,cAACrI,GAAA,EAAD,CAAa5D,QAAQ,OAAOtF,MAAM,UAAUqG,aAAW,4BAAvD,SACK,CAAC,OAAQ,SAAU,QAAQwF,KAAI,SAAC4F,EAAMC,GAAP,OAAiB,cAAC1P,EAAA,EAAD,CAAQC,QAAS,kBAAM0C,GAAOC,KAAK,MAAO8M,IAA1C,SAAmDD,cAGtG,OArCpB,UA4Cd,cAACE,GAAA,EAAD,UACKpC,gB,SClLvBxI,I,OAAYC,YAAW,CACzB4K,SAAU,CACNlL,QAAS,OACTG,MAAO,OACPL,aAAc,GACdjE,OAAQ,OACRwF,WAAY,SACZ8J,eAAgB,gBAChB1L,SAAU,SACVmG,IAAK,EACL4C,gBAAiB,QACjB4C,aAAc,sBACdC,OAAQ,IACR,QAAS,CACLC,SAAU,IAIlBC,cAAe,CACX9K,UAAW,UAGf+K,gBAAiB,CACbxL,QAAS,OACTqB,WAAY,MACZ8J,eAAgB,UAOpBtQ,MAAO,CACH4F,UAAW,UAGfgL,gBAAiB,CACb7D,OAAQ,IAGZ8D,WAAY,CACRC,WAAY,EACZC,cAAe,EACf9L,aAAc,GACdW,UAAW,SACXpH,OAAQ,sBACRD,aAAc,IAGlByS,cAAe,CACX1E,SAAU,IACV2E,UAAW,IACX3L,MAAO,OACPyH,OAAQ,QAGZmE,eAAgB,CACZ5E,SAAU,IACV2E,UAAW,IACX3L,MAAO,OACPyH,OAAQ,QAGZoE,sBAAuB,GAGvBC,aAAc,CACVjM,QAAS,OACTmH,SAAU,IACVtL,OAAQ,OACRwF,WAAY,SACZ8J,eAAgB,gBAChBe,SAAU,QAGdC,oBAAqB,CACjBnM,QAAS,OACTG,MAAO,OACPkB,WAAY,SACZ8J,eAAgB,gBAChBe,SAAU,QAGdE,WAAY,CACRpM,QAAS,OACTmH,SAAU,IACV9F,WAAY,SACZ8J,eAAgB,gBAChBe,SAAU,QAGdG,KAAM,CACF/S,MAAO,UAIf,SAASgT,GAAU3S,GACf,IAAMQ,EAAUkG,KACZkM,EAASrQ,OAAOiK,KAAKxM,EAAM6S,KAAKrJ,SAASsJ,MAAK,SAAAC,GAAC,OAAI/S,EAAMgT,SAAS5D,WAAWpP,EAAM6S,KAAKrJ,QAAQuJ,OAChGE,EAAWjT,EAAMwJ,QAAQsJ,MAAK,SAAAI,GAAM,OAAIA,EAAOjS,GAAGmO,WAAWpP,EAAM6S,KAAKrJ,QAAkB,KAAVoJ,EAAgB,IAAM,SAE1G,OACI,gCACI,qBAAKO,oBAAmBnT,EAAMoT,aAAc9R,UAAS,UAAKtB,EAAMqT,KAAO,aAAe,IAAjC,OAAsCrT,EAAMqT,KAAO7S,EAAQ0R,cAAgB1R,EAAQ4R,eAAnF,YAAqGpS,EAAMqT,MAA8B,GAAtBrT,EAAMsT,MAAM7O,QAAqC,KAAtBzE,EAAMoT,aAAsB,SAArE,eAAwFR,GAA7L,gBAA6M5S,EAAM6S,KAAK5R,MAC7Q,eAAC+J,EAAA,EAAD,CAAY/F,QAAQ,UAAUoB,QAAQ,QAAtC,kBACUrG,EAAM6S,KAAK3L,KADrB,OAC+BlH,EAAMuT,KAAKnE,WAAW6D,EAAShS,IAAM,sBAAMK,UAAWd,EAAQkS,KAAzB,SAAgCO,EAAS/L,OAAe+L,EAAS/L,WAOjJ,SAASsM,GAAmBxT,GACxB,OACI,qBAAKiO,OAAQjO,EAAM0D,KAAM8C,MAAOxG,EAAM0D,KAAtC,SACI,wBAAQzC,GAAE,8BAAyBjB,EAAMkT,QAAUO,GAAIzT,EAAM0D,KAAK,EAAGgQ,GAAI1T,EAAM0D,KAAK,EAAGiQ,EAAG3T,EAAM0D,KAAK,EAAGkQ,KAAK,UAKzH,SAASC,GAAY7T,GACjB,IAAMQ,EAAUkG,KACZoN,EAAe9T,EAAMqT,KAAO7S,EAAQ8R,aAAe9R,EAAQiS,WAE/D,OACI,sBAAKnR,UAAWd,EAAQuR,WAAxB,UAEQ/R,EAAMqT,KAEN,gCACI,eAACrI,EAAA,EAAD,CAAY/F,QAAQ,KAApB,UAA0BjF,EAAMkT,OAAOhM,KAAvC,IAA6C,cAACsM,GAAD,CAAoB9P,KAAM,GAAIwP,OAAQlT,EAAMkT,OAAOjS,GAAGyD,MAAM,EAAG,QAC5G,cAACmG,EAAA,EAAD,OAGJ,eAACG,EAAA,EAAD,CAAY/F,QAAQ,KAAKsJ,cAAY,EAArC,UAAuCvO,EAAMkT,OAAOhM,KAApD,IAA0D,cAACsM,GAAD,CAAoB9P,KAAM,GAAIwP,OAAQlT,EAAMkT,OAAOjS,QAEjH,sBAAKK,UAAWtB,EAAMqT,KAAO7S,EAAQ6R,sBAAwB7R,EAAQgS,oBAArE,UACI,sBAAKlR,UAAWwS,EAAhB,UACK9T,EAAMqT,KAAO,qBAAK/R,UAAS,UAAKd,EAAQsR,gBAAb,uBAAmD5D,IAAI,WAAc,KAChGlO,EAAMsT,MAAMxH,QAAO,SAAA+G,GAAI,OAAI7S,EAAMkT,OAAOjS,GAAGmO,WAAWyD,EAAKrJ,QAAQpH,MAAIoJ,KAAI,SAAAqH,GAAI,OAAI,cAACF,GAAD,CAAWU,KAAMrT,EAAMqT,KAAMR,KAAMA,EAAMS,MAAOtT,EAAMsT,MAAO9J,QAASxJ,EAAMwJ,QAAS4J,aAAc,IAAKJ,SAAUhT,EAAMkT,OAAOjS,GAAIsS,KAAMvT,EAAMuT,UAClOvT,EAAMqT,KAAO,KAAO,qBAAK/R,UAAS,UAAKd,EAAQsR,gBAAb,uBAAmD5D,IAAI,cAE7FlO,EAAMqT,KAAO,qBAAKpS,GAAG,aAAaK,UAAWd,EAAQiN,WAAe,KACrE,sBAAKnM,UAAWwS,EAAhB,UACI,qBAAKxS,UAAS,UAAKd,EAAQsR,gBAAb,uBAAmD5D,IAAI,WACpElO,EAAMsT,MAAMxH,QAAO,SAAA+G,GAAI,OAAI7S,EAAMkT,OAAOjS,GAAGmO,WAAWyD,EAAKrJ,QAAQuK,MAAIvI,KAAI,SAAAqH,GAAI,OAAI,cAACF,GAAD,CAAWU,KAAMrT,EAAMqT,KAAMR,KAAMA,EAAMS,MAAOtT,EAAMsT,MAAO9J,QAASxJ,EAAMwJ,QAAS4J,aAAc,IAAKJ,SAAUhT,EAAMkT,OAAOjS,GAAIsS,KAAMvT,EAAMuT,mBAoExOS,OA7Df,SAAehU,GACX,IAAMQ,EAAUkG,KACZuN,EAAajU,EAAMwJ,QAAQsJ,MAAK,SAAAI,GAAM,OAAIlT,EAAMuT,KAAKnE,WAAW8D,EAAOjS,OAE3E,OACI,gCACI,sBAAKK,UAAWd,EAAQ+Q,SAAxB,UACI,gCACI,qBAAKjQ,UAAWd,EAAQoR,cAAxB,SACI,cAAC5G,EAAA,EAAD,CAAY/F,QAAQ,YAApB,6BAIJ,sBAAK3D,UAAWd,EAAQqR,gBAAxB,UACI,cAAC7G,EAAA,EAAD,CAAY/F,QAAQ,KAApB,SACI,sBAAMhE,GAAG,YAAT,iBAEJ,eAAC+J,EAAA,EAAD,CAAY/F,QAAQ,KAApB,cACK,sBAAMhE,GAAG,WAAT,wBAKb,gCACI,qBAAKK,UAAWd,EAAQoR,cAAxB,SACI,cAAC5G,EAAA,EAAD,CAAY/F,QAAQ,YAApB,8BAIJ,qBAAK3D,UAAWd,EAAQqR,gBAAxB,SACI,cAAC7G,EAAA,EAAD,CAAY/F,QAAQ,KAApB,SACI,sBAAMhE,GAAG,WAAT,sBAKZ,gCACI,qBAAKK,UAAWd,EAAQoR,cAAxB,SACI,cAAC5G,EAAA,EAAD,CAAY/F,QAAQ,YAApB,oBAIJ,qBAAK3D,UAAWd,EAAQqR,gBAAxB,SACI,eAAC7G,EAAA,EAAD,CAAY/F,QAAQ,KAApB,UACI,qBAAKgJ,OAAO,KAAKhN,GAAG,kBACpB,sBAAMA,GAAG,aAAT,0BAMhB,gCACI,cAAC4S,GAAD,CAAaX,OAAQe,EAAYzK,QAASxJ,EAAMwJ,QAAS8J,MAAOtT,EAAMsT,MAAOD,MAAM,EAAME,KAAMvT,EAAMuT,OACpGvT,EAAMwJ,QAAQsC,QAAO,SAAAoH,GAAM,OAAKlT,EAAMuT,KAAKnE,WAAW8D,EAAOjS,OAAKuK,KAAI,SAAA0H,GAAM,OACzE,cAACW,GAAD,CAAaX,OAAQA,EAAQ1J,QAASxJ,EAAMwJ,QAAS8J,MAAOtT,EAAMsT,MAAOD,MAAM,EAAOE,KAAMvT,EAAMuT,iB,qBC5MhH7M,GAAYC,YAAW,CACzB8H,KAAM,CACF3H,UAAW,UAGfgI,UAAW,CACPhI,UAAW,UAGfoN,eAAgB,CACZ7N,QAAS,OACTkM,SAAU,OACVf,eAAgB,SAChB,QAAS,CACL2C,WAAY,GACZ5N,YAAa,KAIrB6N,UAAW,CACP5N,MAAO,KAGX6N,aAAc,CACVpG,OAAQ,IAGZc,IAAK,CACDpP,MAAO,OAGX2U,YAAa,KA2EFC,OAvEf,SAAiBvU,GAQb,IAPA,IAAMQ,EAAUkG,KAEZ8N,EAAc,SAAAtB,GACd,OAAOlT,EAAMuT,KAAKnE,WAAW8D,EAAOjS,IAAMT,EAAQuO,IAAMvO,EAAQ8T,aAGhEG,EAAc,EACTlF,EAAI,EAAGA,EAAIvP,EAAM0U,QAAQjQ,QAC1BzE,EAAM0U,QAAQnF,GAAGoF,OAAS3U,EAAM0U,QAAQ,GAAGC,MADTpF,IAElCkF,EAAclF,EAOtB,OAFC,IAAIQ,MAAM,iBAAkBE,OAGzB,8BACI,sBAAK3O,UAAWd,EAAQiO,KAAxB,UACI,cAAC1I,EAAA,EAAD,CAAYnE,QAAS,kBAAM+B,OAAOC,SAASC,UAA3C,SACI,cAAC,KAAD,MAGJ,eAACmH,EAAA,EAAD,CAAY/F,QAAQ,KAApB,mBAC0B,GAAfwP,EAAmB,GAAK,IADnC,OAGA,cAACzJ,EAAA,EAAD,CAAY/F,QAAQ,KAAKsJ,cAAY,EAArC,SACKvO,EAAM0U,QAAQhQ,MAAM,EAAG+P,EAAY,GAAGjJ,KAAI,SAAA0H,GAAM,OAAIA,EAAOhM,QAAM0N,KAAK,QAG3E,cAACrE,GAAA,EAAD,CAAgBtF,UAAWuF,KAA3B,SACI,cAACC,GAAA,EAAD,UACI,cAACa,GAAA,EAAD,UACKtR,EAAM0U,QAAQlJ,KAAI,SAAA0H,GAAM,OACrB,cAACxD,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAWrO,UAAWd,EAAQsO,UAA9B,UACKoE,EAAO2B,UADZ,KACyB7U,EAAMuT,KAAKnE,WAAW8D,EAAOjS,IAAM,sBAAMK,UAAWd,EAAQuO,IAAzB,SAA+BmE,EAAOhM,OAAegM,EAAOhM,KADxH,oBAC+IgM,EAAOyB,MADtJ,kBASpB,cAAChT,EAAA,EAAD,CAAQhC,MAAM,UAAU+D,KAAK,QAAQoH,MAAO,CAAC5I,OAAQ,UAAWN,QAAS,kBAAM0C,GAAOC,KAAK,SAAUvE,EAAM8U,OAAQ9U,EAAMqP,UAAU9G,UAAnI,wBAEA,cAACsC,EAAA,EAAD,IAEA,cAACG,EAAA,EAAD,CAAY/F,QAAQ,KAApB,mBAGA,qBAAK3D,UAAWd,EAAQ0T,eAAxB,SACKlU,EAAMsT,MAAM9H,KAAI,SAAAqH,GAAI,OACjB,gCACI,qBAAK3E,IAAK2E,EAAK3E,IAAK5M,UAAWd,EAAQ4T,YACvC,eAACpJ,EAAA,EAAD,CAAY/F,QAAQ,UAAUoB,QAAQ,QAAtC,kBACUwM,EAAK3L,KACX,uBACA,sBAAM5F,UAAWkT,EAAY3B,EAAKrJ,QAAQpH,GAA1C,SAA+CyQ,EAAKrJ,QAAQpH,EAAE8E,OAHlE,IAG+E,qBAAK5F,UAAWd,EAAQ6T,aAAcnG,IAAI,WAHzH,OAGwI,qBAAK5M,UAAWd,EAAQ6T,aAAcnG,IAAI,WAHlL,IAG8L,sBAAM5M,UAAWkT,EAAY3B,EAAKrJ,QAAQuK,GAA1C,SAA+ClB,EAAKrJ,QAAQuK,EAAE7M,wBC9FxR,ICae6N,IDpBTC,GAAS,CACX5S,EAAG,IAAI6S,MACPlB,EAAG,IAAIkB,MACPC,MAAO,GACPC,eAAgB,IAGpB,QAAc,CAAC,IAAK,KAApB,kBAA0B,CAArB,IAAI5F,GAAC,OACFrB,GAAG,WAAOqB,GAAP,QACPyF,GAAOzF,IAAGrB,IAAMA,GAChB8G,GAAOE,MAAM3F,IAAK,IAAI0F,MACtBD,GAAOE,MAAM3F,IAAGrB,IAAhB,iBAAgCqB,GAAhC,QAGJ,gBAAc,CAAC,MAAO,OAAQ,OAAQ,OAAtC,kBAA8C,CAAzC,IAAIA,GAAC,OACF6F,GAAM,IAAIH,MACdG,GAAIlH,IAAJ,mBAAsBqB,GAAtB,QACAyF,GAAOG,eAAe5F,IAAK6F,GAGhBJ,UEjBTK,GAAU,IAEZC,GAAa,EAEbC,GAAS5S,SAASE,cAAc,UACpC0S,GAAO/O,MAAS,IAA2B8O,GAJtB,EAKrBC,GAAOtH,OAASoH,IAChB,IAAIG,GAAMD,GAAOE,WAAW,MAExBC,GAAO,KACPC,GAAO,IAaX,SAAS3S,KAAsB,IAAfkB,EAAc,uDAAN,KACpBsR,GAAII,UAAU,EAAG,EAAGL,GAAO/O,MAAO+O,GAAOtH,QACzCuH,GAAIK,UAAY,QAEhB,IAAK,IAAItG,EAAI,EAAGA,EAAI+F,GAAa,EAAG/F,IAChCiG,GAAIM,SAAS,IAAuBvG,EAAG,EA3B1B,EA2B2CgG,GAAOtH,QACnE,IAAK,IAAIsB,EAAI,EAAGA,EAAI,EAAGA,IACnBiG,GAAIM,SAAS,EAAG,IAAuBvG,EAAGgG,GAAO/O,MA7BpC,GA+BjB,GAAa,MAATtC,EAAe,CACXA,EAAMjF,KAAKmQ,WAAW,WACtBlL,EAAQA,EAAM6R,eAAe,IACjC,IAAIC,EAAO9R,EAAMC,OAAO8R,wBACpBC,GAAKhS,EAAMiS,QAAUH,EAAKI,KAnCjB,IAmCyCb,GAAO/O,MAAQwP,EAAKxP,OACtE6P,GAAKnS,EAAMoS,QAAUN,EAAK/J,IApCjB,IAoCwCsJ,GAAOtH,OAAS+H,EAAK/H,QAC1E,GAAIiI,EAAI,GAAKG,EAAI,EAAG,OAEpB,GAAIA,GAAKhB,GAAS,OAClB,GAAIa,EAAE,KAA0Bb,GAAS,OAEzC,IAAIkB,EAAUC,KAAKC,MAAMP,EAAE,KACvBR,IAAQa,IACRb,GAAOa,EACPjS,GAAOC,KAAK,QAASmR,KAI7B,GAAY,MAARA,GAAc,CACd,IAAIgB,EAAQ1B,GAAOW,IACfe,EAAMC,UACNnB,GAAIoB,UAAUF,EApDL,EAoD0B,IAAuBhB,GApDjD,EAoDsEL,GAASA,KAIpG,SAASwB,KACLvS,GAAOC,KAAK,OAAQoR,GAAMD,IAC1BA,GAAO,KACPpR,GAAOC,KAAK,QAASmR,IACrB1S,KAGJA,KACAuS,GAAO5K,iBAAiB,YAAa3H,IACrCuS,GAAO5K,iBAAiB,aAAc3H,IACtCuS,GAAO5K,iBAAiB,YAAa3H,IACrCuS,GAAO5K,iBAAiB,WAAYkM,IACpCtB,GAAO5K,iBAAiB,YAAakM,IC7DrC,IASIxH,GACAkE,GAEAuD,GAZEzB,GAAU,GAEV0B,GAAgB,sCAChBC,GAAa,IAAIjH,MAAM,cACvBkH,GAAkB,IAAIlH,MAAM,mBAC5BmH,GAAe,IAAInH,MAAM,gBACzBoH,GAAiB,IAAIpH,MAAM,kBAK7BuD,GAAQ,GAER8D,GAAY,GACZC,GAAa,EACb1B,GAAO,IACP2B,GAAeC,KAAKC,MAEpBjC,GAAS5S,SAASE,cAAc,UAChC2S,GAAMD,GAAOE,WAAW,MAE5B,SAASgC,KACL,IAAIC,GAAYJ,GAAeC,KAAKC,OAAS,IACzCE,EAAW,IACXA,EAAW,GACf/U,SAASC,eAAe,YAAY+U,UAAYD,EAASE,QAAQ,GAGrE,SAASC,GAAUC,EAAmBC,GASlC,IAAK,IAAIxI,KARTgE,GAAOwE,EACP1I,GAAYyI,EACZvC,GAAO/O,MAAS6O,GAAUhG,GAAUvF,QA9BnB,GA8BgCuF,GAAUvF,QAAU,GACrEyL,GAAOtH,OAAS,IAA4BoB,GAAUpF,KAAO,GAC7DuL,GAAIwC,KAAJ,cACAxC,GAAI1O,UAAY,SAChB0O,GAAIyC,aAAe,SACnBZ,GAAa,EACCS,EAAkBxE,MAAO,CAGnC,IAFA,IAAIT,EAAOiF,EAAkBxE,MAAM/D,GAC/BtP,EAAQ,GACHoW,EAAI,EAAGA,EAAIhH,GAAUpF,KAAMoM,IAAK,CAErC,IADA,IAAI6B,EAAS,GACJhC,EAAI,EAAGA,EAAI7G,GAAUvF,QAASoM,IACnCgC,EAAOzI,KAAK,MAEhBxP,EAAMwP,KAAKyI,GAGf5E,GAAM7D,KAAK,CACPxO,GAAIsO,EACJrI,KAAOqI,EAAE,EAAIwH,GAActS,OAApB,UAAgCsS,MAAiBxH,EAAEwH,GAActS,UAAjE,OAA4EsS,GAAcxH,EAAEwH,GAActS,SAAYsS,GAAcxH,GAC3I/F,QAASqJ,EAAKrJ,QACdvJ,MAAOA,EACPkY,MAAOzP,KAAKC,MAAMD,KAAKsE,UAAU/M,MAGzC6W,GAAYxD,GAAM7O,OAClB1B,IAASC,OAAO,eAACC,EAAA,EAAD,CAAenE,MAAOA,EAAtB,UAA6B,cAACoE,EAAA,EAAD,IAAe,cAAC,GAAD,CAAOsG,QAASsO,EAAkBtO,QAAS8J,MAAOA,GAAOC,KAAMA,QAA0B5Q,SAASC,eAAe,SAAS,WAMlL,IAAK,IAAI2M,KDpDb+F,GC+C+BwC,ED/CRhO,QACvByL,GAAO/O,MAAS,IAA2B8O,GAnB1B,ECkEb3S,SAASC,eAAe,cAAcE,YAAYsV,IAClDA,GAAkBtN,MAAMuN,YAAc,OACtC1V,SAASC,eAAe,YAAY+U,UAAYb,GAChDnU,SAASC,eAAe,aAAa+U,UAAYb,GACnCxD,GACVgF,GAAe/I,GACnB6H,GAAUmB,MAAQC,YAAYf,GAAW,IAAK,IAC7C,IAAI1H,MAAM,mBAAoBE,UAIvC,SAASwI,GAAWC,GAChB/V,SAASC,eAAe,cAAc+U,YAAcN,GACpD1B,GAAO+C,EACPpB,GAAeC,KAAKC,MAAQnI,GAAUhF,SACtC,qCAAwB1H,SAASgW,uBAAT,eAAgD,KAARhD,GAAc,IAAM,OAApF,aAA+FhT,SAASgW,uBAAT,2BAA4D,KAARhD,GAAc,IAAM,QAAvK,gBAAgB,KACJiD,UAAUC,IAAI,iBAC1B,qCAAwBlW,SAASgW,uBAAT,eAAwChD,MAAhE,aAA4EhT,SAASgW,uBAAT,2BAAoDhD,OAAhI,gBAAgB,KACJiD,UAAUE,OAAO,iBAC7BzV,YAAW,WACP,qCAAwBV,SAASgW,uBAAT,eAAgD,KAARhD,GAAc,IAAM,OAApF,aAA+FhT,SAASgW,uBAAT,2BAA4D,KAARhD,GAAc,IAAM,QAAvK,gBAAgB,KACJiD,UAAUC,IAAI,iBAC1B,qCAAwBlW,SAASgW,uBAAT,eAAwChD,MAAhE,aAA4EhT,SAASgW,uBAAT,2BAAoDhD,OAAhI,gBAAgB,KACJiD,UAAUE,OAAO,oBAC9B,IAbsB,qBAcRxF,IAdQ,IAczB,2BAAwB,SACf4B,MAAQ,MAfQ,8BAiBzBvS,SAASC,eAAe,iBAAiBsL,IAAzC,WAAmDyH,GAAnD,QDnFJ,SAAoB+C,GAChB/C,GAAO+C,EACPhD,GAAO,KACP1S,KCiFAoV,CAAsBzC,IAClB0B,GAAa,GACbF,GAAelH,OA2BvB,SAAS8I,GAAYrC,EAAOwB,EAAQ3M,GAC5BmL,EAAMC,UACNnB,GAAIoB,UAAUF,EAAQ,GAAuBpL,OAAO4M,GAtHvC,EAsH8D,IAAwB5M,OAAOC,GAAK,GAAI8J,GAASA,IAGpI,SAAS2D,GAAU/Y,EAAO0T,EAAGZ,EAAGkG,EAAIC,GAChC,IAAIC,EAAUlZ,EAAM0T,GAAGZ,GACvB,GAAgB,OAAZoG,EAAkB,OAAO,KAE7B,IADA,IAAIC,EAAW,GACN7J,EAAI,EAAGA,EAAIF,GAAUzF,WAAY2F,IACtC6J,EAAS3J,KAAK,CAACkE,EAAKpE,EAAI0J,EAAKlG,EAAKxD,EAAI2J,IAC1C,OAAIE,EAASC,OAAM,SAAAC,GAAC,OAAIrZ,EAAMqZ,EAAE,IAAIA,EAAE,MAAQH,KACpC,CAAE,CAACxF,EAAGZ,IAAZ,OAAmBqG,GAEZ,KAGf,SAASG,GAAU1G,GAA+D,IAAzD2G,EAAwD,uDAAzC,KAAMC,EAAmC,wDAAnBC,EAAmB,wDAC7ElE,GAAII,UAAU,EAAG,EAAGL,GAAO/O,MAAO+O,GAAOtH,QAGzCuH,GAAIK,UAAY,QAChB,IAAK,IAAItG,EAAI,EAAGA,GAAKF,GAAUpF,KAAMsF,IACjCiG,GAAIM,SAAS,EAAGT,GAAS,GAAuB9F,EAAIgG,GAAO/O,MA3I9C,GA4IjB,IAAK,IAAI+I,EAAI,EAAGA,GAAKF,GAAUvF,QAASyF,IACpCiG,GAAIM,SAAS,GAAuBvG,EAAG8F,GA7I1B,EA6IiDE,GAAOtH,OAAOoH,IAEhF,IAAK,IAAI9F,KAAKsD,EAAK5S,MACf,IAAK,IAAI0Z,KAAK9G,EAAK5S,MAAMsP,GAAI,CACzB,IAAIqK,EAAQ/G,EAAK5S,MAAMsP,GAAGoK,GACb,MAATC,IACAb,GAAY/D,GAAO4E,GAAQD,EAAGpK,GAC1BmK,IACAlE,GAAIK,UAAY,QAChBL,GAAIqE,SAASpN,OAAOoG,EAAKsF,MAAM5I,GAAGoK,IAAM,GAAuBrO,OAAOqO,GAtJrE,EAsJuFtE,GAAY,IAAwB/J,OAAOiE,GAAG,GAAI8F,GAAW,KAKrK,GAAmB,OAAfxC,EAAKqC,MAAgB,CAErB6D,GAAY/D,GAAOW,IAAO9C,EAAKqC,OAAQ,GAIvC,IADA,IAAI3J,EAAM,KACDgE,EAAI,EAAGA,EAAIF,GAAUpF,KAAMsF,IAChC,GAAiC,MAA7BsD,EAAK5S,MAAMsP,GAAGsD,EAAKqC,OAAgB,CACnC3J,EAAMgE,EAAI,EACV,OAGI,GAARhE,IACAA,GAAM,GACC,MAAPA,IACAA,EAAM8D,GAAUpF,KAAO,IACf,IAARsB,IACIyJ,GAAOE,MAAMS,IAAMgB,WACnBnB,GAAIsE,YAAc,IAClBtE,GAAIoB,UAAU5B,GAAOE,MAAMS,IAAQ,GAAuBrK,OAAOuH,EAAKqC,OA9KjE,EA8KuFG,GAAsBA,GAAS,IAAwB/J,OAAOC,GAAK,GA9K1J,IAgLTiK,GAAIsE,YAAc,GAClBf,GAAY/D,GAAOW,IAAO9C,EAAKqC,MAAO3J,GACtCiK,GAAIsE,YAAc,GAM1B,IAAKL,EAAQ,CAKT,IAJA,IAAIM,EACAC,EAAc,GAGTrG,EAAI,EAAGA,GAAKtE,GAAUpF,KAAOoF,GAAUzF,WAAY+J,IACxD,IAAK,IAAIZ,EAAI,EAAGA,EAAI1D,GAAUvF,QAASiJ,IAAK,CACxC,IAAIkH,EAAQjB,GAAUnG,EAAK5S,MAAO0T,EAAGZ,EAAG,EAAG,GAC9B,MAATkH,IACAF,EAASlH,EAAK5S,MAAM0T,GAAGZ,GACvBiH,EAAcA,EAAYE,OAAOD,IAK7C,IAAK,IAAItG,EAAI,EAAGA,EAAItE,GAAUpF,KAAM0J,IAChC,IAAK,IAAIZ,EAAI,EAAGA,GAAK1D,GAAUvF,QAAUuF,GAAUzF,WAAYmJ,IAAK,CAChE,IAAIkH,EAAQjB,GAAUnG,EAAK5S,MAAO0T,EAAGZ,EAAG,EAAG,GAC9B,MAATkH,IACAF,EAASlH,EAAK5S,MAAM0T,GAAGZ,GACvBiH,EAAcA,EAAYE,OAAOD,IAK7C,IAAK,IAAItG,EAAI,EAAGA,GAAKtE,GAAUpF,KAAOoF,GAAUzF,WAAY+J,IACxD,IAAK,IAAIZ,EAAI,EAAGA,GAAK1D,GAAUvF,QAAUuF,GAAUzF,WAAYmJ,IAAK,CAChE,IAAIkH,EAAQjB,GAAUnG,EAAK5S,MAAO0T,EAAGZ,EAAG,EAAG,GAC9B,MAATkH,IACAF,EAASlH,EAAK5S,MAAM0T,GAAGZ,GACvBiH,EAAcA,EAAYE,OAAOD,IAK7C,IAAK,IAAItG,EAAItE,GAAUpF,MAAQoF,GAAUpF,KAAOoF,GAAUzF,WAAa,GAAI+J,EAAItE,GAAUpF,KAAM0J,IAC3F,IAAK,IAAIZ,EAAI,EAAGA,GAAK1D,GAAUvF,QAAUuF,GAAUzF,WAAYmJ,IAAK,CAChE,IAAIkH,EAAQjB,GAAUnG,EAAK5S,MAAO0T,EAAGZ,GAAI,EAAG,GAC/B,MAATkH,IACAF,EAASlH,EAAK5S,MAAM0T,GAAGZ,GACvBiH,EAAcA,EAAYE,OAAOD,IAI7CzE,GAAIK,UAAY,CAACzT,EAAG,YAAa2R,EAAG,aAAagG,GACjD,IA7CS,EA6CLI,EAAc,GA7CT,eA8CKH,GA9CL,yBA8CAzK,EA9CA,QA+CA4K,EAAYC,MAAK,SAAAC,GAAM,OAAI3R,KAAKsE,UAAUqN,IAAW3R,KAAKsE,UAAUuC,QACrE4K,EAAY1K,KAAKF,GACjBiG,GAAIM,SACC,GAAuBvG,EAAE,GA1OzB,EA2OD,IAAwBA,EAAE,GAAG,GAC7B8F,GAASA,MANrB,+BA9CS,+BA8Db,GAAoB,MAAhBmE,GAAwBA,EAAa7C,SAAU,CAC/CnB,GAAIsE,YAAc,IAElBtE,GAAIK,UAAY,YAChBL,GAAIM,SA1PS,EA0PcT,GAAuB,GAAuBhG,GAAUvF,QA1PtE,EA0P8F,GAAuBuF,GAAUpF,KA1P/H,GA4PbuL,GAAIK,UAAY,QAChBL,GAAIM,SAAS,EAAGT,GAASE,GAAO/O,MA7PnB,GA8PbgP,GAAIM,SAAS,EAAGP,GAAOtH,OA9PV,EA8P+BsH,GAAO/O,MA9PtC,GA+PbgP,GAAIM,SAAS,EAAGT,GA/PH,EA+PuCE,GAAOtH,OAASoH,GAAUiF,GAC9E9E,GAAIM,SAASP,GAAO/O,MAhQP,EAgQ2B6O,GAhQ3B,EAgQ+DE,GAAOtH,OAASoH,GAAUiF,GAEtG,IAAIC,EAAMf,EAAahT,MAAQgT,EAAavL,OACxCuM,EAAWjF,GAAO/O,MAAS8T,EAC3BG,EAAYD,EAAWD,EACvBE,EAAYlF,GAAOtH,SAEnBuM,GADAC,EAAYlF,GAAOtH,OAAP,IACWsM,GAE3B,IAAIG,EAAUF,EAAWjF,GAAO/O,OAAU+O,GAAO/O,MAAQgU,GAAY,EAAK,EACtEG,EAAUF,EAAYlF,GAAOtH,QAAWsH,GAAOtH,OAASoH,GAAUoF,GAAa,EAAK,EAExFjF,GAAIoB,UAAU4C,EAAckB,EAASC,EAASH,EAAUC,GAIxDjF,GAAIsE,YAAc,EAClBtE,GAAIoF,aAAa,EAAE,EAAE,EAAE,EAAE,EAAE,GAG/B,OAAOrF,GAAOsF,YAGlB,SAASvC,GAAerX,GACpB,IADwB,EACpB6Z,EAAQvB,GAAUjG,GAAMrS,IADJ,eAEV0B,SAASgW,uBAAT,cAAuC1X,KAF7B,IAExB,oCACMiN,IAAM4M,GAHY,+BCnR5B,IAAIxW,GAASyW,IAAeC,EAAgB,CACxCC,WAAY,CAAC,eAEbC,IAAgB,EAWpB,SAASC,GAAsB1X,GAC3BJ,YAAW,WACHiB,GAAO8W,eACPrY,IAASC,OAAO,eAACC,EAAA,EAAD,CAAenE,MAAOA,EAAtB,UAA6B,cAACoE,EAAA,EAAD,IAAe,cAAC,EAAD,CAAeO,MAAOA,EAAM4X,gBAAgC1Y,SAASC,eAAe,SAChJ0B,GAAOgX,gBAEZ,KAfPvY,IAASC,OAAO,eAACC,EAAA,EAAD,CAAenE,MAAOA,EAAtB,UAA6B,cAACoE,EAAA,EAAD,IAAe,cAAC,EAAD,OAAgCP,SAASC,eAAe,SAEpH0B,GAAOiX,GAAG,WAAW,WACZL,KACDA,IAAgB,EAChBnY,IAASC,OAAO,eAACC,EAAA,EAAD,CAAenE,MAAOA,EAAtB,UAA6B,cAACoE,EAAA,EAAD,IAAe,cAAC,GAAD,OAA0BP,SAASC,eAAe,aAatH0B,GAAOiX,GAAG,gBAAiBJ,IAC3B7W,GAAOiX,GAAG,kBAAmBJ,IAC7B7W,GAAOiX,GAAG,aAAcJ,IAExB7W,GAAOiX,GAAG,OAAO,WAA4C,IAA3C9X,EAA0C,uDAApC,gBAAiBvC,EAAmB,uDAAb,SAC3CiB,EAAW,CACPM,MAAO,MACPvB,MAAOA,EACPM,YAAaiC,OAIrBa,GAAOiX,GAAG,YAAV,sBAAuB,4BAAAnZ,EAAA,sEACAD,EAAW,CAC1BjB,MAAO,+BACPM,YAAa,gDACbK,WAAY,oCACZC,aAAc,WACVsB,EAAO/C,cACPiE,GAAOC,KAAK,cAAZ,2BAA+BiE,IAA/B,IAAoDa,QAAQ,QAPjD,OACfjG,EADe,mDAYvBkB,GAAOiX,GAAG,UAAU,SAAAC,GAChBrZ,EAAW,CACPrB,UAAU,EACVI,MAAO,UACPM,YAAY,GAAD,OAAKga,EAAL,+BACX3Z,WAAY,YACZC,aAAc,kBAAM6B,OAAOC,SAASC,eAa5CS,GAAOiX,GAAG,aAAa,eAGvBjX,GAAOiX,GAAG,eAAe,SAAAlM,GAChBA,EAAUjG,SACXrG,IAASC,OAAO,eAACC,EAAA,EAAD,CAAenE,MAAOA,EAAtB,UAA6B,cAACoE,EAAA,EAAD,IAAe,cAAC,GAAD,CAAOmM,UAAWA,OAA+B1M,SAASC,eAAe,SACzImK,GAAiBE,cAAcoC,EAAU9G,YAG7CjE,GAAOiX,GAAG,cAAc,SAAAlM,GAAS,OAAIoM,GAAmBpM,EAAW/K,GAAOrD,OAC1EqD,GAAOiX,GAAG,cAAc,SAAA7C,GAAO,OAAI+C,GAAoB/C,MACvDpU,GAAOiX,GAAG,SAAS,SAACG,EAAQ9I,EAAQsF,GAAjB,ODWnB,SAAewD,EAAQ9I,EAAQsF,GACvBtF,GAAU+C,KACVrC,GAAMoI,GAAQxG,MAAQgD,GAC1BI,GAAeoD,GCd4BD,CAAeC,EAAQ9I,EAAQsF,MAC9E5T,GAAOiX,GAAG,QAAQ,SAACG,EAAQ9I,EAAQsF,EAAQ3M,GAAzB,ODgBlB,SAAcmQ,EAAQ9I,EAAQsF,EAAQ3M,GAClC,IAAIsH,EAAOS,GAAMoI,GACjB7I,EAAK5S,MAAMiY,GAAQ3M,GAAOqH,EAC1BC,EAAKsF,MAAMD,GAAQ3M,GAAO8L,GAC1BxE,EAAKqC,MAAQ,KACboD,GAAeoD,GACVnI,GAAKnE,WAAWyD,EAAKrJ,QAAQoJ,KAC9BqE,GAAgBhH,OCvB2BwL,CAAcC,EAAQ9I,EAAQsF,EAAQ3M,MACzFjH,GAAOiX,GAAG,MAAM,SAACrI,EAAQyI,GAAT,ODuPhB,SAAoBzI,EAAQyI,GACxBhZ,SAASC,eAAT,8BAA+CsQ,IAAU0I,aAAa,OAAQD,EAAS,QAAU,OCxPjEF,CAAoBvI,EAAQyI,MAChErX,GAAOiX,GAAG,aAAa,SAAA3I,GAAM,ODwB7B,SAAmBA,GAEf,GADAoE,GAAW/G,OACP2C,GAAU+C,GAAM,CAAC,IAAD,iBACFhT,SAASkZ,iBAAT,0BAA6CjJ,KAD3C,IAChB,mCACMgG,UAAUC,IAAI,iBAFJ,gCC1BS4C,CAAmB7I,MACpDtO,GAAOiX,GAAG,kBAAkB,SAACG,EAAQI,GAAT,ODwM5B,SAAwBC,EAASD,GAC7BnZ,SAASC,eAAe,aAAa+U,YAAcb,GACnDxD,GAAMyI,GAASD,QAAUA,EAFa,qBAIxBnZ,SAASgW,uBAAT,cAAuCoD,KAJf,IAItC,2BAAiE,CAAC,IAAzDxM,EAAwD,QAC7DA,EAAEqJ,UAAUC,IAAI,wBAChB,IAAImD,OAAe,EAEJ,GAAXF,EACAE,EAAkB,OAEXF,GAAWvM,EAAE0M,aAAa,qBACjCD,EAAkB,MAGlBA,EAAkB,OAGtBzM,EAAErB,IAAMqL,GAAUjG,GAAMyI,GAAU/G,GAAOG,eAAe6G,GAA6B,GAAXF,IAlBxC,8BAqBtC5E,GAAajH,OC7NgCwL,CAAwBC,EAAQI,MACjFxX,GAAOiX,GAAG,YAAY,SAAC7G,EAASI,GAAV,OD+NtB,SAAkBJ,EAASI,GACvB,IAAK,IAAIvF,KAAK6H,GACV8E,cAAc9E,GAAU7H,WACjB6H,GAAU7H,GAHU,qBAMd+D,IANc,yBAMtBT,EANsB,QAO3BA,EAAK3E,IAAMqL,GAAU1G,EAAM,KAAsB,GAAhBA,EAAKiJ,SAAkB,GAP7B,eAQlBvM,GACLsD,EAAKrJ,QAAQ+F,GAAKF,GAAU7F,QAAQsJ,MAAK,SAAAI,GAAM,OAAIA,EAAOjS,IAAM4R,EAAKrJ,QAAQ+F,OADjF,IAAK,IAAIA,KAAKsD,EAAKrJ,QAAU,EAApB+F,IAFb,2BAAyB,IANM,8BAY/B+D,GAAM6I,MAAK,SAAC/Z,EAAG2R,GAAJ,OAAUgD,GAAc3M,QAAQhI,EAAE8E,MAAQ6P,GAAc3M,QAAQ2J,EAAE7M,SAE7EnE,IAASC,OAAO,eAACC,EAAA,EAAD,CAAenE,MAAOA,EAAtB,UAA6B,cAACoE,EAAA,EAAD,IAAe,cAAC,GAAD,CAASqQ,KAAMA,GAAMmB,QAASA,EAASrF,UAAWA,GAAWiE,MAAOA,GAAOwB,OAAQA,OAA4BnS,SAASC,eAAe,SAEnMyM,GAAY,KACZiE,GAAQ,GACR8D,GAAY,GCjP2BqE,CAAkB/G,EAASI,MACtExQ,GAAOiX,GAAG,UAAU,SAAAxX,GAAI,OAAIJ,OAAOC,SAASkK,KAAhB,YAA4B/J,MAEzCO,W","file":"static/js/main.72ac6e4e.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n\n        background: {\n            default: '#050505',\n        },\n\n        primary: {\n            main: '#d49a3d',\n        },\n    },\n\n    overrides: {\n        MuiButton: {\n            textPrimary: {\n                background: 'linear-gradient(45deg, #ff7b00 0%, #ff00ff 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            },\n\n            textSecondary: {\n                background: 'linear-gradient(45deg, rgb(255,37,180) 30%, rgb(198,19,19) 90%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            }\n        },\n    },\n});\n\nexport default theme;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MUIDialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = theme => ({\n    text: {\n        margin: 0,\n    },\n});\n\nclass Dialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleOpen() {\n        this.setState({open: true});\n    };\n\n    handleClose() {\n        this.setState({open: false});\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <MUIDialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    disablePortal\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={this.props.required}\n                    disableEscapeKeyDown={this.props.required}\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText className={classes.text} id=\"alert-dialog-description\">\n                            {this.props.description}\n                        </DialogContentText>\n                        {this.props.children}\n                    </DialogContent>\n                    <DialogActions>\n                        {this.props.required ? null : (\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                Close\n                            </Button>\n                        )}\n                        {this.props.buttonText ? (\n                            <Button onClick={this.props.buttonAction} color=\"primary\">\n                                {this.props.buttonText}\n                            </Button>\n                        ) : null}\n                    </DialogActions>\n                </MUIDialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Dialog);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Dialog from './';\n\nasync function showDialog(props = {}, children = null) {\n    return new Promise(async res => {\n        props = Object.assign({\n            title: 'Dialog title',\n            required: false,\n        }, props);\n    \n        let dialog;\n        let id = `dialog${props.layer ? props.layer : 0}`;\n        let element = document.getElementById(id);\n        if (element == null) {\n            element = document.createElement('div');\n            element.id = id;\n            document.getElementById('dialog').appendChild(element);\n        }\n        ReactDOM.render((\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Dialog {...props} ref={element => dialog = element}>\n                    {children}\n                </Dialog>\n            </ThemeProvider>\n        ), element);\n        \n        if (!dialog) //if it didnt work,\n            setTimeout(async () => res(await showDialog(props, children)), 100); //try it again with a delay (yes i know i shouldnt but shut up it works)\n        else {\n            dialog.handleOpen();\n            res(dialog);\n        }\n    });\n}\n\nexport default showDialog;","import React from 'react';\nimport './centred.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Connecting() {\n    return (\n        <div className=\"centred\">\n            <CircularProgress />\n            <h3>Attempting to connect to the 8connect4 server...</h3>\n        </div>\n    );\n}\n\nexport default Connecting;","import React from 'react';\nimport './centred.css';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\n\nfunction ConnectFailed(props) {\n    return (\n        <div className=\"centred\">\n            <ClearIcon />\n            <h3>Failed to connect to the 8connect4 server.</h3>\n            {props.error ? <p>Error: \"{props.error}\"</p> : null}\n            <h4>Are you offline? If not, the 8connect4 server might be down.</h4>\n            <Button size=\"large\" color=\"primary\" onClick={() => window.location.reload(false)}>Retry</Button>\n        </div>\n    );\n}\n\nexport default ConnectFailed;","import React from 'react';\nimport socket from '../socket/';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst useStyles = theme => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    joinLabel: {\n        display: 'inline-block',\n        marginTop: 22,\n        marginRight: 4,\n    },\n    textField: {\n        width: '18ch',\n    },\n    textInput: {\n        textTransform: 'uppercase',\n    },\n});\n\nclass CodeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n        };\n        this.changeInput = this.changeInput.bind(this);\n        this.tryCode = this.tryCode.bind(this);\n    }\n\n    changeInput(event) {\n        let code = event.target.value; //get the code entered from the input element\n        code = code.replace(' ', ''); //remove spaces, if any\n        this.setState({code}); //store the code in the state, so that it can be shown on the input element and accessed when the join button is clicked\n    }\n\n    tryCode() {\n        socket.emit('joinMatch', this.state.code);\n    }\n\n    componentDidMount() {\n        /*if (window.location.search.startsWith('?$')) {\n            let p = window.location.search.slice('?$'.length);\n        } else */if (window.location.search.length > 1) {\n            this.setState({code: window.location.search.slice(1)}, () => this.tryCode());\n            window.history.pushState('', '', '/');\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <label {...{}/*className={classes.joinLabel}*/} htmlFor=\"roomCodeInput\">Or, join by code:</label>\n                <br />\n\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"roomCodeInput\">Room code</InputLabel>\n                    <FilledInput\n                        id=\"roomCodeInput\"\n                        type=\"text\"\n                        value={this.state.code}\n                        onChange={this.changeInput}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.textInput,\n                            maxLength: 6,\n                            onKeyDown: e => {if (e.key == 'Enter') this.tryCode()},\n                        }}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Join\"\n                                    onClick={this.tryCode}\n                                    edge=\"end\"\n                                >\n                                    <ArrowForwardIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CodeInput);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport socket from '../socket';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        width: 170,\n    },\n    label: {\n        textAlign: 'center',\n    },\n}));\n\nfunction NameInput() {\n    const classes = useStyles();\n    const [name, setName] = React.useState(localStorage.name ? localStorage.name : '');\n    const changeName = (newName, first = false) => {\n        if (!first)\n            setName(newName);\n        localStorage.name = newName;\n        socket.emit('changeName', newName);\n    }\n    changeName(name, true);\n\n    const handleChange = event => changeName(event.target.value)\n\n    return (\n        <div className={classes.margin}>\n            <Grid container justify=\"center\" spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <AccountCircle />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"nameInput\"\n                        label=\"Your name\"\n                        value={name}\n                        onChange={handleChange}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.input,\n                            maxLength: 12,\n                            onKeyDown: e => {if (e.key == 'Enter') document.activeElement.blur()},\n                        }}\n                        InputLabelProps={{\n                            className: classes.label,\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default NameInput","import React from 'react';\nimport { Typography, Divider, FormControl, Select, MenuItem, InputLabel, FormLabel, Slider, Grid, Switch, Button, ButtonGroup, FormControlLabel, Checkbox, RadioGroup, Radio, FormHelperText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport showDialog from '../Dialog/show';\nimport socket from '../socket';\nimport defaultMatchOptions from './defaultMatchOptions.json';\nconst allowedPlayers = [1, 25];\nconst maxGamesAllowed = [1, 4];\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n    },\n    select: {\n        width: 50,\n    },\n}));\n\nconst timerMarks = [\n    5,\n    8,\n    12,\n    15,\n    20,\n    25,\n    30,\n    45,\n    60,\n    120,\n    200,\n    300,\n];\nconst timerMarksFormat = n => `${timerMarks[n]}s`;\n\nvar options = {\n    ...defaultMatchOptions,\n    ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions) : {}\n};\n\nfunction NumberTweaker(props) {\n    return (\n        <ButtonGroup size=\"small\">\n            <Button onClick={() => props.fn(-10)} disabled={props.disabled || props.state == props.min}>- -</Button>\n            <Button onClick={() => props.fn(-1)} disabled={props.disabled || props.state == props.min}>-</Button>\n            <Button disabled>{props.state}</Button>\n            <Button onClick={() => props.fn(+1)} disabled={props.disabled || props.state == props.max}>+</Button>\n            <Button onClick={() => props.fn(+10)} disabled={props.disabled || props.state == props.max}>++</Button>\n        </ButtonGroup>\n    );\n}\n\nfunction MatchOptions(props) {\n    const classes = useStyles();\n\n    const sendUpdate = () => {\n        if (props.editable && props.started)\n            socket.emit('updateOptions', options);\n    }\n    const [publicity, setPublicity] = React.useState(options.public);\n    const handlePublicityChange = event => {\n        options.public = !publicity;\n        setPublicity(!publicity);\n        sendUpdate();\n    };\n    const [players, setPlayers] = React.useState(options.players);\n    const changePlayers = change => {\n        options.players += change;\n        if (options.players < allowedPlayers[0]) options.players = allowedPlayers[0];\n        if (options.players > allowedPlayers[1]) options.players = allowedPlayers[1];\n        setPlayers(options.players);\n        sendUpdate();\n    };\n    const [gameMax, setGameMax] = React.useState(options.gameMax);\n    const changeGameMax = change => {\n        options.gameMax += change;\n        if (options.gameMax < maxGamesAllowed[0]) options.gameMax = maxGamesAllowed[0];\n        if (options.gameMax > maxGamesAllowed[1]) options.gameMax = maxGamesAllowed[1];\n        setGameMax(options.gameMax);\n        sendUpdate();\n    };\n    const [lineLength, setLineLength] = React.useState(options.lineLength);\n    const changeLineLength = (event, value) => {\n        value = Number(value);\n        options.lineLength = value;\n        setLineLength(value);\n        if (columns < value)\n            changeColumns({target: {value}});\n        if (rows < value)\n            changeRows({target: {value}});\n        sendUpdate();\n    };\n    const [columns, setColumns] = React.useState(options.columns);\n    const changeColumns = event => {\n        options.columns = event.target.value;\n        setColumns(event.target.value);\n        sendUpdate();\n    };\n    const [rows, setRows] = React.useState(options.rows);\n    const changeRows = event => {\n        options.rows = event.target.value;\n        setRows(event.target.value);\n        sendUpdate();\n    };\n    const [turnTime, setTurnTime] = React.useState(timerMarks.indexOf(options.turnTime));\n    const handleTurnTimeChange = (event, value) => {\n        options.turnTime = timerMarks[value];\n        setTurnTime(value);\n        sendUpdate();\n    };\n    const [runDownTimer, setRunDownTimer] = React.useState(options.runDownTimer);\n    const handleRunDownTimerChange = event => {\n        options.runDownTimer = !runDownTimer;\n        setRunDownTimer(!runDownTimer);\n        sendUpdate();\n    };\n    \n    let updateOptions = () => {\n        setPublicity(options.public);\n        setPlayers(options.players);\n        setGameMax(options.gameMax);\n        setLineLength(options.lineLength);\n        setColumns(options.columns);\n        setRows(options.rows);\n        setTurnTime(timerMarks.indexOf(options.turnTime));\n        setRunDownTimer(options.runDownTimer);\n    };\n    React.useEffect(() => {\n        window.addEventListener('matchOptionsChanged', updateOptions);\n        return () => window.removeEventListener('matchOptionsChanged', updateOptions);\n    }, []);\n\n    return (\n        <div>\n            <Divider style={{marginTop: 16}} />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Privacy</FormLabel>\n                <Typography component=\"div\">\n                    <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                        <Grid item><LockIcon /></Grid>\n                        <Grid item>\n                            <Switch color=\"primary\" checked={publicity} onChange={handlePublicityChange} disabled={!props.editable} />\n                        </Grid>\n                        <Grid item><PublicIcon /></Grid>\n                    </Grid>\n                </Typography>\n            </FormControl>\n\n            {props.started ? null : <span>\n                <Divider />\n                \n                <FormControl className={classes.formControl}>\n                    <FormLabel style={{marginBottom: 5}}>Max players</FormLabel>\n                    <NumberTweaker fn={changePlayers} min={allowedPlayers[0]} max={allowedPlayers[1]} state={players} disabled={!props.editable} />\n                </FormControl>\n            </span>}\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Max games per player per colour</FormLabel>\n                <NumberTweaker fn={changeGameMax} min={maxGamesAllowed[0]} max={maxGamesAllowed[1]} state={gameMax} disabled={!props.editable} />\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Row length to win</FormLabel>\n                <RadioGroup value={lineLength} onChange={changeLineLength} row>\n                    {[3, 4, 5, 6].map(n => <FormControlLabel value={n} key={n} control={<Radio color=\"primary\" disabled={!props.editable} />} label={n} />)}\n                </RadioGroup>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Board Size</FormLabel>\n            </FormControl>\n            <br />\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={columns}\n                    onChange={changeColumns}\n                    displayEmpty\n                    className={classes.select}\n                    disabled={!props.editable}\n                >\n                    {[3, 4, 5, 6, 7, 8, 9, 10].filter(n => n >= lineLength).map(n => <MenuItem key={n} value={n}>{n}</MenuItem>)}\n                </Select>\n                <FormHelperText>Columns</FormHelperText>\n            </FormControl>\n            <span style={{\n                position: 'relative',\n                top: 10,\n                fontSize: 35,\n            }}>×</span>\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={rows}\n                    onChange={changeRows}\n                    displayEmpty\n                    className={classes.select}\n                    disabled={!props.editable}\n                >\n                    {[3, 4, 5, 6, 7, 8, 9, 10].filter(n => n >= lineLength).map(n => <MenuItem key={n} value={n}>{n}</MenuItem>)}\n                </Select>\n                <FormHelperText>Rows</FormHelperText>\n            </FormControl>\n\n            {/*<FormControl className={classes.formControl}>\n                <InputLabel>Players</InputLabel>\n                <Select value={players} onChange={handlePlayersChange}>\n                    {[...Array(allowedPlayersMax+1).keys()].slice(allowedPlayersMin).map(i => <MenuItem value={i}>{i}</MenuItem>)}\n                </Select>\n            </FormControl>*/}\n\n            <Divider />\n\n            <FormControl className={classes.formControl} style={{minWidth: 300, paddingRight: 10}}>\n                <FormLabel>Turn time</FormLabel>\n                <Slider\n                    value={turnTime}\n                    onChange={handleTurnTimeChange}\n                    step={null}\n                    marks={[...timerMarks.keys()].map(n => ({value: n, label: String(timerMarks[n])}))}\n                    min={0}\n                    max={timerMarks.length-1}\n                    getAriaValueText={timerMarksFormat}\n                    valueLabelFormat={timerMarksFormat}\n                    valueLabelDisplay=\"auto\"\n                    disabled={!props.editable}\n                />\n            </FormControl>\n            \n            <Divider style={{marginBottom: 8}} />\n\n            <FormControlLabel\n                control={<Checkbox color=\"primary\" checked={runDownTimer} onChange={handleRunDownTimerChange} disabled={!props.editable} />}\n                label=\"Always run down turn timer?\"\n                labelPlacement=\"start\"\n            />\n        </div>\n    );\n}\n\nfunction changeOptions(newOptions) {\n    options = newOptions;\n    window.dispatchEvent(new Event('matchOptionsChanged'));\n}\n\nfunction hostChanged(amNowHost) {\n    if (dialog.state.open && dialog.editable != amNowHost)\n        showMatchOptions(amNowHost, true);\n}\n\nvar dialog = {\n    state: {\n        open: false,\n    }\n};\n\nasync function showMatchOptions(editable, started) {\n    let elem;\n\n    dialog = await showDialog({\n        ...(started ? {\n            title: 'Match options',\n            description: 'Current options (editable by the host):',\n        } : {\n            title: 'Create Match',\n            description: 'Match options:',\n            buttonText: 'Create',\n            buttonAction: () => {\n                dialog.handleClose();\n                localStorage.MatchOptions = JSON.stringify(options);\n                socket.emit('createMatch', options);\n            }\n        }),\n    }, <MatchOptions editable={editable} started={started} />);\n    dialog.editable = editable;\n}\n\nexport default {\n    showMatchOptions,\n    changeOptions,\n    hostChanged,\n};","import React from 'react';\nimport { Typography, Button, Divider, Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeInput from './CodeInput';\nimport NameInput from './NameInput';\nimport socket from '../socket';\nimport showMatchOptions from './showMatchOptions';\nimport showDialog from '../Dialog/show';\n\nconst useStyles = makeStyles({\n    logoImage: {\n        display: 'block',\n        textAlign: 'center',\n        margin: 'auto',\n        maxWidth: 350,\n    },\n\n    controls: {\n        textAlign: 'center',\n        border: '1px solid #ffffff1f',\n        borderRadius: 10,\n    },\n});\n\nfunction Home() {\n    const classes = useStyles();\n    let showTutorial = async () => {\n        let videoId = 'TEoMw_icLKQ';\n        let dialog = await showDialog({\n            layer: 'tutorial',\n            title: 'New to 8connect4?',\n            description: <span>Watch <Link href={`https://youtu.be/${videoId}`} target=\"_blank\" rel=\"noopener\">this short video</Link> for an explanation of 8connect4.</span>,\n            buttonText: 'Don\\'t show again',\n            buttonAction: () => {\n                dialog.handleClose();\n                localStorage.tutorialWatched = true\n            },\n        }, <iframe width=\"550\" height=\"300\" src={`https://www.youtube.com/embed/${videoId}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>)\n    };\n    React.useEffect(() => {\n        if (!localStorage.hasOwnProperty('tutorialWatched'))\n            showTutorial();\n    }, []);\n\n    return (\n        <div>\n            <Typography className={classes.title} variant=\"h3\" gutterBottom><img className={classes.logoImage} src=\"/iconanimated.png\" alt=\"8connect4\" /></Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                Play 8 games of connect 4 at once. <Link onClick={showTutorial}>Watch tutorial</Link>\n            </Typography>\n\n            <div className={classes.controls}>\n                <NameInput />\n\n                <Divider />\n                <br />\n\n                <Button size=\"large\" color=\"primary\" onClick={() => socket.emit('findMatch')}>Find Match</Button>\n                <br />\n                <Button size=\"small\" color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions(true, false)}>Create Match</Button>\n\n                <br /><br /><br />\n\n                <CodeInput />\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Typography, Divider, Button, ButtonGroup, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Popover } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport LinkIcon from '@material-ui/icons/Link';\nimport EditIcon from '@material-ui/icons/Edit';\nimport socket from '../socket';\nimport copy from 'clipboard-copy';\nimport NameInput from '../Home/NameInput';\nimport showDialog from '../Dialog/show';\nimport showMatchOptions from '../Home/showMatchOptions';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    privacyIcon: {\n        marginRight: 10\n    },\n\n    table: {\n        width: 400,\n        margin: 'auto',\n    },\n\n    head: {\n        backgroundColor: 'black',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    you: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n});\n\nfunction Lobby(props) {\n    const classes = useStyles();\n\n    let tableBody = [];\n    let amHost = socket.id.startsWith(props.matchInfo.host);\n    for (let i = 0; i < props.matchInfo.options.players; i++) {\n        let content = '';\n        let you = false;\n        if (i in props.matchInfo.players) {\n            content = props.matchInfo.players[i].name;\n            you = socket.id.startsWith(props.matchInfo.players[i].id);\n        }\n        tableBody.push(\n            <TableRow key={i}>\n                <TableCell className={classes.tableCell}>\n                    {i in props.matchInfo.players && props.matchInfo.host == props.matchInfo.players[i].id ?\n                        <Tooltip title=\"This player is the host. They have the ability to start the game.\">\n                            <StarsIcon fontSize=\"inherit\" />\n                        </Tooltip>\n                    : null}\n                    {you ? <span className={classes.you}>{content}</span> : content}\n                    {you ? <Tooltip title=\"Change your name\">\n                        <IconButton size=\"small\" onClick={() => showDialog({title: 'Change your name?'}, <NameInput />)}><EditIcon fontSize=\"inherit\" /></IconButton>\n                    </Tooltip> : null}\n                    {i in props.matchInfo.players && amHost && !props.matchInfo.starting && !you ? <span>\n                        <Tooltip title=\"Kick - remove this player from this lobby.\">\n                            <IconButton size=\"small\" onClick={() => socket.emit('kick', props.matchInfo.players[i].id)}><ClearIcon fontSize=\"inherit\" /></IconButton>\n                        </Tooltip>\n                        {!props.matchInfo.players[i].bot ? \n                            <Tooltip title=\"Promote - transfer your host privileges to this player.\" onClick={() => socket.emit('promote', props.matchInfo.players[i].id)}>\n                                <IconButton size=\"small\"><StarBorderIcon fontSize=\"inherit\" /></IconButton>\n                            </Tooltip>\n                        : null}\n                    </span> : null}\n                </TableCell>\n            </TableRow>\n        );\n    }\n\n    React.useEffect(() => {\n        showMatchOptions.hostChanged(amHost);\n    });\n\n    if (props.matchInfo.starting) {\n        (new Audio(`/countdown/${props.matchInfo.startTimer}.mp3`)).play();\n    }\n\n    let copyHelp = 'Copy a link others can use to join this lobby to your clipboard.';\n    let [copyTitle, setCopyTitle] = React.useState(copyHelp);\n\n    return (\n        <div>\n            <IconButton onClick={() => window.location.reload()}>\n                <MeetingRoomIcon />\n            </IconButton>\n            <div className={classes.root}>\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    Room code\n                </Typography>\n                <Typography variant=\"h3\" gutterBottom>\n                    <span className={classes.privacyIcon}>\n                        {props.matchInfo.options.public ? <Tooltip title=\"This is a public match. Anyone can join this match from the 'Find Match' button on the homepage.\"><PublicIcon /></Tooltip> : <Tooltip title=\"This is a private match. Only people with the room code can join.\"><LockIcon /></Tooltip>}\n                    </span>\n                    {props.matchInfo.code}\n                    <Tooltip title={copyTitle}>\n                        <IconButton onClick={() => {\n                            copy(`${window.location.protocol}//${window.location.host}?${props.matchInfo.code}`);\n                            setCopyTitle('Copied to clipboard!');\n                            setTimeout(() => {\n                                setCopyTitle(copyHelp);\n                            }, 3000);\n                        }}><LinkIcon /></IconButton>\n                    </Tooltip>\n                </Typography>\n\n                <Button color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions(amHost, true)}>Match options</Button>\n                <br /><br />\n                {props.matchInfo.starting ?\n                    <Typography variant=\"h4\">Starting in {props.matchInfo.startTimer}...</Typography>\n                :\n                    <Tooltip title={amHost ? 'Begin a timer to start the match. No more players will be able to join.' : 'Only the host can start the match.'}>\n                        <span>\n                            <Button color={amHost ? 'primary' : 'default'} size=\"large\" onClick={() => socket.emit('startMatch')} disabled={!amHost}>Start Match</Button>\n                        </span>\n                    </Tooltip>\n                }\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow className={classes.head}>\n                                <TableCell className={classes.tableCell}>\n                                    Players: {props.matchInfo.players.length}/{props.matchInfo.options.players}\n                                    {(() => {\n                                        \n                                        const [anchorEl, setAnchorEl] = React.useState(null);\n\n                                        const handleClick = (event) => {\n                                            setAnchorEl(event.currentTarget);\n                                        };\n\n                                        const handleClose = () => {\n                                            setAnchorEl(null);\n                                        };\n\n                                        const open = Boolean(anchorEl);\n\n                                        return (\n                                            <span>\n                                                {amHost ? <span>\n                                                    <Tooltip title=\"Add bot\">\n                                                        <IconButton size=\"small\" onClick={handleClick}>🤖</IconButton>\n                                                    </Tooltip>\n                                                    <Popover\n                                                        open={open}\n                                                        anchorEl={anchorEl}\n                                                        onClose={handleClose}\n                                                        anchorOrigin={{\n                                                            vertical: 'bottom',\n                                                            horizontal: 'center',\n                                                        }}\n                                                        transformOrigin={{\n                                                            vertical: 'top',\n                                                            horizontal: 'center',\n                                                        }}\n                                                    >\n                                                        <ButtonGroup variant=\"text\" color=\"default\" aria-label=\"text primary button group\">\n                                                            {['Easy', 'Medium', 'Hard'].map((diff, index) => <Button onClick={() => socket.emit('bot', index)}>{diff}</Button>)}\n                                                        </ButtonGroup>\n                                                    </Popover>\n                                                </span> : null}\n                                            </span>\n                                        );\n                                    })()}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tableBody}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    );\n}\n\nexport default Lobby;","import React from 'react';\nimport { Typography, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './index.css';\n\nconst useStyles = makeStyles({\n    gameInfo: {\n        display: 'flex',\n        width: '100%',\n        marginBottom: 20,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'black',\n        borderBottom: '1px solid #ffffff1f',\n        zIndex: 100,\n        '& div': {\n            flexGrow: 1,\n        },\n    },\n\n    gameInfoTitle: {\n        textAlign: 'center',\n    },\n\n    gameInfoContent: {\n        display: 'flex',\n        alignItems: 'end',\n        justifyContent: 'center',\n        /*textAlign: 'center',\n        '& *': {\n            display: 'inline',\n        },*/\n    },\n\n    title: {\n        textAlign: 'center',\n    },\n\n    colourIndicator: {\n        height: 49,\n    },\n\n    playerArea: {\n        paddingTop: 8,\n        paddingBottom: 8,\n        marginBottom: 16,\n        textAlign: 'center',\n        border: '1px solid #ffffff1f',\n        borderRadius: 10,\n    },\n\n    selfGameImage: {\n        maxWidth: 125,\n        maxHeight: 125,\n        width: 'auto',\n        height: 'auto',\n    },\n\n    otherGameImage: {\n        maxWidth: 100,\n        maxHeight: 100,\n        width: 'auto',\n        height: 'auto',\n    },\n\n    playingGamesContainer: {\n    },\n\n    playingGames: {\n        display: 'flex',\n        maxWidth: 600,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    otherGamesContainer: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    otherGames: {\n        display: 'flex',\n        maxWidth: 600,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    vsMe: {\n        color: 'red',\n    }\n});\n\nfunction GameImage(props) {\n    const classes = useStyles();\n    let colour = Object.keys(props.game.players).find(c => props.playerId.startsWith(props.game.players[c]));\n    let opponent = props.players.find(player => player.id.startsWith(props.game.players[colour == 'a' ? 'b' : 'a']));// props.players.find(player => player.id.startsWith(Object.values(props.game.players).find(player => !props.playerId.startsWith(player))));\n\n    return (\n        <div>\n            <img data-playercolour={props.playerColour} className={`${props.self ? 'self-game ' : ''}${props.self ? classes.selfGameImage : classes.otherGameImage} ${props.self && props.games.length == 1 && props.playerColour == 'b' ? 'game-b' : `game-${colour}`} game${props.game.id}`} />\n            <Typography variant=\"caption\" display=\"block\">\n                Game {props.game.name} vs {props.myId.startsWith(opponent.id) ? <span className={classes.vsMe}>{opponent.name}</span> : opponent.name}\n            </Typography>\n        </div>\n    );\n}\n\nconst turnTakenIndicatorSize = 13;\nfunction TurnTakenIndicator(props) {\n    return (\n        <svg height={props.size} width={props.size}>\n            <circle id={`playerTurnIndicator-${props.player}`} cx={props.size/2} cy={props.size/2} r={props.size/2} fill=\"red\" />\n        </svg>\n    );\n}\n\nfunction PlayerGames(props) {\n    const classes = useStyles();\n    let gameRowClass = props.self ? classes.playingGames : classes.otherGames;\n\n    return (\n        <div className={classes.playerArea}>\n            {\n                props.self\n                ?\n                <div>\n                    <Typography variant=\"h4\">{props.player.name} <TurnTakenIndicator size={23} player={props.player.id.slice(0, 6)} /></Typography>\n                    <Divider />\n                </div>\n                :\n                <Typography variant=\"h6\" gutterBottom>{props.player.name} <TurnTakenIndicator size={14} player={props.player.id} /></Typography>\n            }\n            <div className={props.self ? classes.playingGamesContainer : classes.otherGamesContainer}>\n                <div className={gameRowClass}>\n                    {props.self ? <img className={`${classes.colourIndicator} colour-indicator-a`} src=\"/a.png\" /> : null}\n                    {props.games.filter(game => props.player.id.startsWith(game.players.a)).map(game => <GameImage self={props.self} game={game} games={props.games} players={props.players} playerColour={'a'} playerId={props.player.id} myId={props.myId} />)}\n                    {props.self ? null : <img className={`${classes.colourIndicator} colour-indicator-a`} src=\"/a.png\" />}\n                </div>\n                {props.self ? <div id=\"controller\" className={classes.controls} /> : null}\n                <div className={gameRowClass}>\n                    <img className={`${classes.colourIndicator} colour-indicator-b`} src=\"/b.png\" />\n                    {props.games.filter(game => props.player.id.startsWith(game.players.b)).map(game => <GameImage self={props.self} game={game} games={props.games} players={props.players} playerColour={'b'} playerId={props.player.id} myId={props.myId} />)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction Match(props) {\n    const classes = useStyles();\n    let selfPlayer = props.players.find(player => props.myId.startsWith(player.id));\n\n    return (\n        <div>\n            <div className={classes.gameInfo}>\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Ongoing games\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <span id=\"gamesLeft\">0</span>\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            /<span id=\"maxGames\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Turn time left\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <span id=\"turnTime\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Turn\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <img height=\"35\" id=\"turnIndicator\" />\n                            <span id=\"turnNumber\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <PlayerGames player={selfPlayer} players={props.players} games={props.games} self={true} myId={props.myId} />\n                {props.players.filter(player => !props.myId.startsWith(player.id)).map(player => (\n                    <PlayerGames player={player} players={props.players} games={props.games} self={false} myId={props.myId} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Match;","import React from 'react';\nimport { Typography, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Button, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport socket from '../socket/';\n//import { gameNameChars } from '../Match/gameplay';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    gamesContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        '& div': {\n            marginLeft: 25,\n            marginRight: 25,\n        },\n    },\n\n    gameImage: {\n        width: 150,\n    },\n\n    counterImage: {\n        height: 10,\n    },\n\n    you: {\n        color: 'red',\n    },\n\n    otherPlayer: {\n    },\n});\n\nfunction Results(props) {\n    const classes = useStyles();\n\n    let playerClass = player => {\n        return props.myId.startsWith(player.id) ? classes.you : classes.otherPlayer;\n    }\n\n    let winnersStop = 0;\n    for (let i = 1; i < props.results.length; i++) {\n        if (props.results[i].score == props.results[0].score)\n            winnersStop = i;\n        else\n            break;\n    }\n\n    (new Audio('/endMatch.mp3')).play();\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <IconButton onClick={() => window.location.reload()}>\n                    <HomeIcon />\n                </IconButton>\n\n                <Typography variant=\"h2\">\n                    Winner{winnersStop == 0 ? '' : 's'}:\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    {props.results.slice(0, winnersStop+1).map(player => player.name).join(', ')}\n                </Typography>\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {props.results.map(player => (\n                                <TableRow>\n                                    <TableCell className={classes.tableCell}>\n                                        {player.placement}. {props.myId.startsWith(player.id) ? <span className={classes.you}>{player.name}</span> : player.name} with a score of {player.score}.\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Button color=\"primary\" size=\"large\" style={{margin: '16px 0'}} onClick={() => socket.emit('rejoin', props.rjCode, props.matchInfo.options)}>Play again</Button>\n\n                <Divider/>\n\n                <Typography variant=\"h3\">\n                    Games\n                </Typography>\n                <div className={classes.gamesContainer}>\n                    {props.games.map(game => (\n                        <div>\n                            <img src={game.src} className={classes.gameImage} />\n                            <Typography variant=\"caption\" display=\"block\">\n                                Game {game.name}\n                                <br />\n                                <span className={playerClass(game.players.a)}>{game.players.a.name}</span> <img className={classes.counterImage} src=\"/a.png\" /> vs <img className={classes.counterImage} src=\"/b.png\" /> <span className={playerClass(game.players.b)}>{game.players.b.name}</span>\n                                {/*<br />\n                                {game.outcome == false ? 'Draw' : <span>Winner: <img className={classes.counterImage} src={`/${game.outcome}.png`} /></span>}*/}\n                            </Typography>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Results;","const images = {\n    a: new Image(),\n    b: new Image(),\n    hover: {},\n    outcomeOverlay: {}\n};\n\nfor (let i of ['a', 'b']) {\n    let src = `/${i}.png`;\n    images[i].src = src;\n    images.hover[i] = new Image();\n    images.hover[i].src = `/hover_${i}.png`;\n}\n\nfor (let i of ['win', 'loss', 'draw', 'end']) {\n    let img = new Image();\n    img.src = `/outcome/${i}.png`;\n    images.outcomeOverlay[i] = img;\n}\n\nexport default images;","function getRandomInt(n) {\n    return Math.floor(Math.random() * n);\n}\n\nfunction shuffleString(s) {\n    let arr = s.split('');\n    let n = arr.length;\n\n    for(let i=0 ; i<n-1 ; ++i) {\n        let j = getRandomInt(n);\n        \n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n    s = arr.join('');\n    return s;\n}\n\nexport default shuffleString;","import images from './images';\nimport socket from '../socket';\n\nconst boxSize = 100;\nconst gridlineSize = 4;\nvar boardWidth = 7;\n\nvar canvas = document.createElement('canvas');\ncanvas.width = ((gridlineSize + boxSize) * boardWidth) + gridlineSize;\ncanvas.height = boxSize + (gridlineSize * 2);\nvar ctx = canvas.getContext('2d');\n\nvar slot = null;\nvar turn = 'a';\n\nfunction turnChange(newTurn) {\n    turn = newTurn;\n    slot = null;\n    render();\n}\n\nfunction setupController(matchInfo) {\n    boardWidth = matchInfo.columns;\n    canvas.width = ((gridlineSize + boxSize) * boardWidth) + gridlineSize;\n}\n\nfunction render(event = null) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //clear canvas\n    ctx.fillStyle = 'white';\n\n    for (let i = 0; i < boardWidth + 1; i++)\n        ctx.fillRect((boxSize+gridlineSize)*i, 0, gridlineSize, canvas.height);\n    for (let i = 0; i < 2; i++)\n        ctx.fillRect(0, (boxSize+gridlineSize)*i, canvas.width, gridlineSize);\n\n    if (event != null) {\n        if (event.type.startsWith('touch'))\n            event = event.changedTouches[0];\n        let bbox = event.target.getBoundingClientRect();\n        let x = (event.clientX - bbox.left - gridlineSize) * (canvas.width / bbox.width);\n        let y = (event.clientY - bbox.top - gridlineSize) * (canvas.height / bbox.height);\n        if (x < 0 || y < 0) return;\n\n        if (y >= boxSize) return;\n        if (x%(boxSize+gridlineSize) >= boxSize) return;\n\n        let newSlot = Math.floor(x/(boxSize+gridlineSize));\n        if (slot != newSlot) {\n            slot = newSlot;\n            socket.emit('hover', slot);\n        }\n    }\n\n    if (slot != null) {\n        let image = images[turn];\n        if (image.complete)\n            ctx.drawImage(image, gridlineSize+((boxSize+gridlineSize)*slot), gridlineSize, boxSize, boxSize);\n    }\n}\n\nfunction move() {\n    socket.emit('move', turn, slot);\n    slot = null;\n    socket.emit('hover', slot);\n    render();\n}\n\nrender();\ncanvas.addEventListener('mousemove', render);\ncanvas.addEventListener('touchstart', render);\ncanvas.addEventListener('touchmove', render);\ncanvas.addEventListener('touchend', move);\ncanvas.addEventListener('mousedown', move);\n\nexport {\n    canvas,\n    setupController,\n    turnChange,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Match from './';\nimport Results from '../Results';\nimport shuffleString from './shuffleString';\nimport images from './images';\nimport * as controller from './controller';\n\nconst boxSize = 50;\nconst gridlineSize = 4;\nconst gameNameChars = '123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst placeAudio = new Audio('/place.mp3');\nconst otherPlaceAudio = new Audio('/otherPlace.mp3');\nconst gameEndAudio = new Audio('/endGame.mp3');\nconst startTurnAudio = new Audio('/startTurn.mp3');\n\n\nvar matchInfo;\nvar myId;\nvar games = [];\nvar gamesLeft;\nvar intervals = [];\nvar turnNumber = 0;\nvar turn = 'a';\nvar turnTimerEnd = Date.now();\n\nvar canvas = document.createElement('canvas');\nvar ctx = canvas.getContext('2d');\n\nfunction showTimer() {\n    let timeLeft = (turnTimerEnd - Date.now()) / 1000;\n    if (timeLeft < 0)\n        timeLeft = 0;\n    document.getElementById('turnTime').innerHTML = timeLeft.toFixed(2);\n}\n\nfunction playMatch(startingMatchInfo, sentId) {\n    myId = sentId;\n    matchInfo = startingMatchInfo;\n    canvas.width = (boxSize * matchInfo.columns) + ((matchInfo.columns + 1) * gridlineSize);\n    canvas.height = (boxSize + gridlineSize) * (matchInfo.rows + 1);\n    ctx.font = `30px Roboto`;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    turnNumber = 0;\n    for (let i in startingMatchInfo.games) {\n        let game = startingMatchInfo.games[i];\n        let state = [];\n        for (let y = 0; y < matchInfo.rows; y++) {\n            let column = [];\n            for (let x = 0; x < matchInfo.columns; x++) {\n                column.push(null);\n            }\n            state.push(column);\n        }\n\n        games.push({\n            id: i,\n            name: (i+1 > gameNameChars.length ? `${gameNameChars[~~(i/gameNameChars.length)]}${gameNameChars[i%gameNameChars.length]}` : gameNameChars[i]),\n            players: game.players,\n            state: state,\n            order: JSON.parse(JSON.stringify(state)),\n        });\n    }\n    gamesLeft = games.length;\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Match players={startingMatchInfo.players} games={games} myId={myId} /></ThemeProvider>, document.getElementById('root'), () => {\n        controller.setupController(startingMatchInfo);\n        document.getElementById('controller').appendChild(controller.canvas);\n        controller.canvas.style.touchAction = 'none';\n        document.getElementById('maxGames').innerHTML = gamesLeft;\n        document.getElementById('gamesLeft').innerHTML = gamesLeft;\n        for (let i in games)\n            drawBoardsOfId(i);\n        intervals.timer = setInterval(showTimer, 1000/24);\n        (new Audio('/startMatch.mp3')).play();\n    });\n}\n\nfunction switchTurn(newTurn) {\n    document.getElementById('turnNumber').innerHTML = ++turnNumber;\n    turn = newTurn;\n    turnTimerEnd = Date.now() + matchInfo.turnTime;\n    for (let element of [...document.getElementsByClassName(`game-${turn == 'a' ? 'b' : 'a'}`), ...document.getElementsByClassName(`colour-indicator-${turn == 'a' ? 'b' : 'a'}`)])\n        element.classList.add('inactive-game');\n    for (let element of [...document.getElementsByClassName(`game-${turn}`), ...document.getElementsByClassName(`colour-indicator-${turn}`)])\n        element.classList.remove('inactive-game');\n    setTimeout(() => {\n        for (let element of [...document.getElementsByClassName(`game-${turn == 'a' ? 'b' : 'a'}`), ...document.getElementsByClassName(`colour-indicator-${turn == 'a' ? 'b' : 'a'}`)])\n            element.classList.add('inactive-game');\n        for (let element of [...document.getElementsByClassName(`game-${turn}`), ...document.getElementsByClassName(`colour-indicator-${turn}`)])\n            element.classList.remove('inactive-game');\n    }, 50);\n    for (let game of games) {\n        game.hover = null;\n    }\n    document.getElementById('turnIndicator').src = `/${turn}.png`;\n    controller.turnChange(turn);\n    if (turnNumber > 1)\n        startTurnAudio.play();\n}\n\nfunction hover(gameId, colour, column) {\n    if (colour == turn)\n        games[gameId].hover = column;\n    drawBoardsOfId(gameId);\n}\n\nfunction move(gameId, colour, column, row) {\n    let game = games[gameId];\n    game.state[column][row] = colour;\n    game.order[column][row] = turnNumber;\n    game.hover = null;\n    drawBoardsOfId(gameId);\n    if (!myId.startsWith(game.players[colour]))\n        otherPlaceAudio.play();\n}\n\nfunction takenTurn(colour) {\n    placeAudio.play();\n    if (colour == turn) {\n        for (let i of document.querySelectorAll(`.self-game.game-${colour}`))\n            i.classList.add('inactive-game');\n    }\n}\n\nfunction drawCounter(image, column, row) {\n    if (image.complete)\n        ctx.drawImage(image, ((boxSize+gridlineSize)*Number(column))+gridlineSize, (boxSize+gridlineSize)*(Number(row)+1), boxSize, boxSize);\n}\n\nfunction checkLine(state, r, c, rD, cD) {\n    let toCheck = state[r][c];\n    if (toCheck === null) return null;\n    let checking = [];\n    for (let i = 1; i < matchInfo.lineLength; i++)\n        checking.push([r + (i * rD), c + (i * cD)]);\n    if (checking.every(t => state[t[0]][t[1]] === toCheck))\n        return [[r, c], ...checking];\n    else\n        return null;\n}\n\nfunction drawBoard(game, overlayImage = null, isDraw = false, showOrder = false) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //clear canvas\n\n    //draw gridlines\n    ctx.fillStyle = 'white';\n    for (let i = 0; i <= matchInfo.rows; i++)\n        ctx.fillRect(0, boxSize+((boxSize+gridlineSize)*i), canvas.width, gridlineSize);\n    for (let i = 0; i <= matchInfo.columns; i++)\n        ctx.fillRect((boxSize+gridlineSize)*i, boxSize, gridlineSize, canvas.height-boxSize);\n\n    for (let i in game.state)\n        for (let j in game.state[i]) {\n            let piece = game.state[i][j];\n            if (piece != null) {\n                drawCounter(images[piece], j, i);\n                if (showOrder) {\n                    ctx.fillStyle = 'white';\n                    ctx.fillText(String(game.order[i][j]), ((boxSize+gridlineSize)*Number(j))+gridlineSize+(boxSize/2), (boxSize+gridlineSize)*(Number(i)+1)+(boxSize/2)+3);\n                }\n            }\n        }\n    \n    if (game.hover !== null) {\n\n        drawCounter(images[turn], game.hover, -1); //draw counter above board\n\n        //draw counter inside board\n        let row = null;       \n        for (let i = 0; i < matchInfo.rows; i++) {\n            if (game.state[i][game.hover] != null) {\n                row = i - 1;\n                break;\n            }\n        }\n        if (row == -1) //if the top slot was full\n            row = false; //skip this turn\n        if (row == null) //if all the slots were empty\n            row = matchInfo.rows - 1; //use the bottom slot\n        if (row !== false) {\n            if (images.hover[turn].complete) {\n                ctx.globalAlpha = 0.15;\n                ctx.drawImage(images.hover[turn], ((boxSize+gridlineSize)*Number(game.hover))+gridlineSize, boxSize+gridlineSize, boxSize, (boxSize+gridlineSize)*(Number(row)+1)-gridlineSize);\n            }\n            ctx.globalAlpha = 0.5;\n            drawCounter(images[turn], game.hover, row);\n            ctx.globalAlpha = 1; //reset alpha\n        }\n        \n\n    }\n\n    if (!isDraw) {\n        let winner;\n        let winLocation = [];\n\n        //Check down\n        for (let r = 0; r <= matchInfo.rows - matchInfo.lineLength; r++)\n            for (let c = 0; c < matchInfo.columns; c++) {\n                let tiles = checkLine(game.state, r, c, 1, 0);\n                if (tiles != null) {\n                    winner = game.state[r][c];\n                    winLocation = winLocation.concat(tiles);\n                }\n            }\n    \n        //Check right\n        for (let r = 0; r < matchInfo.rows; r++)\n            for (let c = 0; c <= matchInfo.columns - matchInfo.lineLength; c++) {\n                let tiles = checkLine(game.state, r, c, 0, 1);\n                if (tiles != null) {\n                    winner = game.state[r][c];\n                    winLocation = winLocation.concat(tiles);\n                }\n            }\n    \n        //Check down-right\n        for (let r = 0; r <= matchInfo.rows - matchInfo.lineLength; r++)\n            for (let c = 0; c <= matchInfo.columns - matchInfo.lineLength; c++) {\n                let tiles = checkLine(game.state, r, c, 1, 1);\n                if (tiles != null) {\n                    winner = game.state[r][c];\n                    winLocation = winLocation.concat(tiles);\n                }\n            }\n    \n        //Check down-left\n        for (let r = matchInfo.rows - (matchInfo.rows - matchInfo.lineLength + 1); r < matchInfo.rows; r++)\n            for (let c = 0; c <= matchInfo.columns - matchInfo.lineLength; c++) {\n                let tiles = checkLine(game.state, r, c, -1, 1);\n                if (tiles != null) {\n                    winner = game.state[r][c];\n                    winLocation = winLocation.concat(tiles);\n                }\n            }\n        \n        ctx.fillStyle = {a: '#f58600af', b: '#03ffffaf'}[winner];\n        let squaresDone = [];\n        for (let i of winLocation)\n            if (!squaresDone.some(square => JSON.stringify(square) == JSON.stringify(i))) {\n                squaresDone.push(i);\n                ctx.fillRect(\n                    ((boxSize+gridlineSize)*i[1])+gridlineSize,\n                    (boxSize+gridlineSize)*(i[0]+1),\n                    boxSize, boxSize\n                );\n            }\n        /*ctx.lineWidth = 5;\n        ctx.beginPath();\n        ctx.moveTo(((boxSize+gridlineSize)*Number(winLocation[1]))+gridlineSize, (boxSize+gridlineSize)*(Number(winLocation[0])+1));\n        ctx.lineTo(((boxSize+gridlineSize)*Number(winLocation[3]))+gridlineSize, (boxSize+gridlineSize)*(Number(winLocation[2])+1));\n        ctx.stroke();*/\n    }\n\n    if (overlayImage != null && overlayImage.complete) {\n        ctx.globalAlpha = 0.75;\n        //draw grey \"window\"\n        ctx.fillStyle = '#6060607B';\n        ctx.fillRect(gridlineSize, boxSize+gridlineSize, ((boxSize+gridlineSize)*matchInfo.columns)-gridlineSize, ((boxSize+gridlineSize)*matchInfo.rows)-gridlineSize);\n        //draw black border\n        ctx.fillStyle = 'black';\n        ctx.fillRect(0, boxSize, canvas.width, gridlineSize); //top border\n        ctx.fillRect(0, canvas.height-gridlineSize, canvas.width, gridlineSize); //bottom border\n        ctx.fillRect(0, boxSize+gridlineSize, gridlineSize, canvas.height - boxSize - gridlineSize * 2); //left border\n        ctx.fillRect(canvas.width-gridlineSize, boxSize+gridlineSize, gridlineSize, canvas.height - boxSize - gridlineSize * 2); //right border\n        //draw icon\n        let wrh = overlayImage.width / overlayImage.height;\n        let newWidth = canvas.width - (gridlineSize * 2);\n        let newHeight = newWidth / wrh;\n        if (newHeight > canvas.height) {\n            newHeight = canvas.height - (boxSize + (gridlineSize * 2));\n            newWidth = newHeight * wrh;\n        }\n        let xOffset = newWidth < canvas.width ? ((canvas.width - newWidth) / 2) : 0;\n        let yOffset = newHeight < canvas.height ? ((canvas.height + boxSize - newHeight) / 2) : 0;\n\n        ctx.drawImage(overlayImage, xOffset, yOffset, newWidth, newHeight);\n        //\n        //ctx.drawImage(overlayImage, 0, 0, canvas.width, canvas.height);\n        //reset\n        ctx.globalAlpha = 1;\n        ctx.setTransform(1,0,0,1,0,0);\n    }\n    \n    return canvas.toDataURL();\n}\n\nfunction drawBoardsOfId(id) {\n    let board = drawBoard(games[id]);\n    for (let i of document.getElementsByClassName(`game${id}`))\n        i.src = board;\n}\n\nfunction outcomeDecided(boardId, outcome) {\n    document.getElementById('gamesLeft').innerHTML = --gamesLeft;\n    games[boardId].outcome = outcome;\n\n    for (let i of document.getElementsByClassName(`game${boardId}`)) {\n        i.classList.add('game-outcome-decided');\n        let relativeOutcome;\n        let glowColor;\n        if (outcome == false) {\n            relativeOutcome = 'draw';\n            glowColor = 'red';\n        } else if (outcome == i.getAttribute('data-playercolour')) {\n            relativeOutcome = 'win';\n            glowColor = 'green';\n        } else {\n            relativeOutcome = 'loss';\n            glowColor = 'grey';\n        }\n        i.src = drawBoard(games[boardId], images.outcomeOverlay[relativeOutcome], outcome == false);\n    }\n\n    gameEndAudio.play();\n}\n\nfunction endMatch(results, rjCode) {\n    for (let i in intervals) {\n        clearInterval(intervals[i]);\n        delete intervals[i];\n    }\n\n    for (let game of games) {\n        game.src = drawBoard(game, null, game.outcome == false, true);\n        for (let i in game.players) {\n            game.players[i] = matchInfo.players.find(player => player.id == game.players[i]);\n        }\n    }\n    games.sort((a, b) => gameNameChars.indexOf(a.name) - gameNameChars.indexOf(b.name));\n\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Results myId={myId} results={results} matchInfo={matchInfo} games={games} rjCode={rjCode} /></ThemeProvider>, document.getElementById('root'));\n\n    matchInfo = null;\n    games = [];\n    intervals = [];\n}\n\nfunction turnStatus(player, status) {\n    document.getElementById(`playerTurnIndicator-${player}`).setAttribute('fill', status ? 'green' : 'red');\n}\n\nexport {\n    playMatch,\n    hover,\n    move,\n    takenTurn,\n    drawBoard,\n    switchTurn,\n    outcomeDecided,\n    endMatch,\n    turnStatus,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport socketIOClient from 'socket.io-client';\nimport serverLocation from './server.json';\nimport showDialog from '../Dialog/show';\nimport Connecting from './Connect/ing';\nimport ConnectFailed from './Connect/Failed';\nimport Home from '../Home';\nimport Lobby from '../Lobby';\nimport * as gameplay from '../Match/gameplay';\nimport defaultMatchOptions from '../Home/defaultMatchOptions.json';\nimport showMatchOptions from '../Home/showMatchOptions';\n\nvar socket = socketIOClient(serverLocation, {\n    transports: ['websocket'],\n});\nvar connectedOnce = false;\n\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Connecting /></ThemeProvider>, document.getElementById('root'));\n\nsocket.on('connect', () => {\n    if (!connectedOnce) {\n        connectedOnce = true;\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Home /></ThemeProvider>, document.getElementById('root'));\n    }\n});\n\nfunction displayConnectionFail(error) {\n    setTimeout(() => {\n        if (socket.disconnected) {\n            ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ConnectFailed error={error.toString()} /></ThemeProvider>, document.getElementById('root'));\n            socket.disconnect();\n        }\n    }, 10000);\n}\n\nsocket.on('connect_error', displayConnectionFail);\nsocket.on('connect_timeout', displayConnectionFail);\nsocket.on('disconnect', displayConnectionFail);\n\nsocket.on('err', (error='Unknown error', title='Error:') => {\n    showDialog({\n        layer: 'err',\n        title: title,\n        description: error,\n    });\n});\n\nsocket.on('noMatches', async () => {\n    let dialog = await showDialog({\n        title: 'No public matches available.',\n        description: 'Maybe create one yourself for people to join?',\n        buttonText: 'Create match with default options',\n        buttonAction: () => {\n            dialog.handleClose();\n            socket.emit('createMatch', {...defaultMatchOptions, public: true});\n        },\n    });\n});\n\nsocket.on('kicked', kicker => {\n    showDialog({\n        required: true,\n        title: 'Kicked!',\n        description: `${kicker} kicked you from the lobby.`,\n        buttonText: 'Back Home',\n        buttonAction: () => window.location.reload(),\n    });\n});\n\n/*\nsocket.on('disconnect', () => {\n    setTimeout(() => {\n        alert('Lost connection to the 8connect4 server.');\n        window.location.reload();\n    }, 200);\n});\n*/\n\nsocket.on('joinMatch', () => {\n});\n\nsocket.on('matchUpdate', matchInfo => {\n    if (!matchInfo.started)\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Lobby matchInfo={matchInfo} /></ThemeProvider>, document.getElementById('root'));\n    showMatchOptions.changeOptions(matchInfo.options);\n});\n\nsocket.on('matchStart', matchInfo => gameplay.playMatch(matchInfo, socket.id));\nsocket.on('turnSwitch', newTurn => gameplay.switchTurn(newTurn));\nsocket.on('hover', (gameId, colour, column) => gameplay.hover(gameId, colour, column));\nsocket.on('move', (gameId, colour, column, row) => gameplay.move(gameId, colour, column, row));\nsocket.on('ts', (player, status) => gameplay.turnStatus(player, status));\nsocket.on('takenTurn', colour => gameplay.takenTurn(colour));\nsocket.on('outcomeDecided', (gameId, outcome) => gameplay.outcomeDecided(gameId, outcome));\nsocket.on('endMatch', (results, rjCode) => gameplay.endMatch(results, rjCode));\nsocket.on('rejoin', code => window.location.href = `/?${code}`);\n\nexport default socket;"],"sourceRoot":""}