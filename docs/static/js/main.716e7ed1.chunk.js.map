{"version":3,"sources":["theme/index.js","Dialog/index.js","Dialog/show.js","socket/Connect/ing.js","socket/Connect/Failed.js","Home/CodeInput.js","Home/NameInput.js","Home/showMatchOptions.js","Home/index.js","Lobby/index.js","Match/index.js","Results/index.js","Match/images.js","Match/shuffleString.js","Match/controller.js","Match/gameplay.js","socket/index.js"],"names":["theme","createMuiTheme","palette","type","background","default","primary","main","overrides","MuiButton","textPrimary","borderRadius","border","color","padding","boxShadow","textSecondary","Dialog","props","state","open","handleOpen","bind","handleClose","this","setState","classes","onClose","disablePortal","aria-labelledby","aria-describedby","disableBackdropClick","required","disableEscapeKeyDown","DialogTitle","id","title","DialogContent","dividers","DialogContentText","className","text","description","children","DialogActions","Button","onClick","buttonText","buttonAction","React","Component","withStyles","margin","showDialog","a","Promise","res","Object","assign","ReactDOM","render","ThemeProvider","CssBaseline","ref","element","dialog","document","getElementById","setTimeout","Connecting","CircularProgress","ConnectFailed","error","size","window","location","reload","CodeInput","code","changeInput","tryCode","event","target","value","replace","socket","emit","htmlFor","FormControl","clsx","textField","variant","InputLabel","FilledInput","onChange","autoComplete","inputProps","textInput","maxLength","onKeyDown","e","key","endAdornment","InputAdornment","position","IconButton","aria-label","edge","spacing","marginBottom","joinLabel","display","marginTop","marginRight","width","textTransform","useStyles","makeStyles","input","label","textAlign","NameInput","useState","localStorage","name","setName","changeName","newName","first","Grid","container","justify","alignItems","item","TextField","activeElement","blur","InputLabelProps","allowedPlayers","maxGamesAllowed","formControl","minWidth","selectEmpty","timerMarks","timerMarksFormat","n","options","public","players","gameMax","turnTime","runDownTimer","MatchOptions","JSON","parse","NumberTweaker","ButtonGroup","fn","Infinity","disabled","publicity","setPublicity","setPlayers","setGameMax","indexOf","setTurnTime","setRunDownTimer","Divider","style","FormLabel","Typography","component","Switch","checked","change","Slider","step","marks","keys","map","String","min","max","length","getAriaValueText","valueLabelFormat","valueLabelDisplay","FormControlLabel","control","Checkbox","labelPlacement","stringify","showMatchOptions","logoImage","maxWidth","controls","Home","gutterBottom","src","alt","root","privacyIcon","table","head","backgroundColor","tableCell","you","fontWeight","Lobby","tableBody","i","matchInfo","maxPlayers","content","startsWith","push","TableRow","TableCell","host","Tooltip","fontSize","starting","Audio","startTimer","play","amHost","TableContainer","Paper","Table","TableHead","TableBody","gameInfo","justifyContent","top","borderBottom","zIndex","flexGrow","gameInfoTitle","gameInfoContent","colourIndicator","height","playerArea","paddingTop","paddingBottom","selfGameImage","otherGameImage","playingGamesContainer","playingGames","flexWrap","otherGamesContainer","otherGames","vsMe","GameImage","colour","game","find","c","playerId","opponent","player","data-playercolour","playerColour","self","games","myId","PlayerGames","gameRowClass","filter","b","Match","selfPlayer","gamesContainer","marginLeft","gameImage","counterImage","otherPlayer","Results","playerClass","winnersStop","results","score","slice","join","placement","outcome","shuffleString","images","Image","hover","outcomeOverlay","img","boxSize","canvas","createElement","ctx","getContext","slot","turn","clearRect","fillStyle","boardWidth","fillRect","changedTouches","bbox","getBoundingClientRect","x","clientX","left","y","clientY","newSlot","Math","floor","image","complete","drawImage","move","addEventListener","gamesLeft","gameNameChars","placeAudio","otherPlaceAudio","gameEndAudio","startTurnAudio","intervals","turnNumber","turnTimerEnd","Date","now","showTimer","timeLeft","innerHTML","toFixed","switchTurn","newTurn","getElementsByClassName","classList","add","remove","controller","drawCounter","column","row","Number","drawBoard","overlayImage","j","piece","boardHeight","globalAlpha","toDataURL","drawBoardsOfId","board","socketIOClient","serverLocation","transports","connectedOnce","displayConnectionFail","disconnected","toString","disconnect","on","started","startingMatchInfo","sentId","appendChild","touchAction","timer","setInterval","gameplay","gameId","querySelectorAll","boardId","relativeOutcome","getAttribute","clearInterval","sort"],"mappings":"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","file":"static/js/main.716e7ed1.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n\n        background: {\n            default: '#050505',\n        },\n\n        primary: {\n            main: '#d49a3d',\n        },\n    },\n\n    overrides: {\n        MuiButton: {\n            textPrimary: {\n                background: 'linear-gradient(45deg, #ff7b00 0%, #ff00ff 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            },\n\n            textSecondary: {\n                background: 'linear-gradient(45deg, rgb(255,37,180) 30%, rgb(198,19,19) 90%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            }\n        },\n    },\n});\n\nexport default theme;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MUIDialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = theme => ({\n    text: {\n        margin: 0,\n    },\n});\n\nclass Dialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleOpen() {\n        this.setState({open: true});\n    };\n\n    handleClose() {\n        this.setState({open: false});\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <MUIDialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    disablePortal\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={this.props.required}\n                    disableEscapeKeyDown={this.props.required}\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText className={classes.text} id=\"alert-dialog-description\">\n                            {this.props.description}\n                        </DialogContentText>\n                        {this.props.children}\n                    </DialogContent>\n                    <DialogActions>\n                        {this.props.required ? null : (\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                Close\n                            </Button>\n                        )}\n                        {this.props.buttonText ? (\n                            <Button onClick={this.props.buttonAction} color=\"primary\">\n                                {this.props.buttonText}\n                            </Button>\n                        ) : null}\n                    </DialogActions>\n                </MUIDialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Dialog);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Dialog from './';\n\nasync function showDialog(props = {}, children = null) {\n    return new Promise(async res => {\n        props = Object.assign({\n            title: 'Dialog title',\n            required: false,\n        }, props);\n    \n        let dialog;\n        ReactDOM.render((\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Dialog {...props} ref={element => dialog = element}>\n                    {children}\n                </Dialog>\n            </ThemeProvider>\n        ), document.getElementById('dialog'));\n        \n        if (!dialog) //if it didnt work,\n            setTimeout(async () => res(await showDialog(props, children)), 100); //try it again with a delay (yes i know i shouldnt but shut up it works)\n        else {\n            dialog.handleOpen();\n            res(dialog);\n        }\n    });\n}\n\nexport default showDialog;","import React from 'react';\nimport './centred.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Connecting() {\n    return (\n        <div className=\"centred\">\n            <CircularProgress />\n            <h3>Attempting to connect to the 8connect4 server...</h3>\n        </div>\n    );\n}\n\nexport default Connecting;","import React from 'react';\nimport './centred.css';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\n\nfunction ConnectFailed(props) {\n    return (\n        <div className=\"centred\">\n            <ClearIcon />\n            <h3>Failed to connect to the 8connect4 server.</h3>\n            {props.error ? <p>Error: \"{props.error}\"</p> : null}\n            <h4>Are you offline? If not, the 8connect4 server might be down.</h4>\n            <Button size=\"large\" color=\"primary\" onClick={() => window.location.reload(false)}>Retry</Button>\n        </div>\n    );\n}\n\nexport default ConnectFailed;","import React from 'react';\nimport socket from '../socket/';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst useStyles = theme => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    joinLabel: {\n        display: 'inline-block',\n        marginTop: 22,\n        marginRight: 4,\n    },\n    textField: {\n        width: '18ch',\n    },\n    textInput: {\n        textTransform: 'uppercase',\n    },\n});\n\nclass CodeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n        };\n        this.changeInput = this.changeInput.bind(this);\n        this.tryCode = this.tryCode.bind(this);\n    }\n\n    changeInput(event) {\n        let code = event.target.value; //get the code entered from the input element\n        code = code.replace(' ', ''); //remove spaces, if any\n        this.setState({code}); //store the code in the state, so that it can be shown on the input element and accessed when the join button is clicked\n    }\n\n    tryCode() {\n        socket.emit('joinMatch', this.state.code);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <label {...{}/*className={classes.joinLabel}*/} htmlFor=\"roomCodeInput\">Or, join by code:</label>\n                <br />\n\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"roomCodeInput\">Room code</InputLabel>\n                    <FilledInput\n                        id=\"roomCodeInput\"\n                        type=\"text\"\n                        value={this.state.code}\n                        onChange={this.changeInput}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.textInput,\n                            maxLength: 6,\n                            onKeyDown: e => {if (e.key == 'Enter') this.tryCode()},\n                        }}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Join\"\n                                    onClick={this.tryCode}\n                                    edge=\"end\"\n                                >\n                                    <ArrowForwardIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CodeInput);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport socket from '../socket';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        width: 170,\n    },\n    label: {\n        textAlign: 'center',\n    },\n}));\n\nfunction NameInput() {\n    const classes = useStyles();\n    const [name, setName] = React.useState(localStorage.name ? localStorage.name : '');\n    const changeName = (newName, first = false) => {\n        if (!first)\n            setName(newName);\n        localStorage.name = newName;\n        socket.emit('changeName', newName);\n    }\n    changeName(name, true);\n\n    const handleChange = event => changeName(event.target.value)\n\n    return (\n        <div className={classes.margin}>\n            <Grid container justify=\"center\" spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <AccountCircle />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"nameInput\"\n                        label=\"Your name\"\n                        value={name}\n                        onChange={handleChange}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.input,\n                            maxLength: 12,\n                            onKeyDown: e => {if (e.key == 'Enter') document.activeElement.blur()},\n                        }}\n                        InputLabelProps={{\n                            className: classes.label,\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default NameInput","import React from 'react';\nimport { Typography, Divider, FormControl, Select, MenuItem, InputLabel, FormLabel, Slider, Grid, Switch, Button, ButtonGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport showDialog from '../Dialog/show';\nimport socket from '../socket';\nconst allowedPlayers = [1, 32];\nconst maxGamesAllowed = [1, 12];\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 300,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n}));\n\nconst timerMarks = [\n    1,\n    2,\n    3,\n    5,\n    8,\n    12,\n    15,\n    20,\n    30,\n    45,\n    60,\n    120,\n];\nconst timerMarksFormat = n => `${timerMarks[n]}s`;\n\nvar options = {\n    public: false,\n    players: 9,\n    gameMax: 4,\n    turnTime: 8,\n    runDownTimer: true,\n    ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions) : {}\n};\n\nfunction NumberTweaker(props) {\n    return (\n        <ButtonGroup size=\"small\">\n            <Button onClick={() => props.fn(-Infinity)}>&lt;&lt;</Button>\n            <Button onClick={() => props.fn(-10)}>- -</Button>\n            <Button onClick={() => props.fn(-1)}>-</Button>\n            <Button disabled>{props.state}</Button>\n            <Button onClick={() => props.fn(+1)}>+</Button>\n            <Button onClick={() => props.fn(+10)}>++</Button>\n            <Button onClick={() => props.fn(+Infinity)}>&gt;&gt;</Button>\n        </ButtonGroup>\n    );\n}\n\nfunction MatchOptions() {\n    const classes = useStyles();\n\n    const [publicity, setPublicity] = React.useState(options.public);\n    const handlePublicityChange = event => {\n        options.public = !publicity;\n        setPublicity(!publicity);\n    };\n    const [players, setPlayers] = React.useState(options.players);\n    const changePlayers = change => {\n        options.players += change;\n        if (options.players < allowedPlayers[0]) options.players = allowedPlayers[0];\n        if (options.players > allowedPlayers[1]) options.players = allowedPlayers[1];\n        setPlayers(options.players);\n    };\n    const [gameMax, setGameMax] = React.useState(options.gameMax);\n    const changeGameMax = change => {\n        options.gameMax += change;\n        if (options.gameMax < maxGamesAllowed[0]) options.gameMax = maxGamesAllowed[0];\n        if (options.gameMax > maxGamesAllowed[1]) options.gameMax = maxGamesAllowed[1];\n        setGameMax(options.gameMax);\n    };\n    const [turnTime, setTurnTime] = React.useState(timerMarks.indexOf(options.turnTime));\n    const handleTurnTimeChange = (event, value) => {\n        options.turnTime = timerMarks[value];\n        setTurnTime(value);\n    };\n    const [runDownTimer, setRunDownTimer] = React.useState(options.runDownTimer);const\n    handleRunDownTimerChange = event => {\n        options.runDownTimer = !runDownTimer;\n        setRunDownTimer(!runDownTimer);\n    };\n\n    return (\n        <div>\n            <Divider style={{marginTop: 16, marginBottom: 8}} />\n\n            <FormLabel>Privacy</FormLabel>\n            <Typography component=\"div\">\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                    <Grid item><LockIcon /></Grid>\n                    <Grid item>\n                        <Switch color=\"primary\" checked={publicity} onChange={handlePublicityChange} />\n                    </Grid>\n                    <Grid item><PublicIcon /></Grid>\n                </Grid>\n            </Typography>\n\n            <Divider />\n            \n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Max players</FormLabel>\n                <NumberTweaker fn={changePlayers} state={players} />\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Max games per player per colour</FormLabel>\n                <NumberTweaker fn={changeGameMax} state={gameMax} />\n            </FormControl>\n\n            {/*<FormControl className={classes.formControl}>\n                <InputLabel>Players</InputLabel>\n                <Select value={players} onChange={handlePlayersChange}>\n                    {[...Array(allowedPlayersMax+1).keys()].slice(allowedPlayersMin).map(i => <MenuItem value={i}>{i}</MenuItem>)}\n                </Select>\n            </FormControl>*/}\n\n            <Divider style={{marginBottom: 8}} />\n\n            <FormLabel>Turn time</FormLabel>\n            <Slider\n                value={turnTime}\n                onChange={handleTurnTimeChange}\n                step={null}\n                marks={[...timerMarks.keys()].map(n => ({value: n, label: String(timerMarks[n])}))}\n                min={0}\n                max={timerMarks.length-1}\n                getAriaValueText={timerMarksFormat}\n                valueLabelFormat={timerMarksFormat}\n                valueLabelDisplay=\"auto\"\n            />\n            \n            <Divider style={{marginBottom: 8}} />\n\n            <FormControlLabel\n                control={<Checkbox color=\"primary\" checked={runDownTimer} onChange={handleRunDownTimerChange} />}\n                label=\"Always run down turn timer?\"\n                labelPlacement=\"start\"\n            />\n        </div>\n    );\n}\n  \n\nasync function showMatchOptions() {\n    let elem;\n\n    let dialog = await showDialog({\n        title: 'Create Match',\n        description: 'Match options:',\n        buttonText: 'Create',\n        buttonAction: () => {\n            dialog.handleClose();\n            localStorage.MatchOptions = JSON.stringify(options);\n            socket.emit('createMatch', options);\n        },\n    }, <MatchOptions />);\n}\n\nexport default showMatchOptions;","import React from 'react';\nimport { Typography, Button, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeInput from './CodeInput';\nimport NameInput from './NameInput';\nimport socket from '../socket';\nimport showMatchOptions from './showMatchOptions';\n\nconst useStyles = makeStyles({\n    logoImage: {\n        display: 'block',\n        textAlign: 'center',\n        margin: 'auto',\n        maxWidth: 350,\n    },\n\n    controls: {\n        textAlign: 'center',\n        border: '1px solid #ffffff1f',\n        borderRadius: 10,\n    },\n});\n\nfunction Home() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Typography className={classes.title} variant=\"h3\" gutterBottom><img className={classes.logoImage} src=\"/iconanimated.png\" alt=\"8connect4\" /></Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                Play 8 games of connect 4 at once.\n            </Typography>\n\n            <div className={classes.controls}>\n                <NameInput />\n\n                <Divider />\n                <br />\n\n                <Button size=\"large\" color=\"primary\" onClick={() => socket.emit('findMatch')}>Find Match</Button>\n                <br />\n                <Button size=\"small\" color=\"secondary\" onClick={showMatchOptions}>Create Match</Button>\n\n                <br /><br /><br />\n\n                <CodeInput />\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Typography, Divider, Button, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport socket from '../socket';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    privacyIcon: {\n        marginRight: 10\n    },\n\n    table: {\n        width: 400,\n        margin: 'auto',\n    },\n\n    head: {\n        backgroundColor: 'black',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    you: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n});\n\nfunction Lobby(props) {\n    const classes = useStyles();\n\n    let tableBody = [];\n    for (let i = 0; i < props.matchInfo.maxPlayers; i++) {\n        let content = '';\n        let you = false\n        if (i in props.matchInfo.players) {\n            content = props.matchInfo.players[i].name;\n            you = socket.id.startsWith(props.matchInfo.players[i].id);\n        }\n        tableBody.push(\n            <TableRow key={i}>\n                <TableCell className={classes.tableCell}>\n                    {i in props.matchInfo.players && props.matchInfo.host == props.matchInfo.players[i].id ?\n                        <Tooltip title=\"This player is the host. They have the ability to start the game.\">\n                            <StarsIcon fontSize=\"inherit\" />\n                        </Tooltip>\n                    : null}\n                    {you ? <span className={classes.you}>{content}</span> : content}\n                </TableCell>\n            </TableRow>\n        );\n    }\n\n    if (props.matchInfo.starting) {\n        (new Audio(`/countdown/${props.matchInfo.startTimer}.mp3`)).play();\n    }\n\n    let amHost = socket.id.startsWith(props.matchInfo.host);\n\n    return (\n        <div>\n            <IconButton onClick={() => window.location.reload()}>\n                <MeetingRoomIcon />\n            </IconButton>\n            <div className={classes.root}>\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    Room code\n                </Typography>\n                <Typography variant=\"h3\" gutterBottom>\n                    <span className={classes.privacyIcon}>\n                        {props.matchInfo.public ? <Tooltip title=\"This is a public match. Anyone can join this match from the 'Find Match' button on the homepage.\"><PublicIcon /></Tooltip> : <Tooltip title=\"This is a private match. Only people with the room code can join.\"><LockIcon /></Tooltip>}\n                    </span>\n                    {props.matchInfo.code}\n                </Typography>\n\n                {props.matchInfo.starting ?\n                    <Typography variant=\"h4\">Starting in {props.matchInfo.startTimer}...</Typography>\n                :\n                    <Tooltip title={amHost ? 'Begin a timer to start the match. No more players will be able to join.' : 'Only the host can start the match.'}>\n                        <span>\n                            <Button color={amHost ? 'primary' : 'default'} size=\"large\" onClick={() => socket.emit('startMatch')} disabled={!amHost}>Start Match</Button>\n                        </span>\n                    </Tooltip>\n                }\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow className={classes.head}>\n                                <TableCell className={classes.tableCell}>\n                                    Players: {props.matchInfo.players.length}/{props.matchInfo.maxPlayers}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tableBody}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    );\n}\n\nexport default Lobby;","import React from 'react';\nimport { Typography, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './index.css';\n\nconst useStyles = makeStyles({\n    gameInfo: {\n        display: 'flex',\n        width: '100%',\n        marginBottom: 20,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'black',\n        borderBottom: '1px solid #ffffff1f',\n        zIndex: 100,\n        '& div': {\n            flexGrow: 1,\n        },\n    },\n\n    gameInfoTitle: {\n        textAlign: 'center',\n    },\n\n    gameInfoContent: {\n        display: 'flex',\n        alignItems: 'end',\n        justifyContent: 'center',\n        /*textAlign: 'center',\n        '& *': {\n            display: 'inline',\n        },*/\n    },\n\n    title: {\n        textAlign: 'center',\n    },\n\n    colourIndicator: {\n        height: 49,\n    },\n\n    playerArea: {\n        paddingTop: 8,\n        paddingBottom: 8,\n        marginBottom: 16,\n        textAlign: 'center',\n        border: '1px solid #ffffff1f',\n        borderRadius: 10,\n    },\n\n    selfGameImage: {\n        width: 125,\n    },\n\n    otherGameImage: {\n        width: 100,\n    },\n\n    playingGamesContainer: {\n    },\n\n    playingGames: {\n        display: 'flex',\n        maxWidth: 600,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    otherGamesContainer: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    otherGames: {\n        display: 'flex',\n        maxWidth: 600,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    vsMe: {\n        color: 'red',\n    }\n});\n\nfunction GameImage(props) {\n    const classes = useStyles();\n    let colour = Object.keys(props.game.players).find(c => props.playerId.startsWith(props.game.players[c]));\n    let opponent = props.players.find(player => player.id.startsWith(props.game.players[colour == 'a' ? 'b' : 'a']));// props.players.find(player => player.id.startsWith(Object.values(props.game.players).find(player => !props.playerId.startsWith(player))));\n\n    return (\n        <div>\n            <img data-playercolour={props.playerColour} className={`${props.self ? 'self-game ' : ''}${props.self ? classes.selfGameImage : classes.otherGameImage} ${props.self && props.games.length == 1 && props.playerColour == 'b' ? 'game-b' : `game-${colour}`} game${props.game.id}`} />\n            <Typography variant=\"caption\" display=\"block\">\n                Game {props.game.name} vs {props.myId.startsWith(opponent.id) ? <span className={classes.vsMe}>{opponent.name}</span> : opponent.name}\n            </Typography>\n        </div>\n    );\n}\n\nfunction PlayerGames(props) {\n    const classes = useStyles();\n    let gameRowClass = props.self ? classes.playingGames : classes.otherGames;\n\n    return (\n        <div className={classes.playerArea}>\n            {\n                props.self\n                ?\n                <div>\n                    <Typography variant=\"h4\">{props.player.name}</Typography>\n                    <Divider />\n                </div>\n                :\n                <Typography variant=\"h6\" gutterBottom>{props.player.name}</Typography>\n            }\n            <div className={props.self ? classes.playingGamesContainer : classes.otherGamesContainer}>\n                <div className={gameRowClass}>\n                    {props.self ? <img className={`${classes.colourIndicator} colour-indicator-a`} src=\"/a.png\" /> : null}\n                    {props.games.filter(game => props.player.id.startsWith(game.players.a)).map(game => <GameImage self={props.self} game={game} games={props.games} players={props.players} playerColour={'a'} playerId={props.player.id} myId={props.myId} />)}\n                    {props.self ? null : <img className={`${classes.colourIndicator} colour-indicator-a`} src=\"/a.png\" />}\n                </div>\n                {props.self ? <div id=\"controller\" className={classes.controls} /> : null}\n                <div className={gameRowClass}>\n                    <img className={`${classes.colourIndicator} colour-indicator-b`} src=\"/b.png\" />\n                    {props.games.filter(game => props.player.id.startsWith(game.players.b)).map(game => <GameImage self={props.self} game={game} games={props.games} players={props.players} playerColour={'b'} playerId={props.player.id} myId={props.myId} />)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction Match(props) {\n    const classes = useStyles();\n    let selfPlayer = props.players.find(player => props.myId.startsWith(player.id));\n\n    return (\n        <div>\n            <div className={classes.gameInfo}>\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Ongoing games\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <span id=\"gamesLeft\">0</span>\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            /<span id=\"maxGames\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Turn time left\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <span id=\"turnTime\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Turn\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <img height=\"35\" id=\"turnIndicator\" />\n                            <span id=\"turnNumber\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <PlayerGames player={selfPlayer} players={props.players} games={props.games} self={true} myId={props.myId} />\n                {props.players.filter(player => !props.myId.startsWith(player.id)).map(player => (\n                    <PlayerGames player={player} players={props.players} games={props.games} self={false} myId={props.myId} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Match;","import React from 'react';\nimport { Typography, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\n//import { gameNameChars } from '../Match/gameplay';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    gamesContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        '& div': {\n            marginLeft: 25,\n            marginRight: 25,\n        },\n    },\n\n    gameImage: {\n        width: 150,\n    },\n\n    counterImage: {\n        height: 10,\n    },\n\n    you: {\n        color: 'red',\n    },\n\n    otherPlayer: {\n    },\n});\n\nfunction Results(props) {\n    const classes = useStyles();\n\n    let playerClass = player => {\n        return props.myId.startsWith(player.id) ? classes.you : classes.otherPlayer;\n    }\n\n    let winnersStop = 0;\n    for (let i = 1; i < props.results.length; i++) {\n        if (props.results[i].score == props.results[0].score)\n            winnersStop = i;\n        else\n            break;\n    }\n\n    (new Audio('/endMatch.mp3')).play();\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <IconButton onClick={() => window.location.reload()}>\n                    <HomeIcon />\n                </IconButton>\n\n                <Typography variant=\"h2\">\n                    Winner{winnersStop == 0 ? '' : 's'}:\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    {props.results.slice(0, winnersStop+1).map(player => player.name).join(', ')}\n                </Typography>\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {props.results.map(player => (\n                                <TableRow>\n                                    <TableCell className={classes.tableCell}>\n                                        {player.placement}. {props.myId.startsWith(player.id) ? <span className={classes.you}>{player.name}</span> : player.name} with a score of {player.score}.\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Typography variant=\"h3\">\n                    Games\n                </Typography>\n                <div className={classes.gamesContainer}>\n                    {props.games.map(game => (\n                        <div>\n                            <img src={game.src} className={classes.gameImage} />\n                            <Typography variant=\"caption\" display=\"block\">\n                                Game {game.name}\n                                <br />\n                                <span className={playerClass(game.players.a)}>{game.players.a.name}</span> <img className={classes.counterImage} src=\"/a.png\" /> vs <img className={classes.counterImage} src=\"/b.png\" /> <span className={playerClass(game.players.b)}>{game.players.b.name}</span>\n                                <br />\n                                {game.outcome == false ? 'Draw' : <span>Winner: <img className={classes.counterImage} src={`/${game.outcome}.png`} /></span>}\n                            </Typography>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Results;","const images = {\n    a: new Image(),\n    b: new Image(),\n    hover: {},\n    outcomeOverlay: {}\n};\n\nfor (let i of ['a', 'b']) {\n    let src = `/${i}.png`;\n    images[i].src = src;\n    images.hover[i] = new Image();\n    images.hover[i].src = `/hover_${i}.png`;\n}\n\nfor (let i of ['win', 'loss', 'draw']) {\n    let img = new Image();\n    img.src = `/outcome/${i}.png`;\n    images.outcomeOverlay[i] = img;\n}\n\nexport default images;","function getRandomInt(n) {\n    return Math.floor(Math.random() * n);\n}\n\nfunction shuffleString(s) {\n    let arr = s.split('');\n    let n = arr.length;\n\n    for(let i=0 ; i<n-1 ; ++i) {\n        let j = getRandomInt(n);\n        \n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n    s = arr.join('');\n    return s;\n}\n\nexport default shuffleString;","import images from './images';\nimport socket from '../socket';\n\nconst boxSize = 100;\nconst gridlineSize = 4;\nconst boardWidth = 7;\n\nvar canvas = document.createElement('canvas');\ncanvas.width = ((gridlineSize + boxSize) * boardWidth) + gridlineSize;\ncanvas.height = boxSize + (gridlineSize * 2);\nvar ctx = canvas.getContext('2d');\n\nvar slot = null;\nvar turn = 'a';\n\nfunction turnChange(newTurn) {\n    turn = newTurn;\n    slot = null;\n    render();\n}\n\nfunction render(event = null) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //clear canvas\n    ctx.fillStyle = 'white';\n\n    for (let i = 0; i < boardWidth + 1; i++)\n        ctx.fillRect((boxSize+gridlineSize)*i, 0, gridlineSize, canvas.height);\n    for (let i = 0; i < 2; i++)\n        ctx.fillRect(0, (boxSize+gridlineSize)*i, canvas.width, gridlineSize);\n\n    if (event != null) {\n        if (event.type.startsWith('touch'))\n            event = event.changedTouches[0];\n        let bbox = event.target.getBoundingClientRect();\n        let x = (event.clientX - bbox.left - gridlineSize) * (canvas.width / bbox.width);\n        let y = (event.clientY - bbox.top - gridlineSize) * (canvas.height / bbox.height);\n        if (x < 0 || y < 0) return;\n\n        if (y >= boxSize) return;\n        if (x%(boxSize+gridlineSize) >= boxSize) return;\n\n        let newSlot = Math.floor(x/(boxSize+gridlineSize));\n        if (slot != newSlot) {\n            slot = newSlot;\n            socket.emit('hover', slot);\n        }\n    }\n\n    if (slot != null) {\n        let image = images[turn];\n        if (image.complete)\n            ctx.drawImage(image, gridlineSize+((boxSize+gridlineSize)*slot), gridlineSize, boxSize, boxSize);\n    }\n}\n\nfunction move() {\n    socket.emit('move', turn, slot);\n    slot = null;\n    socket.emit('hover', slot);\n    render();\n}\n\nrender();\ncanvas.addEventListener('mousemove', render);\ncanvas.addEventListener('touchstart', render);\ncanvas.addEventListener('touchmove', render);\ncanvas.addEventListener('touchend', move);\ncanvas.addEventListener('mousedown', move);\n\nexport {\n    canvas,\n    turnChange,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Match from './';\nimport Results from '../Results';\nimport shuffleString from './shuffleString';\nimport images from './images';\nimport * as controller from './controller';\n\nconst boxSize = 50;\nconst gridlineSize = 4;\nconst boardWidth = 7;\nconst boardHeight = 6;\nconst gameNameChars = '123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst placeAudio = new Audio('/place.mp3');\nconst otherPlaceAudio = new Audio('/otherPlace.mp3');\nconst gameEndAudio = new Audio('/endGame.mp3');\nconst startTurnAudio = new Audio('/startTurn.mp3');\n\n\nvar matchInfo;\nvar myId;\nvar games = [];\nvar gamesLeft;\nvar intervals = [];\nvar turnNumber = 0;\nvar turn = 'a';\nvar turnTimerEnd = Date.now();\n\nvar canvas = document.createElement('canvas');\ncanvas.width = (boxSize * boardWidth) + ((boardWidth + 1) * gridlineSize);\ncanvas.height = (boxSize + gridlineSize) * (boardHeight + 1);\nvar ctx = canvas.getContext('2d');\n\nfunction showTimer() {\n    let timeLeft = (turnTimerEnd - Date.now()) / 1000;\n    if (timeLeft < 0)\n        timeLeft = 0;\n    document.getElementById('turnTime').innerHTML = timeLeft.toFixed(2);\n}\n\nfunction playMatch(startingMatchInfo, sentId) {\n    myId = sentId;\n    matchInfo = startingMatchInfo;\n    turnNumber = 0;\n    for (let i in startingMatchInfo.games) {\n        let game = startingMatchInfo.games[i];\n        let state = [];\n        for (let y = 0; y < boardHeight; y++) {\n            let column = [];\n            for (let x = 0; x < boardWidth; x++) {\n                column.push(null);\n            }\n            state.push(column);\n        }\n\n        games.push({\n            id: i,\n            name: (i+1 > gameNameChars.length ? `${gameNameChars[~~(i/gameNameChars.length)]}${gameNameChars[i%gameNameChars.length]}` : gameNameChars[i]),\n            players: game.players,\n            state: state,\n        });\n    }\n    gamesLeft = games.length;\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Match players={startingMatchInfo.players} games={games} myId={myId} /></ThemeProvider>, document.getElementById('root'), () => {\n        document.getElementById('controller').appendChild(controller.canvas);\n        controller.canvas.style.touchAction = 'none';\n        document.getElementById('maxGames').innerHTML = gamesLeft;\n        document.getElementById('gamesLeft').innerHTML = gamesLeft;\n        for (let i in games)\n            drawBoardsOfId(i);\n        intervals.timer = setInterval(showTimer, 1000/24);\n        (new Audio('/startMatch.mp3')).play();\n    });\n}\n\nfunction switchTurn(newTurn) {\n    document.getElementById('turnNumber').innerHTML = ++turnNumber;\n    turn = newTurn;\n    turnTimerEnd = Date.now() + matchInfo.turnTime;\n    for (let element of [...document.getElementsByClassName(`game-${newTurn == 'a' ? 'b' : 'a'}`), ...document.getElementsByClassName(`colour-indicator-${newTurn == 'a' ? 'b' : 'a'}`)])\n        element.classList.add('inactive-game');\n    for (let element of [...document.getElementsByClassName(`game-${newTurn}`), ...document.getElementsByClassName(`colour-indicator-${newTurn}`)])\n        element.classList.remove('inactive-game');\n    for (let game of games) {\n        game.hover = null;\n    }\n    document.getElementById('turnIndicator').src = `/${newTurn}.png`;\n    controller.turnChange(newTurn);\n    if (turnNumber > 1)\n        startTurnAudio.play();\n}\n\nfunction hover(gameId, colour, column) {\n    if (colour == turn)\n        games[gameId].hover = column;\n    drawBoardsOfId(gameId);\n}\n\nfunction move(gameId, colour, column, row) {\n    let game = games[gameId];\n    game.state[column][row] = colour;\n    game.hover = null;\n    drawBoardsOfId(gameId);\n    if (!myId.startsWith(game.players[colour]))\n        otherPlaceAudio.play();\n}\n\nfunction takenTurn(colour) {\n    placeAudio.play();\n    if (colour == turn) {\n        for (let i of document.querySelectorAll(`.self-game.game-${colour}`))\n            i.classList.add('inactive-game');\n    }\n}\n\nfunction drawCounter(image, column, row) {\n    if (image.complete)\n        ctx.drawImage(image, ((boxSize+gridlineSize)*Number(column))+gridlineSize, (boxSize+gridlineSize)*(Number(row)+1), boxSize, boxSize);\n}\n\nfunction drawBoard(game, overlayImage = null) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //clear canvas\n\n    //draw gridlines\n    ctx.fillStyle = 'white';\n    for (let i = 0; i <= boardHeight; i++)\n        ctx.fillRect(0, boxSize+((boxSize+gridlineSize)*i), canvas.width, gridlineSize);\n    for (let i = 0; i <= boardWidth; i++)\n        ctx.fillRect((boxSize+gridlineSize)*i, boxSize, gridlineSize, canvas.height-boxSize);\n\n    for (let i in game.state)\n        for (let j in game.state[i]) {\n            let piece = game.state[i][j];\n            if (piece != null) {\n                drawCounter(images[piece], j, i);\n            }\n        }\n    \n    if (game.hover !== null) {\n\n        drawCounter(images[turn], game.hover, -1); //draw counter above board\n\n        //draw counter inside board\n        let row = null;       \n        for (let i = 0; i < boardHeight; i++) {\n            if (game.state[i][game.hover] != null) {\n                row = i - 1;\n                break;\n            }\n        }\n        if (row == -1) //if the top slot was full\n            row = false; //skip this turn\n        if (row == null) //if all the slots were empty\n            row = boardHeight - 1; //use the bottom slot\n        if (row !== false) {\n            if (images.hover[turn].complete) {\n                ctx.globalAlpha = 0.15;\n                ctx.drawImage(images.hover[turn], ((boxSize+gridlineSize)*Number(game.hover))+gridlineSize, boxSize+gridlineSize, boxSize, (boxSize+gridlineSize)*(Number(row)+1)-gridlineSize);\n            }\n            ctx.globalAlpha = 0.5;\n            drawCounter(images[turn], game.hover, row);\n            ctx.globalAlpha = 1; //reset alpha\n        }\n        \n\n    }\n\n    if (overlayImage != null && overlayImage.complete) {\n        ctx.globalAlpha = 0.75;\n        ctx.drawImage(overlayImage, 0, 0, canvas.width, canvas.height);    \n        ctx.globalAlpha = 1; //reset alpha\n    }\n    \n    return canvas.toDataURL();\n}\n\nfunction drawBoardsOfId(id) {\n    let board = drawBoard(games[id]);\n    for (let i of document.getElementsByClassName(`game${id}`))\n        i.src = board;\n}\n\nfunction outcomeDecided(boardId, outcome) {\n    document.getElementById('gamesLeft').innerHTML = --gamesLeft;\n    games[boardId].outcome = outcome;\n\n    for (let i of document.getElementsByClassName(`game${boardId}`)) {\n        i.classList.add('game-outcome-decided');\n        let relativeOutcome, glowColor;\n        if (outcome == false) {\n            relativeOutcome = 'draw';\n            glowColor = 'red';\n        } else if (outcome == i.getAttribute('data-playercolour')) {\n            relativeOutcome = 'win';\n            glowColor = 'green';\n        } else {\n            relativeOutcome = 'loss';\n            glowColor = 'grey';\n        }\n        i.src = drawBoard(games[boardId], images.outcomeOverlay[relativeOutcome]);\n    }\n\n    gameEndAudio.play();\n}\n\nfunction endMatch(results) {\n    for (let i in intervals) {\n        clearInterval(intervals[i]);\n        delete intervals[i];\n    }\n\n    for (let game of games) {\n        game.src = drawBoard(game);\n        for (let i in game.players) {\n            game.players[i] = matchInfo.players.find(player => player.id == game.players[i]);\n        }\n    }\n    games.sort((a, b) => gameNameChars.indexOf(a.name) - gameNameChars.indexOf(b.name));\n\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Results myId={myId} results={results} games={games} /></ThemeProvider>, document.getElementById('root'));\n\n    matchInfo = null;\n    games = [];\n    intervals = [];\n}\n\nexport {\n    playMatch,\n    hover,\n    move,\n    takenTurn,\n    drawBoard,\n    switchTurn,\n    outcomeDecided,\n    endMatch,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport socketIOClient from 'socket.io-client';\nimport serverLocation from './server.json';\nimport showDialog from '../Dialog/show';\nimport Connecting from './Connect/ing';\nimport ConnectFailed from './Connect/Failed';\nimport Home from '../Home';\nimport Lobby from '../Lobby';\nimport * as gameplay from '../Match/gameplay';\n\nvar socket = socketIOClient(serverLocation, {\n    transports: ['websocket'],\n});\nvar connectedOnce = false;\n\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Connecting /></ThemeProvider>, document.getElementById('root'));\n\nsocket.on('connect', () => {\n    if (!connectedOnce) {\n        connectedOnce = true;\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Home /></ThemeProvider>, document.getElementById('root'));\n    }\n});\n\nfunction displayConnectionFail(error) {\n    setTimeout(() => {\n        if (socket.disconnected) {\n            ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ConnectFailed error={error.toString()} /></ThemeProvider>, document.getElementById('root'));\n            socket.disconnect();\n        }\n    }, 10000);\n}\n\nsocket.on('connect_error', displayConnectionFail);\nsocket.on('connect_timeout', displayConnectionFail);\nsocket.on('disconnect', displayConnectionFail);\n\nsocket.on('err', (error='Unknown error', title='Error:') => {\n    showDialog({\n        title: title,\n        description: error,\n    });\n});\n\n/*\nsocket.on('disconnect', () => {\n    setTimeout(() => {\n        alert('Lost connection to the 8connect4 server.');\n        window.location.reload();\n    }, 200);\n});\n*/\n\nsocket.on('joinMatch', () => {\n});\n\nsocket.on('matchUpdate', matchInfo => {\n    if (!matchInfo.started)\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Lobby matchInfo={matchInfo} /></ThemeProvider>, document.getElementById('root'));\n});\n\nsocket.on('matchStart', matchInfo => gameplay.playMatch(matchInfo, socket.id));\nsocket.on('turnSwitch', newTurn => gameplay.switchTurn(newTurn));\nsocket.on('hover', (gameId, colour, column) => gameplay.hover(gameId, colour, column));\nsocket.on('move', (gameId, colour, column, row) => gameplay.move(gameId, colour, column, row));\nsocket.on('takenTurn', colour => gameplay.takenTurn(colour));\nsocket.on('outcomeDecided', (gameId, outcome) => gameplay.outcomeDecided(gameId, outcome));\nsocket.on('endMatch', results => gameplay.endMatch(results));\n\nexport default socket;"],"sourceRoot":""}